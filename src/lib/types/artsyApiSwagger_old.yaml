{
  "info":
    {
      "title": "Artsy Internal API",
      "termsOfService": "https://developers.artsy.net/terms",
      "contact":
        {
          "name": "Artsy API Developers",
          "email": "artsy-api-developers@googlegroups.com",
          "url": "https://developers.artsy.net",
        },
      "version": "v1",
    },
  "swagger": "2.0",
  "produces":
    [
      "application/json",
      "text/plain",
      "text/html",
      "application/pdf",
      "application/octet-stream",
      "application/msword",
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
      "application/zip",
      "image/jpeg",
      "image/png",
      "image/tiff",
      "image/bmp",
    ],
  "host": "api.artsy.net",
  "tags":
    [
      {
        "name": "access_controls",
        "description": "Operations about access_controls",
      },
      {
        "name": "access_token",
        "description": "Operations about access_tokens",
      },
      {
        "name": "account_requests",
        "description": "Operations about account_requests",
      },
      { "name": "admins", "description": "Operations about admins" },
      {
        "name": "artist_career_highlights",
        "description": "Operations about artist_career_highlights",
      },
      {
        "name": "artist_career_highlight",
        "description": "Operations about artist_career_highlights",
      },
      {
        "name": "artist_series",
        "description": "Operations about artist_series",
      },
      { "name": "artist", "description": "Operations about artists" },
      { "name": "artists", "description": "Operations about artists" },
      {
        "name": "artwork_version",
        "description": "Operations about artwork_versions",
      },
      { "name": "artworks", "description": "Operations about artworks" },
      {
        "name": "artworks_discovery",
        "description": "Operations about artworks_discoveries",
      },
      { "name": "artwork", "description": "Operations about artworks" },
      {
        "name": "bank_account",
        "description": "Operations about bank_accounts",
      },
      {
        "name": "bidder_positions",
        "description": "Operations about bidder_positions",
      },
      {
        "name": "bidder_position",
        "description": "Operations about bidder_positions",
      },
      { "name": "bidder", "description": "Operations about bidders" },
      { "name": "bidders", "description": "Operations about bidders" },
      { "name": "bids", "description": "Operations about bids" },
      { "name": "bid", "description": "Operations about bids" },
      {
        "name": "buyers_premiums",
        "description": "Operations about buyers_premiums",
      },
      { "name": "callbacks", "description": "Operations about callbacks" },
      { "name": "collection", "description": "Operations about collections" },
      { "name": "collections", "description": "Operations about collections" },
      {
        "name": "collector_profiles",
        "description": "Operations about collector_profiles",
      },
      {
        "name": "collector_profile",
        "description": "Operations about collector_profiles",
      },
      {
        "name": "collector_profile_summary",
        "description": "Operations about collector_profile_summaries",
      },
      { "name": "credit_card", "description": "Operations about credit_cards" },
      {
        "name": "credit_cards",
        "description": "Operations about credit_cards",
      },
      { "name": "cultures", "description": "Operations about cultures" },
      { "name": "devices", "description": "Operations about devices" },
      { "name": "device", "description": "Operations about devices" },
      {
        "name": "exchange_rates",
        "description": "Operations about exchange_rates",
      },
      { "name": "fair", "description": "Operations about fairs" },
      {
        "name": "fair_organizers",
        "description": "Operations about fair_organizers",
      },
      {
        "name": "fair_organizer",
        "description": "Operations about fair_organizers",
      },
      { "name": "fairs", "description": "Operations about fairs" },
      {
        "name": "featured_links",
        "description": "Operations about featured_links",
      },
      {
        "name": "featured_link",
        "description": "Operations about featured_links",
      },
      { "name": "features", "description": "Operations about features" },
      { "name": "feature", "description": "Operations about features" },
      { "name": "feedback", "description": "Operations about feedback" },
      { "name": "filter", "description": "Operations about filters" },
      {
        "name": "follow_shows",
        "description": "Operations about follow_shows",
      },
      {
        "name": "gene_families",
        "description": "Operations about gene_families",
      },
      { "name": "gene_type", "description": "Operations about gene_types" },
      { "name": "gene_types", "description": "Operations about gene_types" },
      { "name": "gene", "description": "Operations about genes" },
      { "name": "genes", "description": "Operations about genes" },
      { "name": "genome", "description": "Operations about genomes" },
      { "name": "hero_units", "description": "Operations about hero_units" },
      {
        "name": "identity_verifications",
        "description": "Operations about identity_verifications",
      },
      {
        "name": "identity_verification",
        "description": "Operations about identity_verifications",
      },
      {
        "name": "inquiry_request_questions",
        "description": "Operations about inquiry_request_questions",
      },
      {
        "name": "inquiry_request",
        "description": "Operations about inquiry_requests",
      },
      {
        "name": "inquiry_requests",
        "description": "Operations about inquiry_requests",
      },
      { "name": "invoice", "description": "Operations about invoices" },
      { "name": "invoices", "description": "Operations about invoices" },
      { "name": "labs", "description": "Operations about labs" },
      { "name": "maps", "description": "Operations about maps" },
      {
        "name": "marketing_collections",
        "description": "Operations about marketing_collections",
      },
      {
        "name": "marketing_collections_categories",
        "description": "Operations about marketing_collections_categories",
      },
      { "name": "match", "description": "Operations about matches" },
      { "name": "me", "description": "Operations about mes" },
      {
        "name": "merchant_accounts",
        "description": "Operations about merchant_accounts",
      },
      {
        "name": "merchant_account",
        "description": "Operations about merchant_accounts",
      },
      {
        "name": "notification_preferences",
        "description": "Operations about notification_preferences",
      },
      { "name": "pages", "description": "Operations about pages" },
      { "name": "page", "description": "Operations about pages" },
      { "name": "partner", "description": "Operations about partners" },
      {
        "name": "partner_categories",
        "description": "Operations about partner_categories",
      },
      {
        "name": "partner_category",
        "description": "Operations about partner_categories",
      },
      {
        "name": "partner_communications",
        "description": "Operations about partner_communications",
      },
      {
        "name": "partner_communication",
        "description": "Operations about partner_communications",
      },
      {
        "name": "partner_gene_categories",
        "description": "Operations about partner_gene_categories",
      },
      {
        "name": "partner_offer",
        "description": "Operations about partner_offers",
      },
      {
        "name": "partner_offers",
        "description": "Operations about partner_offers",
      },
      {
        "name": "partner_show_events",
        "description": "Operations about partner_show_events",
      },
      {
        "name": "partner_subscription_charges",
        "description": "Operations about partner_subscription_charges",
      },
      {
        "name": "partner_subscription_charge",
        "description": "Operations about partner_subscription_charges",
      },
      {
        "name": "partner_subscription_events",
        "description": "Operations about partner_subscription_events",
      },
      {
        "name": "partner_subscription_event",
        "description": "Operations about partner_subscription_events",
      },
      {
        "name": "partner_subscription_invoices",
        "description": "Operations about partner_subscription_invoices",
      },
      {
        "name": "partner_subscription_invoice",
        "description": "Operations about partner_subscription_invoices",
      },
      {
        "name": "partner_subscription_plans",
        "description": "Operations about partner_subscription_plans",
      },
      {
        "name": "partner_subscription_plan",
        "description": "Operations about partner_subscription_plans",
      },
      {
        "name": "partner_subscriptions",
        "description": "Operations about partner_subscriptions",
      },
      {
        "name": "partner_subscription",
        "description": "Operations about partner_subscriptions",
      },
      {
        "name": "partner_artists",
        "description": "Operations about partner_artists",
      },
      {
        "name": "partner_artist",
        "description": "Operations about partner_artists",
      },
      { "name": "partners", "description": "Operations about partners" },
      {
        "name": "partner_show",
        "description": "Operations about partner_shows",
      },
      { "name": "periods", "description": "Operations about periods" },
      { "name": "period", "description": "Operations about periods" },
      { "name": "profile", "description": "Operations about profiles" },
      { "name": "purchases", "description": "Operations about purchases" },
      { "name": "purchase", "description": "Operations about purchases" },
      { "name": "related", "description": "Operations about relateds" },
      {
        "name": "representative",
        "description": "Operations about representatives",
      },
      {
        "name": "sale_agreements",
        "description": "Operations about sale_agreements",
      },
      {
        "name": "sale_artwork",
        "description": "Operations about sale_artworks",
      },
      {
        "name": "sale_artworks",
        "description": "Operations about sale_artworks",
      },
      { "name": "sale", "description": "Operations about sales" },
      { "name": "sales", "description": "Operations about sales" },
      { "name": "search", "description": "Operations about searches" },
      { "name": "sets", "description": "Operations about sets" },
      { "name": "set", "description": "Operations about sets" },
      { "name": "shortcut", "description": "Operations about shortcuts" },
      { "name": "shortcuts", "description": "Operations about shortcuts" },
      { "name": "show", "description": "Operations about shows" },
      { "name": "shows", "description": "Operations about shows" },
      {
        "name": "site_hero_unit",
        "description": "Operations about site_hero_units",
      },
      {
        "name": "site_hero_units",
        "description": "Operations about site_hero_units",
      },
      {
        "name": "stripe_customer",
        "description": "Operations about stripe_customers",
      },
      { "name": "system", "description": "Operations about systems" },
      { "name": "tag", "description": "Operations about tags" },
      { "name": "tags", "description": "Operations about tags" },
      { "name": "token", "description": "Operations about tokens" },
      {
        "name": "user_art_quiz",
        "description": "Operations about user_art_quizzes",
      },
      {
        "name": "user_fair_actions",
        "description": "Operations about user_fair_actions",
      },
      {
        "name": "user_fair_action",
        "description": "Operations about user_fair_actions",
      },
      {
        "name": "user_interests",
        "description": "Operations about user_interests",
      },
      {
        "name": "user_interest",
        "description": "Operations about user_interests",
      },
      {
        "name": "user_sale_profile",
        "description": "Operations about user_sale_profiles",
      },
      { "name": "user", "description": "Operations about users" },
      { "name": "users", "description": "Operations about users" },
      {
        "name": "verified_representatives",
        "description": "Operations about verified_representatives",
      },
      { "name": "video", "description": "Operations about videos" },
      {
        "name": "viewing_rooms",
        "description": "Operations about viewing_rooms",
      },
      {
        "name": "viewing_room",
        "description": "Operations about viewing_rooms",
      },
      { "name": "xapp_token", "description": "Operations about xapp_tokens" },
      {
        "name": "address_verification",
        "description": "Operations about address_verifications",
      },
      {
        "name": "client_application",
        "description": "Operations about client_applications",
      },
      {
        "name": "fair_booth_import",
        "description": "Operations about fair_booth_imports",
      },
      { "name": "increments", "description": "Operations about increments" },
      { "name": "increment", "description": "Operations about increments" },
      {
        "name": "partner_collector_profile",
        "description": "Operations about partner_collector_profiles",
      },
      {
        "name": "partner_collector_profiles",
        "description": "Operations about partner_collector_profiles",
      },
      { "name": "profiles", "description": "Operations about profiles" },
      {
        "name": "webhook_deliveries",
        "description": "Operations about webhook_deliveries",
      },
      {
        "name": "webhook_delivery",
        "description": "Operations about webhook_deliveries",
      },
    ],
  "paths":
    {
      "/api/v1/access_controls":
        {
          "get":
            {
              "description": "Retrieve access controls.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "property_type",
                    "description": "Property type.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "property_id",
                    "description": "Property id.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve access controls." } },
              "tags": ["access_controls"],
              "operationId": "getApiV1AccessControls",
            },
        },
      "/api/v1/access_token":
        {
          "delete":
            {
              "description": "Expire an OAuth access token.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "access_token",
                    "description": "Access token, defaults to value in the X-Access-Token header.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "204": { "description": "Expire an OAuth access token." } },
              "tags": ["access_token"],
              "operationId": "deleteApiV1AccessToken",
            },
        },
      "/api/v1/account_requests":
        {
          "post":
            {
              "description": "Create an account request, which may be associated with a user.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1AccountRequests",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1AccountRequests" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create an account request, which may be associated with a user.",
                    },
                },
              "tags": ["account_requests"],
              "operationId": "postApiV1AccountRequests",
            },
        },
      "/api/v1/admins/representatives":
        {
          "get":
            {
              "description": "Retrieve all representatives.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "email",
                        "-email",
                        "collector_since",
                        "-collector_since",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all representatives." } },
              "tags": ["admins"],
              "operationId": "getApiV1AdminsRepresentatives",
            },
        },
      "/api/v1/admins/available_representatives":
        {
          "get":
            {
              "description": "Retrieve available representatives.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "email",
                        "-email",
                        "collector_since",
                        "-collector_since",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve available representatives." },
                },
              "tags": ["admins"],
              "operationId": "getApiV1AdminsAvailableRepresentatives",
            },
        },
      "/api/v1/admins":
        {
          "get":
            {
              "description": "Retrieve all admins.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_admin",
                    "description": "Only return admins that are set as admins for any partners.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "email",
                        "-email",
                        "collector_since",
                        "-collector_since",
                      ],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve all admins." } },
              "tags": ["admins"],
              "operationId": "getApiV1Admins",
            },
        },
      "/api/v1/artist_career_highlights":
        {
          "get":
            {
              "description": "Return all artist career highlights for an artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "solo",
                    "description": "Return only solo shows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "group",
                    "description": "Return only group shows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "collected",
                    "description": "Return only major institutions that have collected the artist's works.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Return all artist career highlights for an artist.",
                    },
                },
              "tags": ["artist_career_highlights"],
              "operationId": "getApiV1ArtistCareerHighlights",
            },
        },
      "/api/v1/artist_career_highlight/{id}":
        {
          "delete":
            {
              "description": "Delete an artist career highlight.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist career highlight id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete an artist career highlight." },
                },
              "tags": ["artist_career_highlight"],
              "operationId": "deleteApiV1ArtistCareerHighlightId",
            },
          "put":
            {
              "description": "Update an artist career highlight.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist career highlight id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtistCareerHighlight",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1ArtistCareerHighlight" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an artist career highlight." },
                },
              "tags": ["artist_career_highlight"],
              "operationId": "putApiV1ArtistCareerHighlightId",
            },
        },
      "/api/v1/artist_career_highlight":
        {
          "post":
            {
              "description": "Create an artist career highlight.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1ArtistCareerHighlight",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1ArtistCareerHighlight",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Create an artist career highlight." },
                },
              "tags": ["artist_career_highlight"],
              "operationId": "postApiV1ArtistCareerHighlight",
            },
        },
      "/api/v1/artist_series":
        {
          "get":
            {
              "description": "Retrieve artist series",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve artist series" } },
              "tags": ["artist_series"],
              "operationId": "getApiV1ArtistSeries",
            },
        },
      "/api/v1/artist_series/{id}":
        {
          "get":
            {
              "description": "Retrieve an artist series",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist Series ID",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an artist series" } },
              "tags": ["artist_series"],
              "operationId": "getApiV1ArtistSeriesId",
            },
        },
      "/api/v1/artist/{id}/partners":
        {
          "get":
            {
              "description": "Retrieve all partners that have artworks by an artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "sortable_id",
                        "-sortable_id",
                        "published_artworks_count",
                        "-published_artworks_count",
                      ],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "represented_by",
                    "description": "Only return partners that represent the artist.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all partners that have artworks by an artist.",
                    },
                },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdPartners",
            },
        },
      "/api/v1/artist/{id}/partner_artists":
        {
          "get":
            {
              "description": "Retrieve all partner artist relationships for a partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "sortable_id",
                        "-sortable_id",
                        "published_artworks_count",
                        "-published_artworks_count",
                      ],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "represented_by",
                    "description": "Only return partner-artist relationships where the partner represents the artist.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_biography",
                    "description": "Only return partner-artist relationships where the partner has entered a bio for the artist.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "featured",
                    "description": "Only return featured partner artists.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all partner artist relationships for a partner.",
                    },
                },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdPartnerArtists",
            },
        },
      "/api/v1/artist/{id}/genome":
        {
          "delete":
            {
              "description": "Clear an artist's genome.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Clear an artist's genome." } },
              "tags": ["artist"],
              "operationId": "deleteApiV1ArtistIdGenome",
            },
          "put":
            {
              "description": "Update an artist's genome.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtistIdGenome",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1ArtistIdGenome" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an artist's genome." } },
              "tags": ["artist"],
              "operationId": "putApiV1ArtistIdGenome",
            },
          "get":
            {
              "description": "Retrieve an artist's genome.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an artist's genome." } },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdGenome",
            },
        },
      "/api/v1/artist/{id}/genome/incomplete":
        {
          "put":
            {
              "description": "Mark an artist's genome incomplete.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Mark an artist's genome incomplete." },
                },
              "tags": ["artist"],
              "operationId": "putApiV1ArtistIdGenomeIncomplete",
            },
        },
      "/api/v1/artist/{id}/genome/complete":
        {
          "put":
            {
              "description": "Mark an artist's genome complete.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Mark an artist's genome complete." },
                },
              "tags": ["artist"],
              "operationId": "putApiV1ArtistIdGenomeComplete",
            },
        },
      "/api/v1/artist/{id}/genome/genes":
        {
          "get":
            {
              "description": "Retrieve an artist's genes, sorted by value.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve an artist's genes, sorted by value.",
                    },
                },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdGenomeGenes",
            },
        },
      "/api/v1/artist/{id}/merge":
        {
          "post":
            {
              "description": "Merge two artists (any artworks, follows, and posts)",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtistIdMerge",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1ArtistIdMerge" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Merge two artists (any artworks, follows, and posts)",
                    },
                },
              "tags": ["artist"],
              "operationId": "postApiV1ArtistIdMerge",
            },
        },
      "/api/v1/artist/{id}/duplicates":
        {
          "get":
            {
              "description": "Get a cluster of potentially duplicated artist records (including the specified Artist).",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist's id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get a cluster of potentially duplicated artist records (including the specified Artist).",
                    },
                },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdDuplicates",
            },
        },
      "/api/v1/artist/{id}/image(/{image_version})":
        {
          "get":
            {
              "description": "Get an artist's image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist's id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Get an artist's image." } },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdImage(ImageVersion)",
            },
        },
      "/api/v1/artist":
        {
          "post":
            {
              "description": "Create a new artist.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Artist",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Artist" },
                  },
                ],
              "responses": { "201": { "description": "Create a new artist." } },
              "tags": ["artist"],
              "operationId": "postApiV1Artist",
            },
        },
      "/api/v1/artist/{id}/artworks/all":
        {
          "get":
            {
              "description": "Retrieve deep data for all artist's artworks. Most iconic works appear first, followed by recently published ones.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "gene_id",
                    "description": "Specify a gene id to sort artworks by the value of the gene, followed by recently published ones. Sorts by artwork iconicity by default.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "filter",
                    "description": "Filter the works by criteria, any combination of 'for_sale' and 'not_for_sale'.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve deep data for all artist's artworks. Most iconic works appear first, followed by recently published ones.",
                    },
                },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdArtworksAll",
            },
        },
      "/api/v1/artist/{id}/artworks":
        {
          "get":
            {
              "description": "Retrieve all artist's artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "gene_id",
                    "description": "Specify a gene id to sort artworks by the value of the gene, followed by recently published ones. Sorts by artwork iconicity by default.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "filter",
                    "description": "Filter the works by criteria, any combination of 'for_sale' and 'not_for_sale'.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Return only published artworks.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "An array of artwork ids to exclude from the response.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all artist's artworks." } },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdArtworks",
            },
        },
      "/api/v1/artist/{id}/admin_note":
        {
          "post":
            {
              "description": "Create an artist admin_note.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Create an artist admin_note." } },
              "tags": ["artist"],
              "operationId": "postApiV1ArtistIdAdminNote",
            },
        },
      "/api/v1/artist/{id}/admin_notes":
        {
          "get":
            {
              "description": "Retrieve all artist's admin_notes.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve all artist's admin_notes." },
                },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdAdminNotes",
            },
        },
      "/api/v1/artist/{id}":
        {
          "delete":
            {
              "description": "Delete an existing artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing artist." } },
              "tags": ["artist"],
              "operationId": "deleteApiV1ArtistId",
            },
          "put":
            {
              "description": "Update an existing artist.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Artist",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Artist" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing artist." } },
              "tags": ["artist"],
              "operationId": "putApiV1ArtistId",
            },
          "get":
            {
              "description": "Retrieve an artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve an artist." } },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistId",
            },
        },
      "/api/v1/artist/{id}/artwork_inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve all artwork inquiry requests by a artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-created_at",
                        "created_at",
                        "-outcome",
                        "outcome",
                        "likely_to_purchase",
                        "-likely_to_purchase",
                        "status",
                        "-status",
                        "flagged",
                        "-flagged",
                        "contact_gallery",
                        "-contact_gallery",
                        "status,-likely_to_purchase,created_at",
                        "last_message_received_at",
                        "-last_message_received_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artwork inquiry requests by a artist.",
                    },
                },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdArtworkInquiryRequests",
            },
        },
      "/api/v1/artist/{id}/follow/users":
        {
          "get":
            {
              "description": "Retrieve all users that follow an artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all users that follow an artist.",
                    },
                },
              "tags": ["artist"],
              "operationId": "getApiV1ArtistIdFollowUsers",
            },
        },
      "/api/v1/artists/merge":
        {
          "post":
            {
              "description": "Merge two or more artists",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "responses":
                { "201": { "description": "Merge two or more artists" } },
              "tags": ["artists"],
              "operationId": "postApiV1ArtistsMerge",
            },
        },
      "/api/v1/artists":
        {
          "get":
            {
              "description": "Retrieve artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "ids",
                    "description": "Returns these objects if passed in.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_slugs",
                        "-_slugs",
                        "created_at",
                        "-created_at",
                        "sortable_id",
                        "-sortable_id",
                        "-trending",
                      ],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve artists." } },
              "tags": ["artists"],
              "operationId": "getApiV1Artists",
            },
        },
      "/api/v1/artists/{match}":
        {
          "get":
            {
              "description": "Retrieve a subset of artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_slugs",
                        "-_slugs",
                        "created_at",
                        "-created_at",
                        "sortable_id",
                        "-sortable_id",
                        "-trending",
                      ],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "match",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a subset of artists." } },
              "tags": ["artists"],
              "operationId": "getApiV1ArtistsMatch",
            },
        },
      "/api/v1/artists/popular":
        {
          "get":
            {
              "description": "Retrieve the most followed artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Limit to top n artists.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_followed_artists",
                    "description": "If true, will exclude followed artists.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_artist_ids",
                    "description": "Exclude these ids from results, may result in all artists being excluded.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve the most followed artists." },
                },
              "tags": ["artists"],
              "operationId": "getApiV1ArtistsPopular",
            },
        },
      "/api/v1/artists/trending/scores":
        {
          "get":
            {
              "description": "Retrieve trending artists with full score breakdown.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "n",
                    "description": "Limit to top n artists.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve trending artists with full score breakdown.",
                    },
                },
              "tags": ["artists"],
              "operationId": "getApiV1ArtistsTrendingScores",
            },
        },
      "/api/v1/artists/trending":
        {
          "get":
            {
              "description": "Retrieve trending artists in descending order.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "gene",
                    "description": "Supply a gene filter.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "max_career_stage",
                    "description": "Supply a max career stage filter.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_career_stage",
                    "description": "Supply a min career stage filter.",
                    "type": "integer",
                    "format": "int32",
                    "default": 45,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_forsale_artworks",
                    "description": "Min number of for sale works",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_follow_count",
                    "description": "Min number of followers",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_followed_artists",
                    "description": "If true, will exclude followed artists.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve trending artists in descending order.",
                    },
                },
              "tags": ["artists"],
              "operationId": "getApiV1ArtistsTrending",
            },
        },
      "/api/v1/artwork_version/{id}":
        {
          "get":
            {
              "description": "Retrieve an artwork version.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Version id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an artwork version." } },
              "tags": ["artwork_version"],
              "operationId": "getApiV1ArtworkVersionId",
            },
        },
      "/api/v1/artworks/collections/batch":
        {
          "post":
            {
              "description": "Add / remove artworks to / from collections",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "artwork_ids",
                    "description": "Artwork ids or slugs.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "add_to",
                    "description": "Collection ids or slugs.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "remove_from",
                    "description": "Collection ids or slugs.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Add / remove artworks to / from collections",
                    },
                },
              "tags": ["artworks"],
              "operationId": "postApiV1ArtworksCollectionsBatch",
            },
        },
      "/api/v1/artworks/deleted":
        {
          "get":
            {
              "description": "Retrieve deleted artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve deleted artworks." } },
              "tags": ["artworks"],
              "operationId": "getApiV1ArtworksDeleted",
            },
        },
      "/api/v1/artworks/sellable":
        {
          "get":
            {
              "description": "Retrieve top sellable artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "created_at_since",
                    "description": "Only return artworks created after this timestamp.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_artists_per_page",
                    "description": "Minimum number of artists to feature in results.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_price",
                    "description": "Min artwork price filter.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "max_price",
                    "description": "Max artwork price filter.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_career_stage",
                    "description": "Min artist career stage.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "max_career_stage",
                    "description": "Max artist career stage.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "category",
                    "description": "Artwork category filter.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve top sellable artworks." } },
              "tags": ["artworks"],
              "operationId": "getApiV1ArtworksSellable",
            },
        },
      "/api/v1/artworks":
        {
          "get":
            {
              "description": "Retrieve all not deleted artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "ids",
                    "description": "Returns these objects if passed in.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "created_at_since",
                    "description": "Only return artworks created after this timestamp.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "availability",
                    "description": "Only return artworks with this availability status.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "admin_id",
                    "description": "Only return artworks from partners that are managed by given admin.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_contract_type",
                    "description": "Only return artworks from partners of a given contract_type.",
                    "type": "string",
                    "enum": ["General", "Subscription", "Fair", "Custom"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Return only artworks in given published status.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artist_ids",
                    "description": "Only return artworks by these artists.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "marketable",
                    "description": "Works that are marketable.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_disliked_artworks",
                    "description": "Exclude disliked artworks if authenticated.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve all not deleted artworks." },
                },
              "tags": ["artworks"],
              "operationId": "getApiV1Artworks",
            },
        },
      "/api/v1/artworks_discovery":
        {
          "get":
            {
              "produces": ["application/json"],
              "responses":
                { "200": { "description": "get ArtworksDiscovery(s)" } },
              "tags": ["artworks_discovery"],
              "operationId": "getApiV1ArtworksDiscovery",
            },
        },
      "/api/v1/artwork/{artwork_id}/inventory":
        {
          "put":
            {
              "description": "Create or update an artwork's inventory.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtworkArtworkIdInventory",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1ArtworkArtworkIdInventory",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Create or update an artwork's inventory.",
                    },
                },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkArtworkIdInventory",
            },
        },
      "/api/v1/artwork/{artwork_id}/images/reposition":
        {
          "post":
            {
              "description": "Reposition artwork images.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "image_ids",
                    "description": "Array of artwork image ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Reposition artwork images." } },
              "tags": ["artwork"],
              "operationId": "postApiV1ArtworkArtworkIdImagesReposition",
            },
        },
      "/api/v1/artwork/{artwork_id}/images":
        {
          "get":
            {
              "description": "Retrieve artwork images.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["position"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve artwork images." } },
              "tags": ["artwork"],
              "operationId": "getApiV1ArtworkArtworkIdImages",
            },
        },
      "/api/v1/artwork/{artwork_id}/images/default/{id}":
        {
          "put":
            {
              "description": "Set the default image.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Default image id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Set the default image." } },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkArtworkIdImagesDefaultId",
            },
        },
      "/api/v1/artwork/{artwork_id}/image/{id}":
        {
          "delete":
            {
              "description": "Remove an image from an artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Image id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204": { "description": "Remove an image from an artwork." },
                },
              "tags": ["artwork"],
              "operationId": "deleteApiV1ArtworkArtworkIdImageId",
            },
          "put":
            {
              "description": "Update an artwork image.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Image id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtworkArtworkIdImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1ArtworkArtworkIdImage" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an artwork image." } },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkArtworkIdImageId",
            },
        },
      "/api/v1/artwork/{artwork_id}/image":
        {
          "post":
            {
              "description": "Add an image to an artwork.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtworkArtworkIdImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1ArtworkArtworkIdImage",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Add an image to an artwork." } },
              "tags": ["artwork"],
              "operationId": "postApiV1ArtworkArtworkIdImage",
            },
        },
      "/api/v1/artwork/{artwork_id}/default_image(/{image_version})":
        {
          "get":
            {
              "description": "Get an artwork's default image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Get an artwork's default image." } },
              "tags": ["artwork"],
              "operationId": "getApiV1ArtworkArtworkIdDefaultImage(ImageVersion)",
            },
        },
      "/api/v1/artwork/{artwork_id}/image/{id}(/{image_version})":
        {
          "get":
            {
              "description": "Get an artwork's image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Image id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "description": "Version of the image to download.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Get an artwork's image." } },
              "tags": ["artwork"],
              "operationId": "getApiV1ArtworkArtworkIdImageId(ImageVersion)",
            },
        },
      "/api/v1/artwork/{id}/genome":
        {
          "delete":
            {
              "description": "Clear an artwork's genome.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Clear an artwork's genome." } },
              "tags": ["artwork"],
              "operationId": "deleteApiV1ArtworkIdGenome",
            },
          "put":
            {
              "description": "Update an artwork's genome.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtworkIdGenome",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1ArtworkIdGenome" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an artwork's genome." } },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkIdGenome",
            },
          "get":
            {
              "description": "Retrieve an artwork's genome.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an artwork's genome." } },
              "tags": ["artwork"],
              "operationId": "getApiV1ArtworkIdGenome",
            },
        },
      "/api/v1/artwork/{id}/genome/incomplete":
        {
          "put":
            {
              "description": "Mark an artwork's genome incomplete.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Mark an artwork's genome incomplete." },
                },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkIdGenomeIncomplete",
            },
        },
      "/api/v1/artwork/{id}/genome/complete":
        {
          "put":
            {
              "description": "Mark an artwork's genome complete.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Mark an artwork's genome complete." },
                },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkIdGenomeComplete",
            },
        },
      "/api/v1/artwork/{id}/view":
        {
          "delete":
            {
              "description": "Delete a recorded view of an artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete a recorded view of an artwork." },
                },
              "tags": ["artwork"],
              "operationId": "deleteApiV1ArtworkIdView",
            },
          "post":
            {
              "description": "Record a view of an artwork.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Record a view of an artwork." } },
              "tags": ["artwork"],
              "operationId": "postApiV1ArtworkIdView",
            },
        },
      "/api/v1/artwork":
        {
          "post":
            {
              "description": "Create an artwork.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Artwork",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Artwork" },
                  },
                ],
              "responses": { "201": { "description": "Create an artwork." } },
              "tags": ["artwork"],
              "operationId": "postApiV1Artwork",
            },
        },
      "/api/v1/artwork/{id}":
        {
          "delete":
            {
              "description": "Delete an artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "permanent",
                    "description": "Permanently delete artwork.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses": { "204": { "description": "Delete an artwork." } },
              "tags": ["artwork"],
              "operationId": "deleteApiV1ArtworkId",
            },
          "put":
            {
              "description": "Update an existing artwork.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Artwork",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Artwork" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing artwork." } },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkId",
            },
          "get":
            {
              "description": "Retrieve an artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "include_deleted",
                    "description": "If true, will allow admins/trusted apps to retrieve deleted works.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve an artwork." } },
              "tags": ["artwork"],
              "operationId": "getApiV1ArtworkId",
            },
        },
      "/api/v1/artwork/{id}/tags":
        {
          "put":
            {
              "description": "Add/remove tags to an artwork.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "tags",
                    "description": "Artwork tags.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Add/remove tags to an artwork." } },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkIdTags",
            },
        },
      "/api/v1/artwork/{id}/artwork_inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve all artwork inquiry requests for an artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-created_at",
                        "created_at",
                        "-outcome",
                        "outcome",
                        "likely_to_purchase",
                        "-likely_to_purchase",
                        "status",
                        "-status",
                        "flagged",
                        "-flagged",
                        "contact_gallery",
                        "-contact_gallery",
                        "status,-likely_to_purchase,created_at",
                        "last_message_received_at",
                        "-last_message_received_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artwork inquiry requests for an artwork.",
                    },
                },
              "tags": ["artwork"],
              "operationId": "getApiV1ArtworkIdArtworkInquiryRequests",
            },
        },
      "/api/v1/artwork/{artwork_id}/edition_set/{id}/inventory":
        {
          "put":
            {
              "description": "Create or update an edition set's inventory.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Edition set id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtworkArtworkIdEditionSetIdInventory",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1ArtworkArtworkIdEditionSetIdInventory",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Create or update an edition set's inventory.",
                    },
                },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkArtworkIdEditionSetIdInventory",
            },
        },
      "/api/v1/artwork/{artwork_id}/edition_set/{id}":
        {
          "delete":
            {
              "description": "Delete an existing edition set.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Edition set id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing edition set." } },
              "tags": ["artwork"],
              "operationId": "deleteApiV1ArtworkArtworkIdEditionSetId",
            },
          "put":
            {
              "description": "Update an existing edition set.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Edition set id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtworkArtworkIdEditionSet",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1ArtworkArtworkIdEditionSet",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing edition set." } },
              "tags": ["artwork"],
              "operationId": "putApiV1ArtworkArtworkIdEditionSetId",
            },
        },
      "/api/v1/artwork/{artwork_id}/edition_set":
        {
          "post":
            {
              "description": "Create an artwork edition set.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ArtworkArtworkIdEditionSet",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1ArtworkArtworkIdEditionSet",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Create an artwork edition set." } },
              "tags": ["artwork"],
              "operationId": "postApiV1ArtworkArtworkIdEditionSet",
            },
        },
      "/api/v1/bank_account/{id}":
        {
          "get":
            {
              "description": "Retrieve a bank account.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a bank account." } },
              "tags": ["bank_account"],
              "operationId": "getApiV1BankAccountId",
            },
          "put":
            {
              "description": "Update a bank account.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Bank account id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1BankAccount",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1BankAccount" },
                  },
                ],
              "responses":
                { "200": { "description": "Update a bank account." } },
              "tags": ["bank_account"],
              "operationId": "putApiV1BankAccountId",
            },
        },
      "/api/v1/bank_account":
        {
          "post":
            {
              "description": "Add a bank account.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1BankAccount",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1BankAccount" },
                  },
                ],
              "responses": { "201": { "description": "Add a bank account." } },
              "tags": ["bank_account"],
              "operationId": "postApiV1BankAccount",
            },
        },
      "/api/v1/bidder_positions":
        {
          "get":
            {
              "description": "Retrieve bidder positions.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_artwork_id",
                    "description": "SaleArtwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User placing bids.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "all",
                    "description": "Return all Bidder Position fields. Default is false.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "retracted",
                    "description": "Returns Bidder Positions that have (or have not) been retracted.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-max_bid_amount_cents",
                        "max_bid_amount_cents",
                        "created_at",
                        "-created_at",
                        "-max_bid_amount_cents,created_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve bidder positions." } },
              "tags": ["bidder_positions"],
              "operationId": "getApiV1BidderPositions",
            },
        },
      "/api/v1/bidder_position/{id}/retract":
        {
          "put":
            {
              "description": "Retract a bidder position.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Position id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1BidderPositionIdRetract",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1BidderPositionIdRetract",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Retract a bidder position." } },
              "tags": ["bidder_position"],
              "operationId": "putApiV1BidderPositionIdRetract",
            },
        },
      "/api/v1/bidder_position/{id}":
        {
          "get":
            {
              "description": "Retrieve a bidder position.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Position id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a bidder position." } },
              "tags": ["bidder_position"],
              "operationId": "getApiV1BidderPositionId",
            },
        },
      "/api/v1/bidder_position":
        {
          "post":
            {
              "description": "Place a bid with a maximum amount in cents.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1BidderPosition",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1BidderPosition" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Place a bid with a maximum amount in cents.",
                    },
                },
              "tags": ["bidder_position"],
              "operationId": "postApiV1BidderPosition",
            },
        },
      "/api/v1/bidder/{id}":
        {
          "put":
            {
              "description": "Register to bid.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Bidder id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Bidder",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Bidder" },
                  },
                ],
              "responses": { "200": { "description": "Register to bid." } },
              "tags": ["bidder"],
              "operationId": "putApiV1BidderId",
            },
          "get":
            {
              "description": "Retrieve a bidder registration.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Bidder id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a bidder registration." } },
              "tags": ["bidder"],
              "operationId": "getApiV1BidderId",
            },
        },
      "/api/v1/bidder":
        {
          "post":
            {
              "description": "Register to bid.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Bidder",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Bidder" },
                  },
                ],
              "responses": { "201": { "description": "Register to bid." } },
              "tags": ["bidder"],
              "operationId": "postApiV1Bidder",
            },
          "get":
            {
              "description": "Find a bidder registration by phone number or paddle number.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "number",
                    "description": "Bidder phone number or paddle number.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Find a bidder registration by phone number or paddle number.",
                    },
                },
              "tags": ["bidder"],
              "operationId": "getApiV1Bidder",
            },
        },
      "/api/v1/bidders":
        {
          "get":
            {
              "description": "Retrieve all bidder registrations. Optionally scope by Sale or User.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User registered as bidder.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      ["created_at", "-created_at", "-last_bid_placed_at"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all bidder registrations. Optionally scope by Sale or User.",
                    },
                },
              "tags": ["bidders"],
              "operationId": "getApiV1Bidders",
            },
        },
      "/api/v1/bids":
        {
          "get":
            {
              "description": "Retrieve bids.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "bidder_position_id",
                    "description": "Bidder position id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_artwork_id",
                    "description": "Sale artwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-number",
                        "number",
                        "-amount_cents,-_id",
                        "amount_cents,-_id",
                        "-_id",
                      ],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve bids." } },
              "tags": ["bids"],
              "operationId": "getApiV1Bids",
            },
        },
      "/api/v1/bid/{id}":
        {
          "get":
            {
              "description": "Retrieve a bid.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Bid id, or the id/key of the LotEvent::MaxBidPlaced.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve a bid." } },
              "tags": ["bid"],
              "operationId": "getApiV1BidId",
            },
        },
      "/api/v1/buyers_premiums":
        {
          "get":
            {
              "description": "Retrieve buyer's premiums.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "include_deleted",
                    "description": "If true, will retrieve all including deleted premiums.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve buyer's premiums." } },
              "tags": ["buyers_premiums"],
              "operationId": "getApiV1BuyersPremiums",
            },
        },
      "/api/v1/callbacks/stripe_connect":
        {
          "post":
            {
              "description": "Receive Connect webhooks from Stripe.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "header",
                    "name": "HTTP_STRIPE_SIGNATURE",
                    "description": "Stripe request signature",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1CallbacksStripeConnect",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1CallbacksStripeConnect",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Receive Connect webhooks from Stripe." },
                },
              "tags": ["callbacks"],
              "operationId": "postApiV1CallbacksStripeConnect",
            },
        },
      "/api/v1/callbacks/stripe":
        {
          "post":
            {
              "description": "Receive webhooks from Stripe.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "header",
                    "name": "HTTP_STRIPE_SIGNATURE",
                    "description": "Stripe request signature",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1CallbacksStripe",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1CallbacksStripe" },
                  },
                ],
              "responses":
                { "201": { "description": "Receive webhooks from Stripe." } },
              "tags": ["callbacks"],
              "operationId": "postApiV1CallbacksStripe",
            },
        },
      "/api/v1/callbacks/segment":
        {
          "post":
            {
              "description": "Webhook for receiving updates from Segment",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "responses":
                {
                  "201":
                    {
                      "description": "Webhook for receiving updates from Segment",
                    },
                },
              "tags": ["callbacks"],
              "operationId": "postApiV1CallbacksSegment",
            },
        },
      "/api/v1/callbacks/jumio":
        {
          "post":
            {
              "description": "Receive and process webhooks from Jumio",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1CallbacksJumio",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1CallbacksJumio" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Receive and process webhooks from Jumio",
                    },
                },
              "tags": ["callbacks"],
              "operationId": "postApiV1CallbacksJumio",
            },
        },
      "/api/v1/callbacks/gemini":
        {
          "post":
            {
              "description": "Receive webhook from Gemini Image Processing Service.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1CallbacksGemini",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1CallbacksGemini" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Receive webhook from Gemini Image Processing Service.",
                    },
                },
              "tags": ["callbacks"],
              "operationId": "postApiV1CallbacksGemini",
            },
        },
      "/api/v1/callbacks/braze":
        {
          "post":
            {
              "description": "Webhook for receiving updates from Braze",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1CallbacksBraze",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1CallbacksBraze" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Webhook for receiving updates from Braze",
                    },
                },
              "tags": ["callbacks"],
              "operationId": "postApiV1CallbacksBraze",
            },
        },
      "/api/v1/collection/{id}/artists":
        {
          "get":
            {
              "description": "Retrieve an existing collection's artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Collection id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "artist_ids",
                    "description": "Artist ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_personal_artists",
                    "description": "Include artists that have been created by the user.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_slugs",
                        "-_slugs",
                        "created_at",
                        "-created_at",
                        "sortable_id",
                        "-sortable_id",
                        "-trending",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve an existing collection's artists.",
                    },
                },
              "tags": ["collection"],
              "operationId": "getApiV1CollectionIdArtists",
            },
        },
      "/api/v1/collection/{id}":
        {
          "delete":
            {
              "description": "Delete an existing collection.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Collection id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing collection." } },
              "tags": ["collection"],
              "operationId": "deleteApiV1CollectionId",
            },
          "put":
            {
              "description": "Update a collection.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Collection id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Collection",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Collection" },
                  },
                ],
              "responses": { "200": { "description": "Update a collection." } },
              "tags": ["collection"],
              "operationId": "putApiV1CollectionId",
            },
          "get":
            {
              "description": "Retrieve an existing collection.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Collection id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "private",
                    "description": "Include private collections.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve an existing collection." },
                },
              "tags": ["collection"],
              "operationId": "getApiV1CollectionId",
            },
        },
      "/api/v1/collection":
        {
          "post":
            {
              "description": "Create a collection.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Collection",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Collection" },
                  },
                ],
              "responses": { "201": { "description": "Create a collection." } },
              "tags": ["collection"],
              "operationId": "postApiV1Collection",
            },
        },
      "/api/v1/collection/{collection_id}/artwork/{id}":
        {
          "delete":
            {
              "description": "Remove an artwork from a collection.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "collection_id",
                    "description": "Collection id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Remove an artwork from a collection." },
                },
              "tags": ["collection"],
              "operationId": "deleteApiV1CollectionCollectionIdArtworkId",
            },
          "post":
            {
              "description": "Add an artwork to a collection.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "collection_id",
                    "description": "Collection id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1CollectionCollectionIdArtwork",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1CollectionCollectionIdArtwork",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Add an artwork to a collection." } },
              "tags": ["collection"],
              "operationId": "postApiV1CollectionCollectionIdArtworkId",
            },
        },
      "/api/v1/collection/{collection_id}/artworks":
        {
          "get":
            {
              "description": "Retrieve artworks within a collection.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "collection_id",
                    "description": "Collection id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "private",
                    "description": "Include private collections.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artworks",
                    "description": "Artworks to include.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Limit artworks to those exhibiting at the specified fair.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Limit artworks to those in the specified sale.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "in_auction",
                    "description": "Limit artworks to those that are currently biddable in an auction.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_purchased_artworks",
                    "description": "Exclude artworks that have been purchased on Artsy and automatically added to the collection.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "all",
                    "description": "Return all artwork properties to privileged callers.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "When true, only return for-sale artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "price_min_major_usd",
                    "description": "Minimum price in USD dollars.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "price_max_major_usd",
                    "description": "Maximum price in USD dollars.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      ["position", "-position", "created_at", "-created_at"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve artworks within a collection." },
                },
              "tags": ["collection"],
              "operationId": "getApiV1CollectionCollectionIdArtworks",
            },
        },
      "/api/v1/collections":
        {
          "get":
            {
              "description": "Retrieve user's collections.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "private",
                    "description": "Include private collections (will return both public and private collections if set to true).",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "saves",
                    "description": "Include only saves collections.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "default",
                    "description": "Include only default collections.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork slug or id. If passed in, API will return collections (if any) the artwork appears in.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "updated_at",
                        "-updated_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve user's collections." } },
              "tags": ["collections"],
              "operationId": "getApiV1Collections",
            },
        },
      "/api/v1/collector_profiles":
        {
          "get":
            {
              "description": "Retrieve collector profiles.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "user_id",
                    "description": "Only return the collector profile for a given user.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "inquired_partner_id",
                    "description": "Only return collector profiles for users that started inquiries for a given partner",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "email",
                    "description": "Only return collector profiles for a given email.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "name_contains",
                    "description": "Returns collector profiles for inquirers that contain a given term",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve collector profiles." } },
              "tags": ["collector_profiles"],
              "operationId": "getApiV1CollectorProfiles",
            },
        },
      "/api/v1/collector_profile/{id}":
        {
          "put":
            {
              "description": "Update an existing collector profile.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Collector profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1CollectorProfile",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1CollectorProfile" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing collector profile." },
                },
              "tags": ["collector_profile"],
              "operationId": "putApiV1CollectorProfileId",
            },
        },
      "/api/v1/collector_profile_summary":
        {
          "get":
            {
              "description": "Retrieve a summary of a collector profile/artwork combination.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "collector_profile_id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a summary of a collector profile/artwork combination.",
                    },
                },
              "tags": ["collector_profile_summary"],
              "operationId": "getApiV1CollectorProfileSummary",
            },
        },
      "/api/v1/credit_card/{id}":
        {
          "get":
            {
              "description": "Retrieve a credit card.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Card id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a credit card." } },
              "tags": ["credit_card"],
              "operationId": "getApiV1CreditCardId",
            },
        },
      "/api/v1/credit_cards":
        {
          "get":
            {
              "description": "Retrieve credit cards.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "owner_type",
                    "description": "Credit card owner type. Limits to returning only cards that belong to User or Partner.",
                    "type": "string",
                    "enum": ["User", "Partner"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "Only return credit cards for a given user.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Only return credit cards for a given partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "name",
                        "-name",
                        "brand",
                        "-brand",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve credit cards." } },
              "tags": ["credit_cards"],
              "operationId": "getApiV1CreditCards",
            },
        },
      "/api/v1/cultures":
        {
          "get":
            {
              "description": "Retrieve cultures.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "created_at",
                        "-created_at",
                        "updated_at",
                        "-updated_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "nationalities",
                    "description": "Restrict to cultures which can serve as nationalities for artists (default: false).",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve cultures." } },
              "tags": ["cultures"],
              "operationId": "getApiV1Cultures",
            },
        },
      "/api/v1/devices":
        {
          "get":
            {
              "description": "Retrieve devices.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "Only return devices for a given user.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve devices." } },
              "tags": ["devices"],
              "operationId": "getApiV1Devices",
            },
        },
      "/api/v1/device/{id}":
        {
          "delete":
            {
              "description": "Delete an existing device.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Existing device.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing device." } },
              "tags": ["device"],
              "operationId": "deleteApiV1DeviceId",
            },
          "get":
            {
              "description": "Retrieve an existing device.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Existing device.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an existing device." } },
              "tags": ["device"],
              "operationId": "getApiV1DeviceId",
            },
          "put":
            {
              "description": "Update an existing device.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Existing device.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Device",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Device" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing device." } },
              "tags": ["device"],
              "operationId": "putApiV1DeviceId",
            },
        },
      "/api/v1/device":
        {
          "post":
            {
              "description": "Create or update a device.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Device",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Device" },
                  },
                ],
              "responses":
                { "201": { "description": "Create or update a device." } },
              "tags": ["device"],
              "operationId": "postApiV1Device",
            },
        },
      "/api/v1/exchange_rates":
        {
          "get":
            {
              "description": "Retrieve latest exchange rates.",
              "produces": ["application/json"],
              "responses":
                { "200": { "description": "Retrieve latest exchange rates." } },
              "tags": ["exchange_rates"],
              "operationId": "getApiV1ExchangeRates",
            },
        },
      "/api/v1/fair/{id}/shows":
        {
          "get":
            {
              "description": "Retrieve all fair's shows.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "partner",
                    "description": "A partner. Returns only shows from the fair by that partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_region",
                    "description": "A region. Returns only booths of partners from that region.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "private_partner",
                    "description": "A boolean. Returns only booths with the specified value for private_partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist",
                    "description": "An artist. Returns only shows from the fair by that artist.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "section",
                    "description": "A fair section. Returns only booths in the specified section.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artworks",
                    "description": "If true, returns only booths with artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "start_at",
                        "-start_at",
                        "end_at",
                        "-end_at",
                        "updated_at",
                        "-updated_at",
                        "name",
                        "-name",
                        "featured",
                        "-featured",
                        "sortable_name",
                        "-sortable_name",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all fair's shows." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairIdShows",
            },
        },
      "/api/v1/fair/{id}/sections":
        {
          "get":
            {
              "description": "Fair's sections.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Fair's sections." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairIdSections",
            },
        },
      "/api/v1/fair/{id}/partners":
        {
          "get":
            {
              "description": "Fair's partners.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "partner_region",
                    "description": "Partner region.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "private_partner",
                    "description": "Partners with a private partner type.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["name", "-name"],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Fair's partners." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairIdPartners",
            },
        },
      "/api/v1/fair/{id}":
        {
          "delete":
            {
              "description": "Delete an existing fair.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing fair." } },
              "tags": ["fair"],
              "operationId": "deleteApiV1FairId",
            },
          "put":
            {
              "description": "Update an existing fair.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Fair",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Fair" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing fair." } },
              "tags": ["fair"],
              "operationId": "putApiV1FairId",
            },
          "get":
            {
              "description": "Retrieve a fair.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve a fair." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairId",
            },
        },
      "/api/v1/fair/{fair_id}/image":
        {
          "put":
            {
              "description": "Modify the image on a fair.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1FairFairIdImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1FairFairIdImage" },
                  },
                ],
              "responses":
                { "200": { "description": "Modify the image on a fair." } },
              "tags": ["fair"],
              "operationId": "putApiV1FairFairIdImage",
            },
          "post":
            {
              "description": "Add an image to a fair.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1FairFairIdImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1FairFairIdImage" },
                  },
                ],
              "responses":
                { "201": { "description": "Add an image to a fair." } },
              "tags": ["fair"],
              "operationId": "postApiV1FairFairIdImage",
            },
        },
      "/api/v1/fair":
        {
          "post":
            {
              "description": "Create a new fair.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Fair",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Fair" },
                  },
                ],
              "responses": { "201": { "description": "Create a new fair." } },
              "tags": ["fair"],
              "operationId": "postApiV1Fair",
            },
        },
      "/api/v1/fair/{id}/artists":
        {
          "get":
            {
              "description": "Fair's artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "section",
                    "description": "Fair section.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_region",
                    "description": "Partner region.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["name", "-name"],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Fair's artists." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairIdArtists",
            },
        },
      "/api/v1/fair/{fair_id}/fair_event/{id}":
        {
          "delete":
            {
              "description": "Delete an existing fair event.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "FairEvent id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing fair event." } },
              "tags": ["fair"],
              "operationId": "deleteApiV1FairFairIdFairEventId",
            },
          "put":
            {
              "description": "Update an existing fair event.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "FairEvent id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1FairFairIdFairEvent",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1FairFairIdFairEvent" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing fair event." } },
              "tags": ["fair"],
              "operationId": "putApiV1FairFairIdFairEventId",
            },
          "get":
            {
              "description": "Retrieve a fair event.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "FairEvent id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a fair event." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairFairIdFairEventId",
            },
        },
      "/api/v1/fair/{fair_id}/fair_event":
        {
          "post":
            {
              "description": "Create a new fair event.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1FairFairIdFairEvent",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1FairFairIdFairEvent" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new fair event." } },
              "tags": ["fair"],
              "operationId": "postApiV1FairFairIdFairEvent",
            },
        },
      "/api/v1/fair/{fair_id}/fair_events":
        {
          "get":
            {
              "description": "Retrieve all fair events.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "fair_event_group_id",
                    "description": "Fair event group id.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all fair events." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairFairIdFairEvents",
            },
        },
      "/api/v1/fair/{fair_id}/fair_event_group":
        {
          "post":
            {
              "description": "Create a new fair event group.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1FairFairIdFairEventGroup",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1FairFairIdFairEventGroup",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new fair event group." } },
              "tags": ["fair"],
              "operationId": "postApiV1FairFairIdFairEventGroup",
            },
        },
      "/api/v1/fair/{fair_id}/fair_event_group/{id}":
        {
          "get":
            {
              "description": "Retrieve a fair event group.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "FairEventGroup id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a fair event group." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairFairIdFairEventGroupId",
            },
        },
      "/api/v1/fair/{fair_id}/fair_event_groups":
        {
          "get":
            {
              "description": "Retrieve all fair event groups.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all fair event groups." } },
              "tags": ["fair"],
              "operationId": "getApiV1FairFairIdFairEventGroups",
            },
        },
      "/api/v1/fair_organizers":
        {
          "get":
            {
              "description": "Retrieve all fair organizers.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["name", "-created_at"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all fair organizers." } },
              "tags": ["fair_organizers"],
              "operationId": "getApiV1FairOrganizers",
            },
        },
      "/api/v1/fair_organizer/{id}":
        {
          "get":
            {
              "description": "Retrieve a fair organizer.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair organizer ID",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a fair organizer." } },
              "tags": ["fair_organizer"],
              "operationId": "getApiV1FairOrganizerId",
            },
          "put":
            {
              "description": "Update a fair organizer.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair organizer id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1FairOrganizer",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1FairOrganizer" },
                  },
                ],
              "responses":
                { "200": { "description": "Update a fair organizer." } },
              "tags": ["fair_organizer"],
              "operationId": "putApiV1FairOrganizerId",
            },
          "delete":
            {
              "description": "Delete a fair organizer.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Fair organizer id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a fair organizer." } },
              "tags": ["fair_organizer"],
              "operationId": "deleteApiV1FairOrganizerId",
            },
        },
      "/api/v1/fair_organizer":
        {
          "post":
            {
              "description": "Create a fair organizer.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1FairOrganizer",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1FairOrganizer" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a fair organizer." } },
              "tags": ["fair_organizer"],
              "operationId": "postApiV1FairOrganizer",
            },
        },
      "/api/v1/fairs":
        {
          "get":
            {
              "description": "Retrieve all fairs.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Limit to fairs that are 'current', 'running', 'closed' or 'upcoming'.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "active",
                    "description": "Limit to fairs that are active.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "near",
                    "description": "Coordinates to find fairs closest to.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "max_distance",
                    "description": "Max distance to use when geo-locating fairs, defaults to 75km.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_organizer_id",
                    "description": "Only return fairs that belong to this fair organizer.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_full_feature",
                    "description": "Only return fairs that have full features",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_homepage_section",
                    "description": "Only return fairs that have homepage sections",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_listing",
                    "description": "Only return fairs that should have a listing",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "id",
                    "description": "Only return fairs that match passed in ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "start_at",
                        "-start_at",
                        "name",
                        "-name",
                      ],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve all fairs." } },
              "tags": ["fairs"],
              "operationId": "getApiV1Fairs",
            },
        },
      "/api/v1/featured_links":
        {
          "get":
            {
              "description": "Get all links, optionally by label, item_type, or owner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["created_at", "-created_at", "title", "-title"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get all links, optionally by label, item_type, or owner.",
                    },
                },
              "tags": ["featured_links"],
              "operationId": "getApiV1FeaturedLinks",
            },
        },
      "/api/v1/featured_link/{id}":
        {
          "delete":
            {
              "description": "Delete an existing link.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Featured Link id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing link." } },
              "tags": ["featured_link"],
              "operationId": "deleteApiV1FeaturedLinkId",
            },
          "put":
            {
              "description": "Update an existing link.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Featured Link id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1FeaturedLink",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1FeaturedLink" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing link." } },
              "tags": ["featured_link"],
              "operationId": "putApiV1FeaturedLinkId",
            },
          "get":
            {
              "description": "Retrieve an existing link.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Featured Link id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an existing link." } },
              "tags": ["featured_link"],
              "operationId": "getApiV1FeaturedLinkId",
            },
        },
      "/api/v1/featured_link":
        {
          "post":
            {
              "description": "Create a new link.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1FeaturedLink",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1FeaturedLink" },
                  },
                ],
              "responses": { "201": { "description": "Create a new link." } },
              "tags": ["featured_link"],
              "operationId": "postApiV1FeaturedLink",
            },
        },
      "/api/v1/features":
        {
          "get":
            {
              "description": "Retrieve features.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["name", "-name", "created_at", "-created_at"],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve features." } },
              "tags": ["features"],
              "operationId": "getApiV1Features",
            },
        },
      "/api/v1/feature/{id}/image(/{image_version})":
        {
          "get":
            {
              "description": "Get a feature's image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Feature id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "description": "Image version.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Get a feature's image." } },
              "tags": ["feature"],
              "operationId": "getApiV1FeatureIdImage(ImageVersion)",
            },
        },
      "/api/v1/feature/{id}":
        {
          "delete":
            {
              "description": "Delete an existing feature.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Feature id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing feature." } },
              "tags": ["feature"],
              "operationId": "deleteApiV1FeatureId",
            },
          "get":
            {
              "description": "Retrieve an existing feature.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Feature id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an existing feature." } },
              "tags": ["feature"],
              "operationId": "getApiV1FeatureId",
            },
          "put":
            {
              "description": "Update an existing feature.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Feature id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Feature",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Feature" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing feature." } },
              "tags": ["feature"],
              "operationId": "putApiV1FeatureId",
            },
        },
      "/api/v1/feature":
        {
          "post":
            {
              "description": "Create a feature.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Feature",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Feature" },
                  },
                ],
              "responses": { "201": { "description": "Create a feature." } },
              "tags": ["feature"],
              "operationId": "postApiV1Feature",
            },
        },
      "/api/v1/feedback":
        {
          "post":
            {
              "description": "Create feedback.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Feedback",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Feedback" },
                  },
                ],
              "responses": { "201": { "description": "Create feedback." } },
              "tags": ["feedback"],
              "operationId": "postApiV1Feedback",
            },
        },
      "/api/v1/filter/sale_artworks":
        {
          "get":
            {
              "description": "Filtered sale artworks search.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "aggregations",
                    "description": "Aggregations.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artist_ids",
                    "description": "Artist ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "biddable_sale",
                    "description": "Filter to sale biddable status.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "estimate_range",
                    "description": "Auction lot estimate range.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "gene_ids",
                    "description": "Gene id array",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_artworks_by_followed_artists",
                    "description": "If true, will only include artworks by artists the user is following.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Result page",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "marketable",
                    "description": "Works that are marketable.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of results to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "minimum": 0,
                    "maximum": 100,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sorting criteria",
                    "type": "string",
                    "default": "position",
                    "enum":
                      [
                        "position",
                        "-position",
                        "searchable_estimate",
                        "-searchable_estimate",
                        "bidder_positions_count",
                        "-bidder_positions_count",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Filtered sale artworks search." } },
              "tags": ["filter"],
              "operationId": "getApiV1FilterSaleArtworks",
            },
        },
      "/api/v1/filter/artworks":
        {
          "get":
            {
              "description": "Filtered artworks search.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "acquireable",
                    "description": "When true, will only return works available for ecommerce purchase.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "additional_gene_ids",
                    "description": "Gene id array, combined via OR",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "aggregations",
                    "description": "Aggregations.",
                    "type": "array",
                    "items":
                      {
                        "type": "string",
                        "enum":
                          [
                            "medium",
                            "followed_artists",
                            "attribution_class",
                            "dimension_range",
                            "for_sale",
                            "gallery",
                            "institution",
                            "partner",
                            "period",
                            "major_period",
                            "price_range",
                            "simple_price_histogram",
                            "color",
                            "total",
                            "artist",
                            "merchandisable_artists",
                            "location_city",
                            "artist_nationality",
                            "materials_terms",
                            "artist_series",
                          ],
                      },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artist_ids",
                    "description": "Artist ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artist_nationalities",
                    "description": "Artist nationalities",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_series_id",
                    "description": "Artist series Id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artist_series_ids",
                    "description": "Artist series ids (combined as OR)",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "at_auction",
                    "description": "When true, will only return works at a current auction.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "attribution_class",
                    "description": "Possible attribution classes of artwork",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "color",
                    "description": "Color",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "colors",
                    "description": "Multiple colors (combined as an OR).",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "dimension_range",
                    "description": "Size",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_artwork_ids",
                    "description": "Array of artwork to ids to exclude",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_disliked_artworks",
                    "description": "Exclude disliked artworks if authenticated.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "extra_aggregation_gene_ids",
                    "description": "Gene id array to include in aggregations",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "When true, will only return for sale artworks",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "gene_id",
                    "description": "Temporary Gene id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "gene_ids",
                    "description": "Gene id array, combined via AND",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "height",
                    "description": "Height (inches)",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "ids",
                    "description": "Array of artwork ids",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_artworks_by_followed_artists",
                    "description": "If true, will only include artworks by artists the user is following.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_medium_filter_in_aggregation",
                    "description": "If true, wont drop medium filter from medium aggreagtion computation.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_unpublished",
                    "description": "Include unpublished artworks",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "inquireable_only",
                    "description": "When true, will return works that are inquireable but not acquireable.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "inquireable",
                    "description": "When true, will only return inquireable works",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "keyword_match_exact",
                    "description": "When true, will only return exact keyword match",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "keyword",
                    "description": "Keyword search",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "location_cities",
                    "description": "Location cities",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "major_periods",
                    "description": "Major Periods array.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "marketable",
                    "description": "When true, will only return marketable works (removing nude/provocative).",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "marketing_collection_id",
                    "description": "Only return artworks in this marketing collection.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "materials_terms",
                    "description": "Materials terms, detected from `medium`",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "medium",
                    "description": "Temporary second slot for gene filtering",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offerable",
                    "description": "When true, will only return works available for the Make offer option",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Result page",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "partner_ids",
                    "description": "Partner ids (combined as an OR).",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_show_id",
                    "description": "Partner Show Id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "period",
                    "description": "Period",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "periods",
                    "description": "Period array.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "price_range",
                    "description": "Price range",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of results to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "minimum": 0,
                    "maximum": 100,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "sizes",
                    "description": "Sizes",
                    "type": "array",
                    "items":
                      {
                        "type": "string",
                        "enum": ["small", "medium", "large"],
                      },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sorting criteria",
                    "type": "string",
                    "enum":
                      [
                        "-published_at",
                        "published_at",
                        "-year",
                        "year",
                        "-partner_updated_at",
                        "partner_updated_at",
                        "merchandisability",
                        "-merchandisability",
                        "prices",
                        "-prices",
                        "-has_price,prices",
                        "-has_price,-prices",
                        "sold,-has_price,prices",
                        "sold,-has_price,-prices",
                        "-decayed_merch",
                        "-weighted_iconicity",
                        "bidder_positions_count",
                        "-bidder_positions_count",
                        "sale_position",
                        "-sale_position",
                        "partner_show_position",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "tag_id",
                    "description": "Tag id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "use_seller_score",
                    "description": "When true, will include `seller_score` in `-decayed_merch` sorting.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_price_range",
                    "description": "Use current user's price range if available",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "width",
                    "description": "Width (inches)",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Filtered artworks search." } },
              "tags": ["filter"],
              "operationId": "getApiV1FilterArtworks",
            },
        },
      "/api/v1/filter/sales":
        {
          "get":
            {
              "description": "Filtered sales search.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "auction_state",
                    "description": "One of upcoming, open or closed.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_artsy_licensed",
                    "description": "When true, include this type of sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_benefit",
                    "description": "When true, include this type of sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_live_auction",
                    "description": "When true, include this type of sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_online_only",
                    "description": "When true, include this type of sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sorting criteria",
                    "type": "string",
                    "default": "name",
                    "enum":
                      [
                        "id",
                        "-id",
                        "name",
                        "-name",
                        "created_at",
                        "-created_at",
                        "start_at",
                        "-start_at",
                        "end_at",
                        "-end_at",
                        "eligible_sale_artworks_count",
                        "-eligible_sale_artworks_count",
                        "timely_at",
                        "-timely_at",
                        "timely_at,name",
                        "-timely_at,name",
                        "is_artsy_licensed,timely_at,name",
                        "-is_artsy_licensed,timely_at,name",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Filtered sales search." } },
              "tags": ["filter"],
              "operationId": "getApiV1FilterSales",
            },
        },
      "/api/v1/follow_shows":
        {
          "delete":
            {
              "description": "allow a user to unfollow a show",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "partner_show_id",
                    "description": "ID of the show to follow.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "allow a user to unfollow a show" } },
              "tags": ["follow_shows"],
              "operationId": "deleteApiV1FollowShows",
            },
          "post":
            {
              "description": "Add a show to the list of shows a user is following",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1FollowShows",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1FollowShows" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Add a show to the list of shows a user is following",
                    },
                },
              "tags": ["follow_shows"],
              "operationId": "postApiV1FollowShows",
            },
          "get":
            {
              "description": "Get all FollowShow instances that target the current user",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "show_ids",
                    "description": "Show IDs (not slugs) to include.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "near",
                    "description": "Coordinates to find shows closest to.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "max_distance",
                    "description": "Max distance to use when geo-locating shows (default: 75 km).",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Return shows that are 'upcoming', 'running', 'closed', 'current', and 'closing_soon' .",
                    "type": "string",
                    "enum":
                      [
                        "current",
                        "running",
                        "closed",
                        "upcoming",
                        "running_and_upcoming",
                        "closing_soon",
                        "active",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "day_threshold",
                    "description": "Number of days which will be used to filter upcoming and closing soon shows.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get all FollowShow instances that target the current user",
                    },
                },
              "tags": ["follow_shows"],
              "operationId": "getApiV1FollowShows",
            },
        },
      "/api/v1/gene_families":
        {
          "get":
            {
              "description": "Retrieve a list of gene families",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["name", "-name", "position", "-position"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve a list of gene families" },
                },
              "tags": ["gene_families"],
              "operationId": "getApiV1GeneFamilies",
            },
        },
      "/api/v1/gene_type/{id}/genes":
        {
          "get":
            {
              "description": "Retrieve deep data for all genes of a particular gene type.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene type id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "counts.artists",
                        "-counts.artists",
                        "counts.artworks",
                        "-counts.artworks",
                        "published",
                        "-published",
                        "automated",
                        "-automated",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve deep data for all genes of a particular gene type.",
                    },
                },
              "tags": ["gene_type"],
              "operationId": "getApiV1GeneTypeIdGenes",
            },
        },
      "/api/v1/gene_type":
        {
          "post":
            {
              "description": "Create a gene type.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1GeneType",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1GeneType" },
                  },
                ],
              "responses": { "201": { "description": "Create a gene type." } },
              "tags": ["gene_type"],
              "operationId": "postApiV1GeneType",
            },
        },
      "/api/v1/gene_type/{id}":
        {
          "delete":
            {
              "description": "Delete a gene type.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene type id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "204": { "description": "Delete a gene type." } },
              "tags": ["gene_type"],
              "operationId": "deleteApiV1GeneTypeId",
            },
          "put":
            {
              "description": "Updated a gene type.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene type id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1GeneType",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1GeneType" },
                  },
                ],
              "responses": { "200": { "description": "Updated a gene type." } },
              "tags": ["gene_type"],
              "operationId": "putApiV1GeneTypeId",
            },
          "get":
            {
              "description": "Retrieve a gene type.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene type id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a gene type." } },
              "tags": ["gene_type"],
              "operationId": "getApiV1GeneTypeId",
            },
        },
      "/api/v1/gene_types":
        {
          "get":
            {
              "description": "Retrieve all gene types.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["name", "-name", "published", "-published"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all gene types." } },
              "tags": ["gene_types"],
              "operationId": "getApiV1GeneTypes",
            },
        },
      "/api/v1/gene/{id}/artworks/all":
        {
          "get":
            {
              "description": "Retrieve deep data for all partner artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["-created_at"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve deep data for all partner artworks.",
                    },
                },
              "tags": ["gene"],
              "operationId": "getApiV1GeneIdArtworksAll",
            },
        },
      "/api/v1/gene/{id}/similar":
        {
          "get":
            {
              "description": "Retrieve similar genes.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_gene_ids",
                    "description": "Array of gene ids to exclude, may result in all genes being excluded.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve similar genes." } },
              "tags": ["gene"],
              "operationId": "getApiV1GeneIdSimilar",
            },
        },
      "/api/v1/gene/{id}/artworks":
        {
          "get":
            {
              "description": "Retrieve artworks representative of a gene, ordered by gene value.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve artworks representative of a gene, ordered by gene value.",
                    },
                },
              "tags": ["gene"],
              "operationId": "getApiV1GeneIdArtworks",
            },
        },
      "/api/v1/gene/{id}/artists":
        {
          "get":
            {
              "description": "Retrieve artists representative of a gene, ordered by gene value.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "exclude_artists_without_artworks",
                    "description": "Exclude artists that don't have any artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_value",
                    "description": "Minimum gene value.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve artists representative of a gene, ordered by gene value.",
                    },
                },
              "tags": ["gene"],
              "operationId": "getApiV1GeneIdArtists",
            },
        },
      "/api/v1/gene":
        {
          "post":
            {
              "description": "Create a gene.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Gene",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Gene" },
                  },
                ],
              "responses": { "201": { "description": "Create a gene." } },
              "tags": ["gene"],
              "operationId": "postApiV1Gene",
            },
        },
      "/api/v1/gene/{id}":
        {
          "delete":
            {
              "description": "Delete a gene.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "204": { "description": "Delete a gene." } },
              "tags": ["gene"],
              "operationId": "deleteApiV1GeneId",
            },
          "put":
            {
              "description": "Updated a gene.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Gene",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Gene" },
                  },
                ],
              "responses": { "200": { "description": "Updated a gene." } },
              "tags": ["gene"],
              "operationId": "putApiV1GeneId",
            },
          "get":
            {
              "description": "Retrieve a gene.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve a gene." } },
              "tags": ["gene"],
              "operationId": "getApiV1GeneId",
            },
        },
      "/api/v1/gene/{id}/image(/{image_version})":
        {
          "get":
            {
              "description": "Get a gene's image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Gene id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "description": "Image version.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Get a gene's image." } },
              "tags": ["gene"],
              "operationId": "getApiV1GeneIdImage(ImageVersion)",
            },
        },
      "/api/v1/genes/partner_applied":
        {
          "get":
            {
              "description": "Retrieve all genes that are available for partner applied categories.",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all genes that are available for partner applied categories.",
                    },
                },
              "tags": ["genes"],
              "operationId": "getApiV1GenesPartnerApplied",
            },
        },
      "/api/v1/genes/all":
        {
          "get":
            {
              "description": "Retrieve all genes, with all json.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "counts.artists",
                        "-counts.artists",
                        "counts.artworks",
                        "-counts.artworks",
                        "published",
                        "-published",
                        "automated",
                        "-automated",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve all genes, with all json." },
                },
              "tags": ["genes"],
              "operationId": "getApiV1GenesAll",
            },
        },
      "/api/v1/genes":
        {
          "get":
            {
              "description": "Retrieve all genes.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Only include genes that are published (only applies for admins).",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "counts.artists",
                        "-counts.artists",
                        "counts.artworks",
                        "-counts.artworks",
                        "published",
                        "-published",
                        "automated",
                        "-automated",
                      ],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve all genes." } },
              "tags": ["genes"],
              "operationId": "getApiV1Genes",
            },
        },
      "/api/v1/genome/map":
        {
          "get":
            {
              "description": "Retrieve a genome map, ie. all genes organized by type.",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a genome map, ie. all genes organized by type.",
                    },
                },
              "tags": ["genome"],
              "operationId": "getApiV1GenomeMap",
            },
        },
      "/api/v1/hero_units/{id}":
        {
          "delete":
            {
              "description": "Delete a hero unit.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses": { "204": { "description": "Delete a hero unit." } },
              "tags": ["hero_units"],
              "operationId": "deleteApiV1HeroUnitsId",
            },
          "put":
            {
              "description": "Update a hero unit.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Hero Unit id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1HeroUnits",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1HeroUnits" },
                  },
                ],
              "responses": { "200": { "description": "Update a hero unit." } },
              "tags": ["hero_units"],
              "operationId": "putApiV1HeroUnitsId",
            },
          "get":
            {
              "description": "Return a hero unit.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Hero Unit id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Return a hero unit." } },
              "tags": ["hero_units"],
              "operationId": "getApiV1HeroUnitsId",
            },
        },
      "/api/v1/hero_units":
        {
          "post":
            {
              "description": "Create a hero unit.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1HeroUnits",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1HeroUnits" },
                  },
                ],
              "responses": { "201": { "description": "Create a hero unit." } },
              "tags": ["hero_units"],
              "operationId": "postApiV1HeroUnits",
            },
          "get":
            {
              "description": "Return hero units sorted by position.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Return hero units sorted by position." },
                },
              "tags": ["hero_units"],
              "operationId": "getApiV1HeroUnits",
            },
        },
      "/api/v1/identity_verifications":
        {
          "get":
            {
              "description": "Retrieve a list of user identity verifications",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "user_id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "email",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "name",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["-created_at"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a list of user identity verifications",
                    },
                },
              "tags": ["identity_verifications"],
              "operationId": "getApiV1IdentityVerifications",
            },
        },
      "/api/v1/identity_verification/{id}/scan_references":
        {
          "get":
            {
              "description": "fetch the scan references that have been created for an identity verification",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "fetch the scan references that have been created for an identity verification",
                    },
                },
              "tags": ["identity_verification"],
              "operationId": "getApiV1IdentityVerificationIdScanReferences",
            },
        },
      "/api/v1/identity_verification/{id}/override":
        {
          "post":
            {
              "description": "manually set the state on an identity verification",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1IdentityVerificationIdOverride",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1IdentityVerificationIdOverride",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "manually set the state on an identity verification",
                    },
                },
              "tags": ["identity_verification"],
              "operationId": "postApiV1IdentityVerificationIdOverride",
            },
        },
      "/api/v1/identity_verification/{id}/overrides":
        {
          "get":
            {
              "description": "fetch the overrides that have been applied to an identity verification",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "fetch the overrides that have been applied to an identity verification",
                    },
                },
              "tags": ["identity_verification"],
              "operationId": "getApiV1IdentityVerificationIdOverrides",
            },
        },
      "/api/v1/identity_verification/{id}/start":
        {
          "put":
            {
              "description": "Call external identity verification service and return URL allowing the client to verify their identity",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Call external identity verification service and return URL allowing the client to verify their identity",
                    },
                },
              "tags": ["identity_verification"],
              "operationId": "putApiV1IdentityVerificationIdStart",
            },
        },
      "/api/v1/identity_verification":
        {
          "post":
            {
              "description": "Create an identity verification",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1IdentityVerification",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1IdentityVerification" },
                  },
                ],
              "responses":
                { "201": { "description": "Create an identity verification" } },
              "tags": ["identity_verification"],
              "operationId": "postApiV1IdentityVerification",
            },
        },
      "/api/v1/identity_verification/{id}":
        {
          "get":
            {
              "description": "Retrieve an identity verification.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve an identity verification." },
                },
              "tags": ["identity_verification"],
              "operationId": "getApiV1IdentityVerificationId",
            },
        },
      "/api/v1/inquiry_request_questions":
        {
          "get":
            {
              "description": "Retrieve the inquiry questions.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "inquireable_type",
                    "description": "Inquireable type.",
                    "type": "string",
                    "enum": ["Artwork"],
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "inquireable_id",
                    "description": "Inquireable ID.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve the inquiry questions." } },
              "tags": ["inquiry_request_questions"],
              "operationId": "getApiV1InquiryRequestQuestions",
            },
        },
      "/api/v1/inquiry_request/{id}":
        {
          "delete":
            {
              "description": "Delete an existing inquiry request.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete an existing inquiry request." },
                },
              "tags": ["inquiry_request"],
              "operationId": "deleteApiV1InquiryRequestId",
            },
          "put":
            {
              "description": "Update an existing inquiry request.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1InquiryRequest",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1InquiryRequest" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing inquiry request." },
                },
              "tags": ["inquiry_request"],
              "operationId": "putApiV1InquiryRequestId",
            },
          "get":
            {
              "description": "Retrieve an inquiry request by id.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "outcome_token",
                    "description": "Outcome Token used for authentication coming from email",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve an inquiry request by id." },
                },
              "tags": ["inquiry_request"],
              "operationId": "getApiV1InquiryRequestId",
            },
        },
      "/api/v1/inquiry_request/{id}/status":
        {
          "post":
            {
              "description": "Add a status to an inquiry request.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1InquiryRequestIdStatus",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1InquiryRequestIdStatus",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Add a status to an inquiry request." },
                },
              "tags": ["inquiry_request"],
              "operationId": "postApiV1InquiryRequestIdStatus",
            },
        },
      "/api/v1/inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve all artwork inquiry requests.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "type",
                    "description": "Inquired object type. Limits to returning only ArtworkInquiryRequests or PartnerShowInquiryRequests.",
                    "type": "string",
                    "enum": ["artwork", "partner_show"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Only return inquiries for artworks belonging to a given partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "admin_id",
                    "description": "Only return inquiries for artworks belonging to partners that are managed by a given admin.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Only return inquiries for artworks that are part of a given fair.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Only return inquiries for artworks that are part of a given auction.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "id",
                    "description": "Only return inquiries with given id(s)",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-created_at",
                        "created_at",
                        "-outcome",
                        "outcome",
                        "likely_to_purchase",
                        "-likely_to_purchase",
                        "status",
                        "-status",
                        "flagged",
                        "-flagged",
                        "contact_gallery",
                        "-contact_gallery",
                        "status,-likely_to_purchase,created_at",
                        "last_message_received_at",
                        "-last_message_received_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve all artwork inquiry requests." },
                },
              "tags": ["inquiry_requests"],
              "operationId": "getApiV1InquiryRequests",
            },
        },
      "/api/v1/invoice/{id}":
        {
          "put":
            {
              "description": "Update an invoice.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "The invoice ID.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Invoice",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Invoice" },
                  },
                ],
              "responses": { "200": { "description": "Update an invoice." } },
              "tags": ["invoice"],
              "operationId": "putApiV1InvoiceId",
            },
          "get":
            {
              "description": "Get an individual invoice.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "The invoice ID.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Get an individual invoice." } },
              "tags": ["invoice"],
              "operationId": "getApiV1InvoiceId",
            },
        },
      "/api/v1/invoice":
        {
          "post":
            {
              "description": "Create an invoice.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Invoice",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Invoice" },
                  },
                ],
              "responses": { "201": { "description": "Create an invoice." } },
              "tags": ["invoice"],
              "operationId": "postApiV1Invoice",
            },
          "get":
            {
              "description": "Get a ready/paid invoice by token.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "token",
                    "description": "The invoice's secret token.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Get a ready/paid invoice by token." },
                },
              "tags": ["invoice"],
              "operationId": "getApiV1Invoice",
            },
        },
      "/api/v1/invoice/{invoice_id}/payment":
        {
          "post":
            {
              "description": "Add a payment.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "invoice_id",
                    "description": "The invoice id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1InvoiceInvoiceIdPayment",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1InvoiceInvoiceIdPayment",
                      },
                  },
                ],
              "responses": { "201": { "description": "Add a payment." } },
              "tags": ["invoice"],
              "operationId": "postApiV1InvoiceInvoiceIdPayment",
            },
        },
      "/api/v1/invoice/{invoice_id}/line_item/{id}":
        {
          "delete":
            {
              "description": "Delete a line item.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "invoice_id",
                    "description": "The invoice id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "The individual line item's id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "204": { "description": "Delete a line item." } },
              "tags": ["invoice"],
              "operationId": "deleteApiV1InvoiceInvoiceIdLineItemId",
            },
          "put":
            {
              "description": "Update a line item.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "invoice_id",
                    "description": "The invoice id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "The individual line item's id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1InvoiceInvoiceIdLineItem",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1InvoiceInvoiceIdLineItem",
                      },
                  },
                ],
              "responses": { "200": { "description": "Update a line item." } },
              "tags": ["invoice"],
              "operationId": "putApiV1InvoiceInvoiceIdLineItemId",
            },
        },
      "/api/v1/invoice/{invoice_id}/line_item":
        {
          "post":
            {
              "description": "Add a line item.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "invoice_id",
                    "description": "The invoice id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1InvoiceInvoiceIdLineItem",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1InvoiceInvoiceIdLineItem",
                      },
                  },
                ],
              "responses": { "201": { "description": "Add a line item." } },
              "tags": ["invoice"],
              "operationId": "postApiV1InvoiceInvoiceIdLineItem",
            },
        },
      "/api/v1/invoices":
        {
          "get":
            {
              "description": "Get invoices.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "Return invoices that belong to a given user.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "state",
                    "description": "Optional invoice state.",
                    "type": "string",
                    "enum": ["draft", "ready", "paid", "canceled"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Optional sale.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Optional artwork.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_artwork_id",
                    "description": "Optional artwork in a sale or auction.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Get invoices." } },
              "tags": ["invoices"],
              "operationId": "getApiV1Invoices",
            },
        },
      "/api/v1/labs":
        {
          "get":
            {
              "description": "Retrieve all available lab features.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve all available lab features." },
                },
              "tags": ["labs"],
              "operationId": "getApiV1Labs",
            },
        },
      "/api/v1/maps":
        {
          "get":
            {
              "description": "Retrieve maps.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Return maps for the given fair.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve maps." } },
              "tags": ["maps"],
              "operationId": "getApiV1Maps",
            },
        },
      ? "/api/v1/marketing_collections/{marketing_collection_id}/artworks/{artwork_id}"
      : {
          "delete":
            {
              "description": "Removes an artwork from a manually curated collection",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "marketing_collection_id",
                    "description": "Marketing collection ID.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork ID.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Removes an artwork from a manually curated collection",
                    },
                },
              "tags": ["marketing_collections"],
              "operationId": "deleteApiV1MarketingCollectionsMarketingCollectionIdArtworksArtworkId",
            },
          "post":
            {
              "description": "Adds an artwork to a manually curated collection",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "marketing_collection_id",
                    "description": "Marketing collection ID.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork ID.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Adds an artwork to a manually curated collection",
                    },
                },
              "tags": ["marketing_collections"],
              "operationId": "postApiV1MarketingCollectionsMarketingCollectionIdArtworksArtworkId",
            },
        },
      "/api/v1/marketing_collections/{id}":
        {
          "get":
            {
              "description": "Retrieve a marketing collection.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Marketing collection ID.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve a marketing collection." },
                },
              "tags": ["marketing_collections"],
              "operationId": "getApiV1MarketingCollectionsId",
            },
        },
      "/api/v1/marketing_collections":
        {
          "get":
            {
              "description": "Retrieve marketing collections.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "ids",
                    "description": "Returns these objects if passed in.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "updated_at",
                        "-updated_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_featured_artist_content",
                    "description": "Filter by featured artist content",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Filter by artist ID",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "related_to_collection_id",
                    "description": "Filter by related collection ID",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "slugs",
                    "description": "Filter by slugs",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "category",
                    "description": "Filter by category",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve marketing collections." } },
              "tags": ["marketing_collections"],
              "operationId": "getApiV1MarketingCollections",
            },
        },
      "/api/v1/marketing_collections_categories":
        {
          "get":
            {
              "description": "Retrieve marketing collections grouped by category.",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve marketing collections grouped by category.",
                    },
                },
              "tags": ["marketing_collections_categories"],
              "operationId": "getApiV1MarketingCollectionsCategories",
            },
        },
      "/api/v1/match/partner/{id}/artists":
        {
          "get":
            {
              "description": "Match a partner's artists by term.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Match a partner's artists by term." },
                },
              "tags": ["match"],
              "operationId": "getApiV1MatchPartnerIdArtists",
            },
        },
      "/api/v1/match/partner/{id}/shows":
        {
          "get":
            {
              "description": "Match a partner's partner shows by term.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Match a partner's partner shows by term.",
                    },
                },
              "tags": ["match"],
              "operationId": "getApiV1MatchPartnerIdShows",
            },
        },
      "/api/v1/match/partner/{id}/artworks":
        {
          "get":
            {
              "description": "Match a partner's artworks by term.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "visibility_level",
                    "description": "Filtering based on visibility type",
                    "type": "string",
                    "enum": ["unlisted", "listed"],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Match a partner's artworks by term." },
                },
              "tags": ["match"],
              "operationId": "getApiV1MatchPartnerIdArtworks",
            },
        },
      "/api/v1/match/sale_artworks":
        {
          "get":
            {
              "description": "Match sale artworks by term.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_unpublished",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "visibility_level",
                    "type": "string",
                    "enum": ["unlisted", "listed"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Match sale artworks by term." } },
              "tags": ["match"],
              "operationId": "getApiV1MatchSaleArtworks",
            },
        },
      "/api/v1/match/suggest":
        {
          "get":
            {
              "description": "Global Auto Suggest (by name).",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to auto suggest for.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "visible_to_public",
                    "description": "Only return items visible to public.",
                    "type": "string",
                    "default": true,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "indexes",
                    "description": "Which models (ES indexes) to search.",
                    "type": "array",
                    "items":
                      {
                        "type": "string",
                        "default":
                          [
                            "Artist",
                            "Profile",
                            "Gene",
                            "City",
                            "Artwork",
                            "Fair",
                            "Tag",
                            "Feature",
                            "Article",
                            "Page",
                            "Sale",
                            "MarketingCollection",
                            "ArtistSeries",
                            "ViewingRoom",
                          ],
                      },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "aggregations",
                    "description": "Aggregations.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Global Auto Suggest (by name)." } },
              "tags": ["match"],
              "operationId": "getApiV1MatchSuggest",
            },
        },
      "/api/v1/match":
        {
          "get":
            {
              "description": "Global Search (by name).",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "visible_to_public",
                    "description": "Only return items visible to public.",
                    "type": "string",
                    "default": true,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Only return artists and shows at the given fair.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "indexes",
                    "description": "Which models (ES indexes) to search.",
                    "type": "array",
                    "items":
                      {
                        "type": "string",
                        "default":
                          [
                            "Article",
                            "Artist",
                            "Artwork",
                            "City",
                            "Fair",
                            "Feature",
                            "Gene",
                            "Profile",
                            "Sale",
                            "Tag",
                            "Page",
                            "MarketingCollection",
                            "ArtistSeries",
                            "ViewingRoom",
                          ],
                      },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "aggregations",
                    "description": "Aggregations.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Global Search (by name)." } },
              "tags": ["match"],
              "operationId": "getApiV1Match",
            },
        },
      "/api/v1/match/users":
        {
          "get":
            {
              "description": "Autocomplete users by name & email.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Autocomplete users by name & email." },
                },
              "tags": ["match"],
              "operationId": "getApiV1MatchUsers",
            },
        },
      "/api/v1/match/artists":
        {
          "get":
            {
              "description": "Search artists by name",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Custom sort for artist search.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "target_supply",
                    "description": "Filtering by artists that are a part of target supply.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "visible_to_public",
                    "description": "Only return artists visible to public.",
                    "type": "boolean",
                    "default": true,
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Search artists by name" } },
              "tags": ["match"],
              "operationId": "getApiV1MatchArtists",
            },
        },
      "/api/v1/match/partner_shows":
        {
          "get":
            {
              "description": "Search partner shows by name",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Filtering by partner",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "galaxy_partner_id",
                    "description": "Filtering by galaxy partner",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_reference",
                    "description": "When true, will include reference-type shows as well.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Search partner shows by name" } },
              "tags": ["match"],
              "operationId": "getApiV1MatchPartnerShows",
            },
        },
      "/api/v1/match/sales":
        {
          "get":
            {
              "description": "Search sales by name",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_auction",
                    "description": "Filter sales by auction type",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Search sales by name" } },
              "tags": ["match"],
              "operationId": "getApiV1MatchSales",
            },
        },
      "/api/v1/match/cultures":
        {
          "get":
            {
              "description": "Search cultures by name",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_nationality",
                    "description": "Filter cultures by nationality",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Search cultures by name" } },
              "tags": ["match"],
              "operationId": "getApiV1MatchCultures",
            },
        },
      "/api/v1/match/genes":
        {
          "get":
            {
              "description": "Search genes by name",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Search genes by name" } },
              "tags": ["match"],
              "operationId": "getApiV1MatchGenes",
            },
        },
      "/api/v1/match/fairs":
        {
          "get":
            {
              "description": "Search fairs by name",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Search fairs by name" } },
              "tags": ["match"],
              "operationId": "getApiV1MatchFairs",
            },
        },
      "/api/v1/match/tags":
        {
          "get":
            {
              "description": "Autocomplete tags by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Autocomplete tags by name." } },
              "tags": ["match"],
              "operationId": "getApiV1MatchTags",
            },
        },
      "/api/v1/match/profiles":
        {
          "get":
            {
              "description": "Autocomplete profiles by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Autocomplete profiles by name." } },
              "tags": ["match"],
              "operationId": "getApiV1MatchProfiles",
            },
        },
      "/api/v1/match/partners":
        {
          "get":
            {
              "description": "Autocomplete partners by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Autocomplete partners by name." } },
              "tags": ["match"],
              "operationId": "getApiV1MatchPartners",
            },
        },
      "/api/v1/match/pages":
        {
          "get":
            {
              "description": "Autocomplete pages by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Autocomplete pages by name." } },
              "tags": ["match"],
              "operationId": "getApiV1MatchPages",
            },
        },
      "/api/v1/match/sets":
        {
          "get":
            {
              "description": "Autocomplete ordered_sets by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Autocomplete ordered_sets by name." },
                },
              "tags": ["match"],
              "operationId": "getApiV1MatchSets",
            },
        },
      "/api/v1/match/hero_units":
        {
          "get":
            {
              "description": "Autocomplete hero_units by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Autocomplete hero_units by name." },
                },
              "tags": ["match"],
              "operationId": "getApiV1MatchHeroUnits",
            },
        },
      "/api/v1/match/features":
        {
          "get":
            {
              "description": "Autocomplete features by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Autocomplete features by name." } },
              "tags": ["match"],
              "operationId": "getApiV1MatchFeatures",
            },
        },
      "/api/v1/match/featured_links":
        {
          "get":
            {
              "description": "Autocomplete featured_links by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Autocomplete featured_links by name." },
                },
              "tags": ["match"],
              "operationId": "getApiV1MatchFeaturedLinks",
            },
        },
      "/api/v1/match/fair_organizers":
        {
          "get":
            {
              "description": "Autocomplete fair_organizers by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "Exclude ids from results",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Autocomplete fair_organizers by name." },
                },
              "tags": ["match"],
              "operationId": "getApiV1MatchFairOrganizers",
            },
        },
      "/api/v1/match/artworks":
        {
          "get":
            {
              "description": "Autocomplete artworks by name.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Published artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "genomed",
                    "description": "Genome marked as complete",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Fairs.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_show_id",
                    "description": "Partner Shows.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "deleted",
                    "description": "Marked as deleted.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of items to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 5,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "visibility_level",
                    "type": "string",
                    "enum": ["unlisted", "listed"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Autocomplete artworks by name." } },
              "tags": ["match"],
              "operationId": "getApiV1MatchArtworks",
            },
        },
      "/api/v1/me/anonymous_sessions":
        {
          "get":
            {
              "description": "Retrieve anonymous sessions.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Session id associated with the anonymous sessions.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve anonymous sessions." } },
              "tags": ["me"],
              "operationId": "getApiV1MeAnonymousSessions",
            },
        },
      "/api/v1/me/anonymous_session/{id}":
        {
          "put":
            {
              "description": "Update an existing anonymous session.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Anonymous session id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeAnonymousSession",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1MeAnonymousSession" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing anonymous session." },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeAnonymousSessionId",
            },
          "get":
            {
              "description": "Retrieve an anonymous session.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Anonymous session id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "email",
                    "description": "Email associated with the anonymous sessions.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Session id associated with the anonymous sessions.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an anonymous session." } },
              "tags": ["me"],
              "operationId": "getApiV1MeAnonymousSessionId",
            },
        },
      "/api/v1/me/anonymous_session":
        {
          "put":
            {
              "description": "Updates an anonymous session. Uses cookied session_id if not specified.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeAnonymousSession",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1MeAnonymousSession" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Updates an anonymous session. Uses cookied session_id if not specified.",
                    },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeAnonymousSession",
            },
          "post":
            {
              "description": "Creates [or updates] an anonymous session.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeAnonymousSession",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeAnonymousSession" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Creates [or updates] an anonymous session.",
                    },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeAnonymousSession",
            },
        },
      "/api/v1/me/alert/{user_search_criteria_id}":
        {
          "delete":
            {
              "description": "Soft-delete (disable) an alert.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "user_search_criteria_id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Soft-delete (disable) an alert." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeAlertUserSearchCriteriaId",
            },
          "put":
            {
              "description": "Update an alert.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "user_search_criteria_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeAlert",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1MeAlert" },
                  },
                ],
              "responses": { "200": { "description": "Update an alert." } },
              "tags": ["me"],
              "operationId": "putApiV1MeAlertUserSearchCriteriaId",
            },
        },
      "/api/v1/me/alert/{id}":
        {
          "get":
            {
              "description": "Retrieve an alert.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "ID of user search criteria OR search criteria",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve an alert." } },
              "tags": ["me"],
              "operationId": "getApiV1MeAlertId",
            },
        },
      "/api/v1/me/alert":
        {
          "post":
            {
              "description": "Create an alert.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeAlert",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1MeAlert" },
                  },
                ],
              "responses": { "201": { "description": "Create an alert." } },
              "tags": ["me"],
              "operationId": "postApiV1MeAlert",
            },
        },
      "/api/v1/me/alerts":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sorting criteria",
                    "type": "string",
                    "enum": ["name", "-enabled_at"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[acquireable]",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[additional_gene_ids]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[artist_ids]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[artist_series_ids]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[at_auction]",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[attribution_class]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[colors]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[dimension_range]",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[for_sale]",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[height]",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[inquireable_only]",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[keyword]",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[location_cities]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[major_periods]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[materials_terms]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[offerable]",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[partner_ids]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[price_range]",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "search_criteria[sizes]",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "search_criteria[width]",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "get Alert(s)" } },
              "tags": ["me"],
              "operationId": "getApiV1MeAlerts",
            },
        },
      "/api/v1/me/artists":
        {
          "get":
            {
              "description": "Retrieve artists under management.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve artists under management." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeArtists",
            },
        },
      "/api/v1/me/artwork_inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve inquiry requests.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artwork",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "External session id to track logged out actions.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve inquiry requests." } },
              "tags": ["me"],
              "operationId": "getApiV1MeArtworkInquiryRequests",
            },
        },
      "/api/v1/me/artwork_inquiry_request/{id}/send":
        {
          "put":
            {
              "description": "Send a delayed inquiry request.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeArtworkInquiryRequestIdSend",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1MeArtworkInquiryRequestIdSend",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Send a delayed inquiry request." } },
              "tags": ["me"],
              "operationId": "putApiV1MeArtworkInquiryRequestIdSend",
            },
        },
      "/api/v1/me/artwork_inquiry_request/{id}":
        {
          "delete":
            {
              "description": "Delete an existing inquiry request.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Client's key for anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete an existing inquiry request." },
                },
              "tags": ["me"],
              "operationId": "deleteApiV1MeArtworkInquiryRequestId",
            },
          "get":
            {
              "description": "Retrieve an existing inquiry request.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "External session id to track logged out actions.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve an existing inquiry request." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeArtworkInquiryRequestId",
            },
          "put":
            {
              "description": "Update an existing inquiry request.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeArtworkInquiryRequest",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1MeArtworkInquiryRequest",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing inquiry request." },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeArtworkInquiryRequestId",
            },
        },
      "/api/v1/me/artwork_inquiry_request":
        {
          "post":
            {
              "description": "Create an artwork inquiry request.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeArtworkInquiryRequest",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1MeArtworkInquiryRequest",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Create an artwork inquiry request." },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeArtworkInquiryRequest",
            },
        },
      "/api/v1/me/trigger_campaign":
        {
          "post":
            {
              "description": "Trigger a campaign send.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeTriggerCampaign",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeTriggerCampaign" },
                  },
                ],
              "responses":
                { "201": { "description": "Trigger a campaign send." } },
              "tags": ["me"],
              "operationId": "postApiV1MeTriggerCampaign",
            },
        },
      "/api/v1/me/lot_standings":
        {
          "get":
            {
              "description": "Retrieve my standing on given lots.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["-created_at"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_artwork_id",
                    "description": "SaleArtwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "live",
                    "description": "Return only lots in live sales.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "causality_sync_off",
                    "description": "Return only lots in sales with sync to causality off.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve my standing on given lots." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeLotStandings",
            },
        },
      "/api/v1/me/labs":
        {
          "get":
            {
              "description": "Retrieve my lab features.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve my lab features." } },
              "tags": ["me"],
              "operationId": "getApiV1MeLabs",
            },
        },
      "/api/v1/me/recently_viewed_artworks":
        {
          "post":
            {
              "description": "Record a recently viewed artwork.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeRecentlyViewedArtworks",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1MeRecentlyViewedArtworks",
                      },
                  },
                ],
              "responses":
                {
                  "201": { "description": "Record a recently viewed artwork." },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeRecentlyViewedArtworks",
            },
        },
      "/api/v1/me/user_flags":
        {
          "put":
            {
              "description": "Set (or unset) user flag.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeUserFlags",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1MeUserFlags" },
                  },
                ],
              "responses":
                { "200": { "description": "Set (or unset) user flag." } },
              "tags": ["me"],
              "operationId": "putApiV1MeUserFlags",
            },
        },
      "/api/v1/me":
        {
          "delete":
            {
              "description": "Delete current user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "explanation",
                    "description": "Reason for deleting the account.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "password",
                    "description": "Current password.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "url",
                    "description": "Refeerrer location.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses": { "204": { "description": "Delete current user." } },
              "tags": ["me"],
              "operationId": "deleteApiV1Me",
            },
          "put":
            {
              "description": "Update user info.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Me",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Me" },
                  },
                ],
              "responses": { "200": { "description": "Update user info." } },
              "tags": ["me"],
              "operationId": "putApiV1Me",
            },
          "get":
            {
              "description": "Retrieve current user info.",
              "produces": ["application/json"],
              "responses":
                { "200": { "description": "Retrieve current user info." } },
              "tags": ["me"],
              "operationId": "getApiV1Me",
            },
        },
      "/api/v1/me/password":
        {
          "put":
            {
              "description": "Change current user password.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MePassword",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1MePassword" },
                  },
                ],
              "responses":
                { "200": { "description": "Change current user password." } },
              "tags": ["me"],
              "operationId": "putApiV1MePassword",
            },
        },
      "/api/v1/me/ping":
        {
          "get":
            {
              "description": "Validate current user token (only).",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    { "description": "Validate current user token (only)." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MePing",
            },
        },
      "/api/v1/me/bidders":
        {
          "get":
            {
              "description": "Retrieve my bidders.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "Filter for a specific sale",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "active",
                    "description": "When true, limit results to active sales only",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve my bidders." } },
              "tags": ["me"],
              "operationId": "getApiV1MeBidders",
            },
        },
      "/api/v1/me/bidder_positions":
        {
          "get":
            {
              "description": "Deprecated - returns an empty list.",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    { "description": "Deprecated - returns an empty list." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeBidderPositions",
            },
        },
      "/api/v1/me/token":
        {
          "post":
            {
              "description": "Get a token for a client app.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeToken",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1MeToken" },
                  },
                ],
              "responses":
                { "201": { "description": "Get a token for a client app." } },
              "tags": ["me"],
              "operationId": "postApiV1MeToken",
            },
        },
      "/api/v1/me/trust_token":
        {
          "post":
            {
              "description": "Create a trust token valid for other Artsy services.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "responses":
                {
                  "201":
                    {
                      "description": "Create a trust token valid for other Artsy services.",
                    },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeTrustToken",
            },
        },
      "/api/v1/me/authentications/{provider}":
        {
          "post":
            {
              "description": "Link a 3rd party account.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "provider",
                    "description": "A 3rd party account provider, such as facebook or apple.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeAuthentications",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeAuthentications" },
                  },
                ],
              "responses":
                { "201": { "description": "Link a 3rd party account." } },
              "tags": ["me"],
              "operationId": "postApiV1MeAuthenticationsProvider",
            },
          "delete":
            {
              "description": "Unlink a 3rd party account.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "provider",
                    "description": "A 3rd party account provider, such as facebook or apple.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Unlink a 3rd party account." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeAuthenticationsProvider",
            },
        },
      "/api/v1/me/authentications":
        {
          "get":
            {
              "description": "Retrieve third party authentications.",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    { "description": "Retrieve third party authentications." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeAuthentications",
            },
        },
      "/api/v1/me/bank_accounts":
        {
          "get":
            {
              "description": "Retrieve bank accounts.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      ["created_at", "-created_at", "bank_name", "-bank_name"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "type",
                    "description": "Bank account type.",
                    "type": "string",
                    "enum": ["us_bank_account", "sepa_debit"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve bank accounts." } },
              "tags": ["me"],
              "operationId": "getApiV1MeBankAccounts",
            },
        },
      "/api/v1/me/bank_account/{id}":
        {
          "delete":
            {
              "description": "Deactive a bank account.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Bank account id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Deactive a bank account." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeBankAccountId",
            },
        },
      "/api/v1/me/bidder_position/{id}":
        {
          "get":
            {
              "description": "Retrieve a bidder position.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Bidder Position id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a bidder position." } },
              "tags": ["me"],
              "operationId": "getApiV1MeBidderPositionId",
            },
        },
      "/api/v1/me/bidder_position":
        {
          "post":
            {
              "description": "Place a bid with a maximum amount in cents.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeBidderPosition",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeBidderPosition" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Place a bid with a maximum amount in cents.",
                    },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeBidderPosition",
            },
        },
      "/api/v1/me/collections":
        {
          "put":
            {
              "description": "Batch update Collections.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeCollections",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1MeCollections" },
                  },
                ],
              "responses":
                { "200": { "description": "Batch update Collections." } },
              "tags": ["me"],
              "operationId": "putApiV1MeCollections",
            },
        },
      "/api/v1/me/collector_profile/icon":
        {
          "delete":
            {
              "description": "Delete user icon.",
              "produces": ["application/json"],
              "responses": { "204": { "description": "Delete user icon." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeCollectorProfileIcon",
            },
          "put":
            {
              "description": "Change user icon.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeCollectorProfileIcon",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1MeCollectorProfileIcon",
                      },
                  },
                ],
              "responses": { "200": { "description": "Change user icon." } },
              "tags": ["me"],
              "operationId": "putApiV1MeCollectorProfileIcon",
            },
        },
      "/api/v1/me/collector_profile":
        {
          "put":
            {
              "description": "Update an existing collector profile for the current user or an anonymous session.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeCollectorProfile",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1MeCollectorProfile" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update an existing collector profile for the current user or an anonymous session.",
                    },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeCollectorProfile",
            },
          "post":
            {
              "description": "Create a new collector profile for the current user or an anonymous session.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeCollectorProfile",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeCollectorProfile" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create a new collector profile for the current user or an anonymous session.",
                    },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeCollectorProfile",
            },
          "get":
            {
              "description": "Get the existing collector profile for the current user or an anonymous session.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Session id associated with the anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get the existing collector profile for the current user or an anonymous session.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeCollectorProfile",
            },
        },
      "/api/v1/me/collector_profile/collector_reference/{id}":
        {
          "delete":
            {
              "description": "Delete an existing collector reference.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Session id associated with the anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Delete an existing collector reference.",
                    },
                },
              "tags": ["me"],
              "operationId": "deleteApiV1MeCollectorProfileCollectorReferenceId",
            },
          "put":
            {
              "description": "Update a collector reference.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeCollectorProfileCollectorReference",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1MeCollectorProfileCollectorReference",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Update a collector reference." } },
              "tags": ["me"],
              "operationId": "putApiV1MeCollectorProfileCollectorReferenceId",
            },
        },
      "/api/v1/me/collector_profile/collector_references":
        {
          "get":
            {
              "description": "Retrieve all collector references for a collector profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Session id associated with the anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all collector references for a collector profile.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeCollectorProfileCollectorReferences",
            },
        },
      "/api/v1/me/collector_profile/collector_reference":
        {
          "post":
            {
              "description": "Create a collector reference.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeCollectorProfileCollectorReference",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1MeCollectorProfileCollectorReference",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Create a collector reference." } },
              "tags": ["me"],
              "operationId": "postApiV1MeCollectorProfileCollectorReference",
            },
        },
      "/api/v1/me/confirmation_emails":
        {
          "post":
            {
              "description": "Send a confirmation email.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "responses":
                { "201": { "description": "Send a confirmation email." } },
              "tags": ["me"],
              "operationId": "postApiV1MeConfirmationEmails",
            },
        },
      "/api/v1/me/credit_cards":
        {
          "post":
            {
              "description": "Add a credit card.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeCreditCards",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeCreditCards" },
                  },
                ],
              "responses": { "201": { "description": "Add a credit card." } },
              "tags": ["me"],
              "operationId": "postApiV1MeCreditCards",
            },
          "get":
            {
              "description": "Retrieve my credit cards.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "qualified_for_bidding",
                    "description": "Only return credit cards that are qualified_for_bidding.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "name",
                        "-name",
                        "brand",
                        "-brand",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve my credit cards." } },
              "tags": ["me"],
              "operationId": "getApiV1MeCreditCards",
            },
        },
      "/api/v1/me/credit_card/{id}":
        {
          "delete":
            {
              "description": "Deactive a credit card.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Card id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Deactive a credit card." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeCreditCardId",
            },
        },
      "/api/v1/me/follow/genes":
        {
          "get":
            {
              "description": "Retrieve genes that you follow.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "genes",
                    "description": "Genes to include.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve genes that you follow." } },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowGenes",
            },
        },
      "/api/v1/me/follow/artists":
        {
          "get":
            {
              "description": "Retrieve artists that you follow.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artists",
                    "description": "Artists to include.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Fair within which to search for artists.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "show_id",
                    "description": "Show within which to search for followed artists",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve artists that you follow." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowArtists",
            },
        },
      "/api/v1/me/follow/artist/{id}":
        {
          "delete":
            {
              "description": "Stop following an artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Followed artist reference id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Stop following an artist." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeFollowArtistId",
            },
          "get":
            {
              "description": "Follow reference for a followed artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Followed artist reference id or artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Follow reference for a followed artist.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowArtistId",
            },
          "put":
            {
              "description": "Update a followed artist reference.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Followed artist reference id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeFollowArtist",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1MeFollowArtist" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update a followed artist reference." },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeFollowArtistId",
            },
        },
      "/api/v1/me/follow/artist":
        {
          "post":
            {
              "description": "Follow an artist.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeFollowArtist",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeFollowArtist" },
                  },
                ],
              "responses": { "201": { "description": "Follow an artist." } },
              "tags": ["me"],
              "operationId": "postApiV1MeFollowArtist",
            },
        },
      "/api/v1/me/follow/profiles/artworks":
        {
          "get":
            {
              "description": "Retrieve artworks based on profile follows.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "If true, will only include for sale artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve artworks based on profile follows.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowProfilesArtworks",
            },
        },
      "/api/v1/me/follow/artists/artworks":
        {
          "get":
            {
              "description": "Retrieve artworks based on artist follows.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "If true, will only include for sale artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve artworks based on artist follows.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowArtistsArtworks",
            },
        },
      "/api/v1/me/follow/gene/{id}":
        {
          "delete":
            {
              "description": "Stop following a gene.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Followed gene reference id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Stop following a gene." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeFollowGeneId",
            },
          "get":
            {
              "description": "Followed reference for a followed gene.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Followed gene reference id or gene id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Followed reference for a followed gene.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowGeneId",
            },
          "put":
            {
              "description": "Update a followed gene reference.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Followed gene reference id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeFollowGene",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1MeFollowGene" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Update a followed gene reference." },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeFollowGeneId",
            },
        },
      "/api/v1/me/follow/gene":
        {
          "post":
            {
              "description": "Follow a gene.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeFollowGene",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1MeFollowGene" },
                  },
                ],
              "responses": { "201": { "description": "Follow a gene." } },
              "tags": ["me"],
              "operationId": "postApiV1MeFollowGene",
            },
        },
      "/api/v1/me/follow/profiles":
        {
          "post":
            {
              "description": "Follow 1 or more profiles.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeFollowProfiles",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeFollowProfiles" },
                  },
                ],
              "responses":
                { "201": { "description": "Follow 1 or more profiles." } },
              "tags": ["me"],
              "operationId": "postApiV1MeFollowProfiles",
            },
          "get":
            {
              "description": "Retrieve profiles that you follow.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "profiles",
                    "description": "Profiles to include.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Fair within which to search for followed partners.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "auto",
                    "description": "If true, includes only machine-assisted follows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "owner_types",
                    "description": "Restrict profiles to given owner type.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve profiles that you follow." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowProfiles",
            },
        },
      "/api/v1/me/follow/profile/{id}":
        {
          "delete":
            {
              "description": "Stop following a profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Followed profile reference id or profile handle.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Stop following a profile." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeFollowProfileId",
            },
          "get":
            {
              "description": "Followed reference for a followed profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Followed profile reference id or profile handle.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Followed reference for a followed profile.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowProfileId",
            },
        },
      "/api/v1/me/follow/profile/{profile_id}":
        {
          "post":
            {
              "description": "Follow a profile.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "profile_id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeFollowProfile",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeFollowProfile" },
                  },
                ],
              "responses": { "201": { "description": "Follow a profile." } },
              "tags": ["me"],
              "operationId": "postApiV1MeFollowProfileProfileId",
            },
        },
      "/api/v1/me/follow/profile":
        {
          "post":
            {
              "description": "Follow a profile.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeFollowProfile",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeFollowProfile" },
                  },
                ],
              "responses": { "201": { "description": "Follow a profile." } },
              "tags": ["me"],
              "operationId": "postApiV1MeFollowProfile",
            },
        },
      "/api/v1/me/follow/shows":
        {
          "get":
            {
              "description": "Retrieve shows at a fair by partners whose profiles you follow.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Fair within which to search for followed partners.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "auto",
                    "description": "If true, includes only machine-assisted follows.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve shows at a fair by partners whose profiles you follow.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowShows",
            },
        },
      "/api/v1/me/follow/artists/shows":
        {
          "get":
            {
              "description": "Retrieve visible_to_public shows based on artist follows (default sorted by start_at).",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sorting criteria",
                    "type": "string",
                    "default": "start_at",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "end_at",
                        "-end_at",
                        "start_at",
                        "-start_at",
                        "name",
                        "-name",
                        "-featured,-start_at",
                        "-featured,-end_at",
                        "sortable_name",
                        "-sortable_name",
                        "fully_qualified_name",
                        "-fully_qualified_name",
                        "-relevance,-start_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Return shows that are 'current', 'running', 'closed' or 'upcoming'.",
                    "type": "string",
                    "enum":
                      [
                        "current",
                        "running",
                        "closed",
                        "upcoming",
                        "running_and_upcoming",
                        "closing_soon",
                        "active",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve visible_to_public shows based on artist follows (default sorted by start_at).",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeFollowArtistsShows",
            },
        },
      "/api/v1/me/inquiry_introduction":
        {
          "post":
            {
              "description": "Generate gallery introduction based on params.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeInquiryIntroduction",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1MeInquiryIntroduction",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Generate gallery introduction based on params.",
                    },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeInquiryIntroduction",
            },
        },
      "/api/v1/me/inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve inquiry requests.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "inquireable_id",
                    "description": "Optional inquireable id, but must include inquireable_type.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "inquireable_type",
                    "description": "Optional inquireable type.",
                    "type": "string",
                    "enum": ["artwork", "partner_show"],
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "External session id to track logged out actions.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve inquiry requests." } },
              "tags": ["me"],
              "operationId": "getApiV1MeInquiryRequests",
            },
        },
      "/api/v1/me/inquiry_request/{id}/send":
        {
          "put":
            {
              "description": "Send a delayed inquiry request.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeInquiryRequestIdSend",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1MeInquiryRequestIdSend",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Send a delayed inquiry request." } },
              "tags": ["me"],
              "operationId": "putApiV1MeInquiryRequestIdSend",
            },
        },
      "/api/v1/me/inquiry_request/{id}":
        {
          "delete":
            {
              "description": "Delete an existing inquiry request.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "External session id to track logged out actions.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete an existing inquiry request." },
                },
              "tags": ["me"],
              "operationId": "deleteApiV1MeInquiryRequestId",
            },
          "get":
            {
              "description": "Retrieve an existing inquiry request.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "External session id to track logged out actions.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve an existing inquiry request." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeInquiryRequestId",
            },
          "put":
            {
              "description": "Update an existing inquiry request.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Inquiry request id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeInquiryRequest",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1MeInquiryRequest" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing inquiry request." },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeInquiryRequestId",
            },
        },
      "/api/v1/me/inquiry_request":
        {
          "post":
            {
              "description": "Create an inquiry request.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeInquiryRequest",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeInquiryRequest" },
                  },
                ],
              "responses":
                { "201": { "description": "Create an inquiry request." } },
              "tags": ["me"],
              "operationId": "postApiV1MeInquiryRequest",
            },
        },
      "/api/v1/me/lab/{id}":
        {
          "delete":
            {
              "description": "Turn a lab feature off.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Feature id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Turn a lab feature off." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeLabId",
            },
          "post":
            {
              "description": "Turn a lab feature on.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Feature id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Turn a lab feature on." } },
              "tags": ["me"],
              "operationId": "postApiV1MeLabId",
            },
        },
      "/api/v1/me/modules":
        {
          "get":
            {
              "description": "Retrieve states of eligible modules for a user",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve states of eligible modules for a user",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeModules",
            },
        },
      "/api/v1/me/my_collection_artworks":
        {
          "get":
            {
              "description": "Retrieve current user's MyCollection artworks",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_purchased_artworks",
                    "description": "Exclude artworks that have been purchased on Artsy and automatically added to the collection.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artworks",
                    "description": "Artworks to include.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artist_ids",
                    "description": "Filter artworks by artist IDs.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_only_target_supply",
                    "description": "Show only target supply artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      ["position", "-position", "created_at", "-created_at"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve current user's MyCollection artworks",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeMyCollectionArtworks",
            },
        },
      "/api/v1/me/notifications/mark_as_seen":
        {
          "put":
            {
              "description": "Mark notifications feed as seen",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeNotificationsMarkAsSeen",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1MeNotificationsMarkAsSeen",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Mark notifications feed as seen" } },
              "tags": ["me"],
              "operationId": "putApiV1MeNotificationsMarkAsSeen",
            },
        },
      "/api/v1/me/notifications":
        {
          "put":
            {
              "description": "Mark a user's notifications read",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeNotifications",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1MeNotifications" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Mark a user's notifications read" },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeNotifications",
            },
        },
      "/api/v1/me/notifications/{id}":
        {
          "get":
            {
              "description": "Retrieve one user's notification by notification ID",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve one user's notification by notification ID",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeNotificationsId",
            },
        },
      "/api/v1/me/notifications/feed":
        {
          "get":
            {
              "description": "Retrieve a user's notifications in bundles",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "activity_types",
                    "description": "Filter notifications by activity types.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a user's notifications in bundles",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeNotificationsFeed",
            },
        },
      "/api/v1/me/partners":
        {
          "get":
            {
              "description": "Retrieve partners under management.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "partner_ids",
                    "description": "Array of partner IDs to search for.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve partners under management." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MePartners",
            },
        },
      "/api/v1/me/partner_offers":
        {
          "get":
            {
              "description": "List partner offers for the current user",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork ID.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["created_at", "-created_at", "end_at", "-end_at"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List partner offers for the current user",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MePartnerOffers",
            },
        },
      "/api/v1/me/partner_offer/{id}":
        {
          "get":
            {
              "description": "Show a partner offer.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner offer id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Show a partner offer." } },
              "tags": ["me"],
              "operationId": "getApiV1MePartnerOfferId",
            },
        },
      "/api/v1/me/representations":
        {
          "get":
            {
              "description": "Retrieve specialist's representations.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "email",
                        "-email",
                        "collector_since",
                        "-collector_since",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve specialist's representations." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeRepresentations",
            },
        },
      "/api/v1/me/request_price_estimate":
        {
          "post":
            {
              "description": "Request Price Estimate from the Artsy Specialist (does not fail if request has already been made)",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeRequestPriceEstimate",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1MeRequestPriceEstimate",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Request Price Estimate from the Artsy Specialist (does not fail if request has already been made)",
                    },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeRequestPriceEstimate",
            },
        },
      "/api/v1/me/search_criteria/{id}":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "get SearchCriteria(s)" } },
              "tags": ["me"],
              "operationId": "getApiV1MeSearchCriteriaId",
            },
        },
      "/api/v1/me/second_factors/{id}":
        {
          "delete":
            {
              "description": "Disable (soft-delete) an enabled second factor",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Second factor id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "password",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Disable (soft-delete) an enabled second factor",
                    },
                },
              "tags": ["me"],
              "operationId": "deleteApiV1MeSecondFactorsId",
            },
          "put":
            {
              "description": "Update a disabled app or SMS second factor",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Second factor id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeSecondFactors",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1MeSecondFactors" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update a disabled app or SMS second factor",
                    },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeSecondFactorsId",
            },
        },
      "/api/v1/me/second_factors/{id}/enable":
        {
          "put":
            {
              "description": "Enable a disabled second factor",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Second factor id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeSecondFactorsIdEnable",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1MeSecondFactorsIdEnable",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Enable a disabled second factor" } },
              "tags": ["me"],
              "operationId": "putApiV1MeSecondFactorsIdEnable",
            },
        },
      "/api/v1/me/second_factors/{id}/deliver":
        {
          "put":
            {
              "description": "Triggers delivery of a second factor",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Second factor id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Triggers delivery of a second factor" },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeSecondFactorsIdDeliver",
            },
        },
      "/api/v1/me/second_factors":
        {
          "post":
            {
              "description": "Create a new app/sms second factor, or re-generate backups.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeSecondFactors",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeSecondFactors" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create a new app/sms second factor, or re-generate backups.",
                    },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeSecondFactors",
            },
          "get":
            {
              "description": "Retrieve current user's enabled second factors.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "kinds",
                    "description": "Filter by second factor kind.",
                    "type": "array",
                    "items":
                      { "type": "string", "enum": ["app", "backup", "sms"] },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve current user's enabled second factors.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeSecondFactors",
            },
        },
      "/api/v1/me/shows":
        {
          "get":
            {
              "description": "Retrieve shows based on artist follows, partner follows and location.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sorting criteria",
                    "type": "string",
                    "default": "start_at",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "end_at",
                        "-end_at",
                        "start_at",
                        "-start_at",
                        "name",
                        "-name",
                        "-featured,-start_at",
                        "-featured,-end_at",
                        "sortable_name",
                        "-sortable_name",
                        "fully_qualified_name",
                        "-fully_qualified_name",
                        "-relevance,-start_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Return shows that are 'current', 'running', 'closed' or 'upcoming'.",
                    "type": "string",
                    "enum":
                      [
                        "current",
                        "running",
                        "closed",
                        "upcoming",
                        "running_and_upcoming",
                        "closing_soon",
                        "active",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "near",
                    "description": "Coordinates to return shows closest to.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "max_distance",
                    "description": "Max distance to use when geo-locating shows, defaults to 75km.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve shows based on artist follows, partner follows and location.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeShows",
            },
        },
      "/api/v1/me/suggested/artists":
        {
          "get":
            {
              "description": "Retrieve suggested artists to follow. For now these are just related artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "exclude_artists_without_forsale_artworks",
                    "description": "If true, will only include artists with at least one published for-sale work.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_artists_without_artworks",
                    "description": "If true, will only include artists with at least one published work.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_followed_artists",
                    "description": "If true, will exclude followed artists.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_artist_ids",
                    "description": "Exclude these ids from results, may result in all artists being excluded.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_fallback_artists",
                    "description": "If true, will include featured artists if no results are found",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve suggested artists to follow. For now these are just related artists.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeSuggestedArtists",
            },
        },
      "/api/v1/me/suggested/artworks/homepage":
        {
          "get":
            {
              "description": "Deprecated genomic recommendations API.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "limit",
                    "description": "Limit.",
                    "type": "integer",
                    "format": "int32",
                    "default": 4,
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Deprecated genomic recommendations API.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeSuggestedArtworksHomepage",
            },
        },
      "/api/v1/me/tasks":
        {
          "get":
            {
              "description": "List tasks for the current user",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "List tasks for the current user" } },
              "tags": ["me"],
              "operationId": "getApiV1MeTasks",
            },
        },
      "/api/v1/me/task/{id}/acknowledge":
        {
          "put":
            {
              "description": "Acknowledge a task",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Task id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Acknowledge a task" } },
              "tags": ["me"],
              "operationId": "putApiV1MeTaskIdAcknowledge",
            },
        },
      "/api/v1/me/task/{id}/dismiss":
        {
          "put":
            {
              "description": "Dismiss a task",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Task id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Dismiss a task" } },
              "tags": ["me"],
              "operationId": "putApiV1MeTaskIdDismiss",
            },
        },
      "/api/v1/me/user_fair_actions":
        {
          "get":
            {
              "description": "Retrieve user fair actions for the current user or an anonymous session.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["-_id", "_id"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Session id associated with the anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve user fair actions for the current user or an anonymous session.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeUserFairActions",
            },
        },
      "/api/v1/me/user_fair_action":
        {
          "post":
            {
              "description": "Create a user fair action for the current user or an anonymous session.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeUserFairAction",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeUserFairAction" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create a user fair action for the current user or an anonymous session.",
                    },
                },
              "tags": ["me"],
              "operationId": "postApiV1MeUserFairAction",
            },
        },
      "/api/v1/me/user_interests":
        {
          "get":
            {
              "description": "Retrieve user interests of a collector profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "interest_type",
                    "description": "Type of interest.",
                    "type": "string",
                    "enum": ["Artist", "Gene"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "interest_id",
                    "description": "Id of the user Interest. Can be an Artist ID or a Gene ID",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "category",
                    "description": "UserInterest Category",
                    "type": "string",
                    "enum": ["collected_before", "interested_in_collecting"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Client's key for anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve user interests of a collector profile.",
                    },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeUserInterests",
            },
        },
      "/api/v1/me/user_interest/{id}":
        {
          "delete":
            {
              "description": "Stop bookmarking an interest.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Either the `id` or the `interest_id` of a user interest",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Session id associated with the anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "204": { "description": "Stop bookmarking an interest." } },
              "tags": ["me"],
              "operationId": "deleteApiV1MeUserInterestId",
            },
          "get":
            {
              "description": "Get an interest bookmark.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Bookmarked interest reference id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Session id associated with the anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Get an interest bookmark." } },
              "tags": ["me"],
              "operationId": "getApiV1MeUserInterestId",
            },
          "put":
            {
              "description": "Update a bookmarked interest reference.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Bookmarked interest reference id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1MeUserInterest",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1MeUserInterest" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update a bookmarked interest reference.",
                    },
                },
              "tags": ["me"],
              "operationId": "putApiV1MeUserInterestId",
            },
        },
      "/api/v1/me/user_interest":
        {
          "post":
            {
              "description": "Bookmark an interest.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MeUserInterest",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MeUserInterest" },
                  },
                ],
              "responses":
                { "201": { "description": "Bookmark an interest." } },
              "tags": ["me"],
              "operationId": "postApiV1MeUserInterest",
            },
        },
      "/api/v1/me/user_interest/artists":
        {
          "get":
            {
              "description": "Retrieve artists that you bookmarked.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve artists that you bookmarked." },
                },
              "tags": ["me"],
              "operationId": "getApiV1MeUserInterestArtists",
            },
        },
      "/api/v1/merchant_accounts":
        {
          "get":
            {
              "description": "Retrieve merchant accounts.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner Id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "include_deactivated",
                    "description": "Flag for including deactivated merchant accounts.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve merchant accounts." } },
              "tags": ["merchant_accounts"],
              "operationId": "getApiV1MerchantAccounts",
            },
        },
      "/api/v1/merchant_account/{id}":
        {
          "delete":
            {
              "description": "Deactivate a merchant account for a partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Merchant account Id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Deactivate a merchant account for a partner.",
                    },
                },
              "tags": ["merchant_account"],
              "operationId": "deleteApiV1MerchantAccountId",
            },
        },
      "/api/v1/merchant_account":
        {
          "post":
            {
              "description": "Create or reactivate a merchant account for a partner.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1MerchantAccount",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1MerchantAccount" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create or reactivate a merchant account for a partner.",
                    },
                },
              "tags": ["merchant_account"],
              "operationId": "postApiV1MerchantAccount",
            },
        },
      "/api/v1/notification_preferences":
        {
          "post":
            {
              "description": "Update notification preferences.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1NotificationPreferences",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1NotificationPreferences",
                      },
                  },
                ],
              "responses":
                {
                  "201": { "description": "Update notification preferences." },
                },
              "tags": ["notification_preferences"],
              "operationId": "postApiV1NotificationPreferences",
            },
          "get":
            {
              "description": "Get notification preferences.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "authentication_token",
                    "description": "Auth token.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Get notification preferences." } },
              "tags": ["notification_preferences"],
              "operationId": "getApiV1NotificationPreferences",
            },
        },
      "/api/v1/pages":
        {
          "get":
            {
              "description": "Retrieve all pages.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["created_at", "-created_at", "name", "-name"],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve all pages." } },
              "tags": ["pages"],
              "operationId": "getApiV1Pages",
            },
        },
      "/api/v1/page/{id}":
        {
          "delete":
            {
              "description": "Delete an existing page.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Page id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing page." } },
              "tags": ["page"],
              "operationId": "deleteApiV1PageId",
            },
          "get":
            {
              "description": "Retrieve an existing page.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Page id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an existing page." } },
              "tags": ["page"],
              "operationId": "getApiV1PageId",
            },
          "put":
            {
              "description": "Update an existing page.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Page id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Page",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Page" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing page." } },
              "tags": ["page"],
              "operationId": "putApiV1PageId",
            },
        },
      "/api/v1/page":
        {
          "post":
            {
              "description": "Create a page.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Page",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Page" },
                  },
                ],
              "responses": { "201": { "description": "Create a page." } },
              "tags": ["page"],
              "operationId": "postApiV1Page",
            },
        },
      "/api/v1/partner/{id}/size(/{type})":
        {
          "get":
            {
              "description": "Get total bytes for a partner's documents and images.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "type",
                    "description": "Images, documents or all.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get total bytes for a partner's documents and images.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdSize(Type)",
            },
        },
      "/api/v1/partner/{partner_id}/show/{id}/neighbors":
        {
          "get":
            {
              "description": "Given a partner show, retrieve the next and previous shows sorted by -start_at",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Given a partner show, retrieve the next and previous shows sorted by -start_at",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowIdNeighbors",
            },
        },
      "/api/v1/partner/{partner_id}/show/{id}":
        {
          "delete":
            {
              "description": "Delete an existing partner show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204": { "description": "Delete an existing partner show." },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdShowId",
            },
          "get":
            {
              "description": "Retrieve a partner show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a partner show." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowId",
            },
          "put":
            {
              "description": "Update an existing partner show.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdShow",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1PartnerPartnerIdShow" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Update an existing partner show." },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdShowId",
            },
        },
      "/api/v1/partner/{id}/show":
        {
          "post":
            {
              "description": "Create a new partner show.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerIdShow",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1PartnerIdShow" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new partner show." } },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerIdShow",
            },
        },
      "/api/v1/partner/{partner_id}/shows":
        {
          "get":
            {
              "description": "Retrieve all partner shows.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist id. If passed in, endpoint will return shows at this partner the artist is in.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork id. If passed in, endpoint will return shows at this partner the artwork is in.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Partner show status.",
                    "type": "string",
                    "enum":
                      [
                        "current",
                        "running",
                        "closed",
                        "upcoming",
                        "running_and_upcoming",
                        "closing_soon",
                        "active",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "displayable",
                    "description": "Show only displayable shows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_local_discovery",
                    "description": "Include local discovery stubs in admin results.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "at_a_fair",
                    "description": "Allows to select only fair shows or only shows that are not at the fair.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "end_at",
                        "-end_at",
                        "start_at",
                        "-start_at",
                        "name",
                        "-name",
                        "-featured,-start_at",
                        "-featured,-end_at",
                        "sortable_name",
                        "-sortable_name",
                        "fully_qualified_name",
                        "-fully_qualified_name",
                        "-relevance,-start_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partner shows." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShows",
            },
        },
      "/api/v1/partner/{partner_id}/show/{show_id}/document/{id}":
        {
          "delete":
            {
              "description": "Delete a partner show document.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Document id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a partner show document." } },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdShowShowIdDocumentId",
            },
          "get":
            {
              "description": "Retrieve a partner show document.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Document id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve a partner show document." },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowShowIdDocumentId",
            },
          "put":
            {
              "description": "Update a partner show document.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Document id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdShowShowIdDocument",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerPartnerIdShowShowIdDocument",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Update a partner show document." } },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdShowShowIdDocumentId",
            },
        },
      "/api/v1/partner/{partner_id}/show/{show_id}/document":
        {
          "post":
            {
              "description": "Create a partner show document.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdShowShowIdDocument",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdShowShowIdDocument",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Create a partner show document." } },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdShowShowIdDocument",
            },
        },
      "/api/v1/partner/{partner_id}/show/{show_id}/documents":
        {
          "get":
            {
              "description": "Retrieve all partner show documents for a given partner and show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all partner show documents for a given partner and show.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowShowIdDocuments",
            },
        },
      "/api/v1/partner/{partner_id}/show/{partner_show_id}/artwork/{id}":
        {
          "delete":
            {
              "description": "Remove an artwork from a partner show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Remove an artwork from a partner show." },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdShowPartnerShowIdArtworkId",
            },
          "put":
            {
              "description": "Update an artwork within a partner show.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdShowPartnerShowIdArtwork",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerPartnerIdShowPartnerShowIdArtwork",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update an artwork within a partner show.",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdShowPartnerShowIdArtworkId",
            },
          "post":
            {
              "description": "Add an artwork to a partner show.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdShowPartnerShowIdArtwork",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdShowPartnerShowIdArtwork",
                      },
                  },
                ],
              "responses":
                {
                  "201": { "description": "Add an artwork to a partner show." },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdShowPartnerShowIdArtworkId",
            },
        },
      "/api/v1/partner/{partner_id}/show/{partner_show_id}/reposition":
        {
          "post":
            {
              "description": "Reposition artworks in a partner show.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "artwork_ids",
                    "description": "Array of artwork ids in the show.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Reposition artworks in a partner show." },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdShowPartnerShowIdReposition",
            },
        },
      "/api/v1/partner/{partner_id}/show/{partner_show_id}/artworks":
        {
          "get":
            {
              "description": "Retrieve all artworks at a partner show sorted by position.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "without_artist",
                    "description": "Return artworks without an artist.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "availability",
                    "description": "Return artworks with a given availability.",
                    "type": "string",
                    "enum":
                      [
                        "for sale",
                        "not for sale",
                        "on hold",
                        "on loan",
                        "permanent collection",
                        "sold",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "Return artworks with for_sale availability.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale_sold_on_hold",
                    "description": "Return artworks with availability other than not-for-sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "not_for_sale",
                    "description": "Return artworks with availability other than for_sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Return only artworks in given published status.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "visibility_levels",
                    "description": "Return artworks with a given visibility level",
                    "type": "array",
                    "items":
                      { "type": "string", "enum": ["unlisted", "listed"] },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "An array of artwork ids to exclude from the response.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artworks at a partner show sorted by position.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowPartnerShowIdArtworks",
            },
        },
      "/api/v1/partner/{partner_id}/show/{partner_show_id}/artworks/all":
        {
          "get":
            {
              "description": "Retrieve deep data for all artworks at a partner show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "without_artist",
                    "description": "Return artworks without an artist.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "availability",
                    "description": "Return artworks with a given availability.",
                    "type": "string",
                    "enum":
                      [
                        "for sale",
                        "not for sale",
                        "on hold",
                        "on loan",
                        "permanent collection",
                        "sold",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "ecommerce",
                    "description": "Return artworks available for buy now",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offer",
                    "description": "Return artworks available for make offer",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "Return artworks with for_sale availability.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale_sold_on_hold",
                    "description": "Return artworks with availability other than not-for-sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "not_for_sale",
                    "description": "Return artworks with availability other than for_sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Return only artworks in given published status.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "visibility_levels",
                    "description": "Return artworks with a given visibility level",
                    "type": "array",
                    "items":
                      { "type": "string", "enum": ["unlisted", "listed"] },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve deep data for all artworks at a partner show.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowPartnerShowIdArtworksAll",
            },
        },
      "/api/v1/partner/{partner_id}/show/{partner_show_id}/artists":
        {
          "get":
            {
              "description": "Retrieve all artists at a partner show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Pass to filter out unpublished works.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artists at a partner show.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowPartnerShowIdArtists",
            },
        },
      "/api/v1/partner/{partner_id}/location/{id}":
        {
          "delete":
            {
              "description": "Delete an existing partner location.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Location id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete an existing partner location." },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdLocationId",
            },
          "get":
            {
              "description": "Retrieve a partner location.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a partner location." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdLocationId",
            },
          "put":
            {
              "description": "Update an existing partner location.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdLocation",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerPartnerIdLocation",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing partner location." },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdLocationId",
            },
        },
      "/api/v1/partner/{partner_id}/location/{id}/billing_location":
        {
          "put":
            {
              "description": "Set an existing partner location as a billing location (for subscription tax purposes).",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Location id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Set an existing partner location as a billing location (for subscription tax purposes).",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdLocationIdBillingLocation",
            },
        },
      "/api/v1/partner/{id}/location":
        {
          "post":
            {
              "description": "Create a new partner location.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerIdLocation",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1PartnerIdLocation" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new partner location." } },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerIdLocation",
            },
        },
      "/api/v1/partner/{partner_id}/locations/reposition":
        {
          "post":
            {
              "description": "Reposition partner locations.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "location_ids",
                    "description": "Array of partner location ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Reposition partner locations." } },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdLocationsReposition",
            },
        },
      "/api/v1/partner/{partner_id}/locations":
        {
          "get":
            {
              "description": "Retrieve all partner locations.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "private",
                    "description": "Include private locations.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "address_type",
                    "description": "Array of address types.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partner locations." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdLocations",
            },
        },
      "/api/v1/partner/{partner_id}/location/{location_id}/day_schedule/{id}":
        {
          "delete":
            {
              "description": "Delete a partner location day schedule.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "location_id",
                    "description": "Location id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Schedule id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Delete a partner location day schedule.",
                    },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdLocationLocationIdDayScheduleId",
            },
          "put":
            {
              "description": "Update a partner location day schedule.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "location_id",
                    "description": "Location id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Schedule id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update a partner location day schedule.",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdLocationLocationIdDayScheduleId",
            },
          "get":
            {
              "description": "Retrieve a partner location day schedule.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "location_id",
                    "description": "Location id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Schedule id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a partner location day schedule.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdLocationLocationIdDayScheduleId",
            },
        },
      "/api/v1/partner/{partner_id}/location/{location_id}/day_schedule":
        {
          "post":
            {
              "description": "Create a partner location schedule.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "location_id",
                    "description": "Location id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Create a partner location schedule." },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdLocationLocationIdDaySchedule",
            },
        },
      "/api/v1/partner/{partner_id}/location/{location_id}/day_schedules":
        {
          "get":
            {
              "description": "Retrieve all day schedules for a given location.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "location_id",
                    "description": "Location id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all day schedules for a given location.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdLocationLocationIdDaySchedules",
            },
        },
      "/api/v1/partner/{id}":
        {
          "delete":
            {
              "description": "Delete an existing partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing partner." } },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerId",
            },
          "put":
            {
              "description": "Update an existing partner.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Partner",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Partner" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing partner." } },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerId",
            },
          "get":
            {
              "description": "Retrieve an existing partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an existing partner." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerId",
            },
        },
      "/api/v1/partner/{id}/artwork_inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve all artwork inquiry requests by a partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-created_at",
                        "created_at",
                        "-outcome",
                        "outcome",
                        "likely_to_purchase",
                        "-likely_to_purchase",
                        "status",
                        "-status",
                        "flagged",
                        "-flagged",
                        "contact_gallery",
                        "-contact_gallery",
                        "status,-likely_to_purchase,created_at",
                        "last_message_received_at",
                        "-last_message_received_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artwork inquiry requests by a partner.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdArtworkInquiryRequests",
            },
        },
      "/api/v1/partner":
        {
          "post":
            {
              "description": "Create a new partner.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Partner",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Partner" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new partner." } },
              "tags": ["partner"],
              "operationId": "postApiV1Partner",
            },
        },
      "/api/v1/partner/{partner_id}/documents":
        {
          "get":
            {
              "description": "Retrieve all documents for a given partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "document_ids",
                    "description": "One or more document ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all documents for a given partner.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdDocuments",
            },
        },
      "/api/v1/partner/{partner_id}/contact/{id}":
        {
          "delete":
            {
              "description": "Delete an existing partner contact.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Contact id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete an existing partner contact." },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdContactId",
            },
          "get":
            {
              "description": "Retrieve a partner contact.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a partner contact." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdContactId",
            },
          "put":
            {
              "description": "Update an existing partner contact.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdContact",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerPartnerIdContact",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing partner contact." },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdContactId",
            },
        },
      "/api/v1/partner/{partner_id}/contact":
        {
          "post":
            {
              "description": "Create a new partner contact.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdContact",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdContact",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new partner contact." } },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdContact",
            },
        },
      "/api/v1/partner/{partner_id}/contacts/reposition":
        {
          "post":
            {
              "description": "Reposition partner contacts.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "contact_ids",
                    "description": "Array of partner contact ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Reposition partner contacts." } },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdContactsReposition",
            },
        },
      "/api/v1/partner/{partner_id}/contacts":
        {
          "get":
            {
              "description": "Retrieve all partner contacts.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "contact_type",
                    "description": "Contact type.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_location",
                    "description": "Partner location object id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "can_contact",
                    "description": "Only return contacts with given value for can_contact.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partner contacts." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdContacts",
            },
        },
      "/api/v1/partner/{partner_id}/contact/{id}/contact_type":
        {
          "put":
            {
              "description": "Update the contact type for a partner contact.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Contact id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdContactIdContactType",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerPartnerIdContactIdContactType",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update the contact type for a partner contact.",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdContactIdContactType",
            },
        },
      "/api/v1/partner/{partner_id}/commission_exemptions_credit":
        {
          "post":
            {
              "description": "Add a commission exemption credit in USD.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdCommissionExemptionsCredit",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdCommissionExemptionsCredit",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Add a commission exemption credit in USD.",
                    },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdCommissionExemptionsCredit",
            },
        },
      "/api/v1/partner/{id}/artwork/{artwork_id}/genome":
        {
          "put":
            {
              "description": "Update an artwork's genome.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerIdArtworkArtworkIdGenome",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerIdArtworkArtworkIdGenome",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Update an artwork's genome." } },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerIdArtworkArtworkIdGenome",
            },
          "get":
            {
              "description": "Retrieve an artwork's genome.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an artwork's genome." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdArtworkArtworkIdGenome",
            },
        },
      "/api/v1/partner/{id}/artworks":
        {
          "put":
            {
              "description": "Bulk edit all partner artworks.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerIdArtworks",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1PartnerIdArtworks" },
                  },
                ],
              "responses":
                { "200": { "description": "Bulk edit all partner artworks." } },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerIdArtworks",
            },
          "get":
            {
              "description": "Retrieve all partner artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "availability_changed_since",
                    "description": "Return artworks that changed availability after a given timestamp.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Return artworks by a given artist.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artwork_id",
                    "description": "One or more artwork ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "viewing_room_id",
                    "description": "Return artworks included in a Viewing Room",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "without_artist",
                    "description": "Return artworks without an artist.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "availability",
                    "description": "Return artworks with a given availability.",
                    "type": "string",
                    "enum":
                      [
                        "for sale",
                        "not for sale",
                        "on hold",
                        "on loan",
                        "permanent collection",
                        "sold",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "Return artworks with for_sale availability.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale_sold_on_hold",
                    "description": "Return artworks with availability other than not-for-sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "not_for_sale",
                    "description": "Return artworks with availability other than for_sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Return only artworks in given published status.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "visibility_levels",
                    "description": "Return artworks with a given visibility level",
                    "type": "array",
                    "items":
                      { "type": "string", "enum": ["unlisted", "listed"] },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "An array of artwork ids to exclude from the response.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published_within",
                    "description": "Return artworks published within the last x seconds.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "missing_priority_metadata",
                    "description": "Return artworks that are missing priority metadata",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_offerable",
                    "description": "Return artworks that are partner-offerable.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partner artworks." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdArtworks",
            },
        },
      "/api/v1/partner/{id}/artworks/duplicate":
        {
          "post":
            {
              "description": "Create an artwork by duplicating attributes from original artwork.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerIdArtworksDuplicate",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerIdArtworksDuplicate",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create an artwork by duplicating attributes from original artwork.",
                    },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerIdArtworksDuplicate",
            },
        },
      "/api/v1/partner/{id}/artworks/{artwork_id}/offerable_activity":
        {
          "get":
            {
              "description": "Retrieve offerable activity for a partner artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve offerable activity for a partner artwork.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdArtworksArtworkIdOfferableActivity",
            },
        },
      "/api/v1/partner/{id}/artworks/all":
        {
          "get":
            {
              "description": "Retrieve deep data for all partner artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "artwork_id",
                    "description": "One or more artwork ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Return artworks by a given artist.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "without_artist",
                    "description": "Return artworks without an artist.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "format",
                    "description": "Desired format.",
                    "type": "string",
                    "default": "json",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "availability",
                    "description": "Return artworks with a given availability.",
                    "type": "string",
                    "enum":
                      [
                        "for sale",
                        "not for sale",
                        "on hold",
                        "on loan",
                        "permanent collection",
                        "sold",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "external_id",
                    "description": "External id value",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "external_id_operator",
                    "description": 'Either "ne" for not equal queries or "eq" for equal queries.',
                    "type": "string",
                    "default": "eq",
                    "enum": ["eq", "ne"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "import_source",
                    "description": "Import Source value",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "import_source_operator",
                    "description": 'Either "ne" for not equal queries or "eq" for equal queries.',
                    "type": "string",
                    "default": "eq",
                    "enum": ["eq", "ne"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "ecommerce",
                    "description": "Return artworks available for buy now",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offer",
                    "description": "Return artworks available for make offer",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "Return artworks with for_sale availability.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale_sold_on_hold",
                    "description": "Return artworks with availability other than not-for-sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "not_for_sale",
                    "description": "Return artworks with availability other than for_sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Return only artworks in given published status.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "visibility_levels",
                    "description": "Return artworks with a given visibility level",
                    "type": "array",
                    "items":
                      { "type": "string", "enum": ["unlisted", "listed"] },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "category",
                    "description": "Return artworks that belong to a category.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_location_id",
                    "description": "Return artworks that are at a given partner location.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "price_visibility",
                    "description": "Return artworks matching a specific price visibility setting.",
                    "type": "string",
                    "enum": ["hidden", "exact", "range"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "missing_price_info",
                    "description": "Return artworks missing pricing information.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "missing_visible_price",
                    "description": "Return artworks that have pricing information but it is hidden or displayed as range.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "missing_medium",
                    "description": "Return artworks that are missing a medium.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "missing_category",
                    "description": "Return artworks that are missing a category.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "missing_partner_genes",
                    "description": "Return artworks that are missing a partner genome.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_deleted",
                    "description": "Include deleted artworks in the results.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve deep data for all partner artworks.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdArtworksAll",
            },
        },
      "/api/v1/partner/{id}/artist/{artist_id}/neighbors":
        {
          "get":
            {
              "description": "Given a partner artist, retrieve the next and previous artists sorted by -sort_id",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Given a partner artist, retrieve the next and previous artists sorted by -sort_id",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdArtistArtistIdNeighbors",
            },
        },
      "/api/v1/partner/{id}/artist/{artist_id}":
        {
          "delete":
            {
              "description": "Delete a partner artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a partner artist." } },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerIdArtistArtistId",
            },
          "put":
            {
              "description": "Update an existing partner artist.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerIdArtist",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1PartnerIdArtist" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing partner artist." },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerIdArtistArtistId",
            },
          "get":
            {
              "description": "Retrieve partner artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve partner artist." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdArtistArtistId",
            },
        },
      "/api/v1/partner/{id}/artists":
        {
          "get":
            {
              "description": "Retrieve all partner artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "represented_by",
                    "description": "Only return artists represented by this partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "display_on_partner_profile",
                    "description": "Only return artists that are to be displayed on the partner profile page.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_slugs",
                        "-_slugs",
                        "created_at",
                        "-created_at",
                        "sortable_id",
                        "-sortable_id",
                        "-trending",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partner artists." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdArtists",
            },
        },
      "/api/v1/partner/{id}/partner_artists/all":
        {
          "get":
            {
              "description": "Retrieve deep data for all partner artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "represented_by",
                    "description": "Only return artists represented by this partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "display_on_partner_profile",
                    "description": "Only return artists that are to be displayed on the partner profile page.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "missing_biography",
                    "description": "Only return artists that are missing biographies.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_slugs",
                        "-_slugs",
                        "created_at",
                        "-created_at",
                        "sortable_id",
                        "-sortable_id",
                        "-trending",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve deep data for all partner artists.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdPartnerArtistsAll",
            },
        },
      "/api/v1/partner/{id}/partner_artists":
        {
          "get":
            {
              "description": "Retrieve all partner artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "artist_ids",
                    "description": "Artist ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "represented_by",
                    "description": "Only return artists represented by this partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "display_on_partner_profile",
                    "description": "Only return artists that are to be displayed on the partner profile page.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_published_artworks",
                    "description": "Only returns artists that have published arwtorks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "represented_by_or_has_published_artworks",
                    "description": "Return artists that are represented by the partner and those that are not but have published artworks. Do not use in conjunction with represented_by and has_published_artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_slugs",
                        "-_slugs",
                        "created_at",
                        "-created_at",
                        "sortable_id",
                        "-sortable_id",
                        "-trending",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partner artists." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdPartnerArtists",
            },
        },
      "/api/v1/partner/{partner_id}/artist/{artist_id}/document/{id}":
        {
          "delete":
            {
              "description": "Delete a partner artist document.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Document id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204": { "description": "Delete a partner artist document." },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdArtistArtistIdDocumentId",
            },
          "get":
            {
              "description": "Retrieve a partner artist document.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Document id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve a partner artist document." },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdArtistArtistIdDocumentId",
            },
          "put":
            {
              "description": "Update a partner artist document.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Document id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdArtistArtistIdDocument",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerPartnerIdArtistArtistIdDocument",
                      },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Update a partner artist document." },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdArtistArtistIdDocumentId",
            },
        },
      "/api/v1/partner/{partner_id}/artist/{artist_id}/document":
        {
          "post":
            {
              "description": "Create a partner artist document.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdArtistArtistIdDocument",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdArtistArtistIdDocument",
                      },
                  },
                ],
              "responses":
                {
                  "201": { "description": "Create a partner artist document." },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdArtistArtistIdDocument",
            },
        },
      "/api/v1/partner/{partner_id}/artist/{artist_id}/documents":
        {
          "get":
            {
              "description": "Retrieve all partner artist documents for a given partner and artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all partner artist documents for a given partner and artist.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdArtistArtistIdDocuments",
            },
        },
      ? "/api/v1/partner/{partner_id}/artist/{artist_id}/partner_artist_artworks/reposition"
      : {
          "post":
            {
              "description": "Reposition partner artist artworks.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "partner_artist_artwork_ids",
                    "description": "Array of partner artist artwork ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Reposition partner artist artworks." },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdArtistArtistIdPartnerArtistArtworksReposition",
            },
        },
      ? "/api/v1/partner/{partner_id}/artist/{artist_id}/partner_artist_artwork/{id}/neighbors"
      : {
          "get":
            {
              "description": "Given an artwork, retrieve the next and previous partner artist artworks sorted by position",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Given an artwork, retrieve the next and previous partner artist artworks sorted by position",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdArtistArtistIdPartnerArtistArtworkIdNeighbors",
            },
        },
      "/api/v1/partner/{partner_id}/artist/{artist_id}/partner_artist_artworks":
        {
          "get":
            {
              "description": "Retrieve partner published artworks by a given artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["position", "-position"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve partner published artworks by a given artist.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdArtistArtistIdPartnerArtistArtworks",
            },
        },
      ? "/api/v1/partner/{partner_id}/artist/{artist_id}/partner_artist_artworks/all"
      : {
          "get":
            {
              "description": "Retrieve full json of all partner artist artworks for a given partner and artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "availability",
                    "description": "Return artworks with a given availability.",
                    "type": "string",
                    "enum":
                      [
                        "for sale",
                        "not for sale",
                        "on hold",
                        "on loan",
                        "permanent collection",
                        "sold",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "Return artworks with for_sale availability.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale_sold_on_hold",
                    "description": "Return artworks with availability other than not-for-sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "not_for_sale",
                    "description": "Return artworks with availability other than for_sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Return only artworks in given published status.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "visibility_levels",
                    "description": "Return artworks with a given visibility level",
                    "type": "array",
                    "items":
                      { "type": "string", "enum": ["unlisted", "listed"] },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["position", "-position"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve full json of all partner artist artworks for a given partner and artist.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdArtistArtistIdPartnerArtistArtworksAll",
            },
        },
      "/api/v1/partner/{partner_id}/artist/{artist_id}/artworks":
        {
          "get":
            {
              "description": "Retrieve partner published artworks by a given artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve partner published artworks by a given artist.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdArtistArtistIdArtworks",
            },
        },
      "/api/v1/partner/{partner_id}/artist/{artist_id}/artworks/all":
        {
          "get":
            {
              "description": "Retrieve full json of all artworks for a given partner and artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "availability",
                    "description": "Return artworks with a given availability.",
                    "type": "string",
                    "enum":
                      [
                        "for sale",
                        "not for sale",
                        "on hold",
                        "on loan",
                        "permanent collection",
                        "sold",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "ecommerce",
                    "description": "Return artworks available for buy now",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offer",
                    "description": "Return artworks available for make offer",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "Return artworks with for_sale availability.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "for_sale_sold_on_hold",
                    "description": "Return artworks with availability other than not-for-sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "not_for_sale",
                    "description": "Return artworks with availability other than for_sale.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Return only artworks in given published status.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "visibility_levels",
                    "description": "Return artworks with a given visibility level",
                    "type": "array",
                    "items":
                      { "type": "string", "enum": ["unlisted", "listed"] },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_location_id",
                    "description": "Return artworks that are at a given partner location.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "title",
                        "-title",
                        "created_at",
                        "-created_at",
                        "-created_at,-id",
                        "deleted_at",
                        "-deleted_at",
                        "-iconicity",
                        "-merchandisability",
                        "published_at",
                        "-published_at",
                        "-partner_updated_at",
                        "availability",
                        "-recent_saves_count",
                        "-last_offerable_activity_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve full json of all artworks for a given partner and artist.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdArtistArtistIdArtworksAll",
            },
        },
      "/api/v1/partner/{partner_id}/album/{id}":
        {
          "delete":
            {
              "description": "Delete an existing album.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Album id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing album." } },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdAlbumId",
            },
          "get":
            {
              "description": "Retrieve a partner album.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a partner album." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdAlbumId",
            },
          "put":
            {
              "description": "Update an existing partner album.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdAlbum",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1PartnerPartnerIdAlbum" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Update an existing partner album." },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdAlbumId",
            },
        },
      "/api/v1/partner/{id}/album":
        {
          "post":
            {
              "description": "Create a new partner album.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerIdAlbum",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1PartnerIdAlbum" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new partner album." } },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerIdAlbum",
            },
        },
      "/api/v1/partner/{partner_id}/albums":
        {
          "get":
            {
              "description": "Retrieve all partner albums.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["created_at", "-created_at", "name", "-name"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partner albums." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdAlbums",
            },
        },
      "/api/v1/partner/{partner_id}/album/{partner_album_id}/artwork/{id}":
        {
          "delete":
            {
              "description": "Remove an artwork from a partner album.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_album_id",
                    "description": "Partner album id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Remove an artwork from a partner album.",
                    },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtworkId",
            },
          "put":
            {
              "description": "Update an artwork within a partner album.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_album_id",
                    "description": "Partner album id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtwork",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtwork",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update an artwork within a partner album.",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtworkId",
            },
          "post":
            {
              "description": "Add an artwork to a partner album.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_album_id",
                    "description": "Partner album id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtwork",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtwork",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Add an artwork to a partner album." },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtworkId",
            },
        },
      "/api/v1/partner/{partner_id}/album/{partner_album_id}/reposition":
        {
          "post":
            {
              "description": "Reposition artworks in a partner album.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_album_id",
                    "description": "Partner album id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "artwork_ids",
                    "description": "Array of artwork ids in the album.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Reposition artworks in a partner album.",
                    },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdAlbumPartnerAlbumIdReposition",
            },
        },
      "/api/v1/partner/{partner_id}/album/{partner_album_id}/artworks":
        {
          "get":
            {
              "description": "Retrieve all artworks at a partner album sorted by position.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_album_id",
                    "description": "Partner album id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "published",
                    "description": "Pass to filter out unpublished works.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artworks at a partner album sorted by position.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtworks",
            },
        },
      "/api/v1/partner/{partner_id}/viewing_rooms":
        {
          "get":
            {
              "description": "Return partner's viewing rooms.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "viewing_room_id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Return partner's viewing rooms." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdViewingRooms",
            },
        },
      "/api/v1/partner/{partner_id}/partner_search_criteria_hits":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "minimum": 0,
                    "maximum": 99,
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "get PartnerSearchCriteriaHit(s)" } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdPartnerSearchCriteriaHits",
            },
        },
      "/api/v1/partner/{partner_id}/partner_search_criteria/{id}":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "get PartnerSearchCriteria(s)" } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdPartnerSearchCriteriaId",
            },
        },
      "/api/v1/partner/{partner_id}/partner_search_criterias":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "minimum": 0,
                    "maximum": 99,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "total_count",
                    "description": "When true, include total count in headers",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "get PartnerSearchCriteria(s)" } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdPartnerSearchCriterias",
            },
        },
      "/api/v1/partner/{partner_id}/inquiry_request/{inquiry_request_id}":
        {
          "get":
            {
              "description": "Retrieve details for existing inquiry request.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "inquiry_request_id",
                    "description": "Inquiry Request id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve details for existing inquiry request.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdInquiryRequestInquiryRequestId",
            },
        },
      "/api/v1/partner/{partner_id}/inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve all inquiry_requests for a given partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "type",
                    "description": "Inquired object type. Limits to returning only ArtworkInquiryRequests or PartnerShowInquiryRequests.",
                    "type": "string",
                    "enum": ["artwork", "partner_show"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "inquireable_id",
                    "description": "Id of the inquired on object. Artwork or PartnerShow id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-created_at",
                        "created_at",
                        "-outcome",
                        "outcome",
                        "likely_to_purchase",
                        "-likely_to_purchase",
                        "status",
                        "-status",
                        "flagged",
                        "-flagged",
                        "contact_gallery",
                        "-contact_gallery",
                        "status,-likely_to_purchase,created_at",
                        "last_message_received_at",
                        "-last_message_received_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all inquiry_requests for a given partner.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdInquiryRequests",
            },
        },
      ? "/api/v1/partner/{partner_id}/inquiry_request/{inquiry_request_id}/collector_profile"
      : {
          "get":
            {
              "description": "Retrieve details of a collector profile of an inquiry request",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "inquiry_request_id",
                    "description": "Inquiry Request id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve details of a collector profile of an inquiry request",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdInquiryRequestInquiryRequestIdCollectorProfile",
            },
        },
      "/api/v1/partner/{partner_id}/credit_card/{credit_card_id}":
        {
          "delete":
            {
              "description": "Deactivates a partner credit card.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "credit_card_id",
                    "description": "Credit Card id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Deactivates a partner credit card." },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdCreditCardCreditCardId",
            },
          "get":
            {
              "description": "Retrieve an existing partner credit card.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "credit_card_id",
                    "description": "Credit card id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve an existing partner credit card.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdCreditCardCreditCardId",
            },
        },
      "/api/v1/partner/{partner_id}/credit_card/{credit_card_id}/default":
        {
          "put":
            {
              "description": "Set an existing partner credit card to default.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "credit_card_id",
                    "description": "Credit card id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Set an existing partner credit card to default.",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdCreditCardCreditCardIdDefault",
            },
        },
      "/api/v1/partner/{partner_id}/credit_cards":
        {
          "get":
            {
              "description": "Retrieve all active partner credit cards.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all active partner credit cards.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdCreditCards",
            },
        },
      "/api/v1/partner/{partner_id}/credit_card":
        {
          "post":
            {
              "description": "Creates a new partner credit card with a given token attached to the partner's customer account.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdCreditCard",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdCreditCard",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Creates a new partner credit card with a given token attached to the partner's customer account.",
                    },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdCreditCard",
            },
        },
      "/api/v1/partner/{partner_id}/opt_in_artworks_into_commerce":
        {
          "put":
            {
              "description": "Opt artworks into Commerce and Make Offer listing options",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdOptInArtworksIntoCommerce",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerPartnerIdOptInArtworksIntoCommerce",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Opt artworks into Commerce and Make Offer listing options",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdOptInArtworksIntoCommerce",
            },
        },
      "/api/v1/partner/{partner_id}/commerce_opt_in_eligible_artworks_report":
        {
          "post":
            {
              "description": "Send an email to the current user containing artwork data",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdCommerceOptInEligibleArtworksReport",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdCommerceOptInEligibleArtworksReport",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Send an email to the current user containing artwork data",
                    },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdCommerceOptInEligibleArtworksReport",
            },
        },
      "/api/v1/partner/{partner_id}/bank_account/{bank_account_id}/refresh":
        {
          "put":
            {
              "description": "Refresh bank account.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner ID.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "bank_account_id",
                    "description": "Bank Account id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Refresh bank account." } },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdBankAccountBankAccountIdRefresh",
            },
        },
      "/api/v1/partner/{partner_id}/bank_account":
        {
          "post":
            {
              "description": "Add a bank account to a partner.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner ID.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdBankAccount",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdBankAccount",
                      },
                  },
                ],
              "responses":
                {
                  "201": { "description": "Add a bank account to a partner." },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdBankAccount",
            },
        },
      "/api/v1/partner/{partner_id}/bank_account/{bank_account_id}":
        {
          "delete":
            {
              "description": "Deactivates a partner bank account.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "bank_account_id",
                    "description": "Bank Account id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Deactivates a partner bank account." },
                },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdBankAccountBankAccountId",
            },
        },
      "/api/v1/partner/{partner_id}/bank_account/{bank_account_id}/default":
        {
          "put":
            {
              "description": "Set an existing partner bank account to default.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "bank_account_id",
                    "description": "Bank account id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Set an existing partner bank account to default.",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdBankAccountBankAccountIdDefault",
            },
        },
      "/api/v1/partner/{partner_id}/bank_accounts":
        {
          "get":
            {
              "description": "Retrieve all active partner bank accounts.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all active partner bank accounts.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdBankAccounts",
            },
        },
      "/api/v1/partner/{partner_id}/bank_account/setup_intent":
        {
          "post":
            {
              "description": "Create a setup intent for a partner and returns the client secret of it.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create a setup intent for a partner and returns the client secret of it.",
                    },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdBankAccountSetupIntent",
            },
        },
      "/api/v1/partner/{partner_id}/artists_with_alert_counts":
        {
          "get":
            {
              "description": "Returns a list of all artists in a partners roster with their alert counts.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["sortable_id", "-sortable_id"],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Returns a list of all artists in a partners roster with their alert counts.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdArtistsWithAlertCounts",
            },
        },
      "/api/v1/partner/{id}/unpublish_all_works":
        {
          "put":
            {
              "description": "Unpublish all artworks for the partner.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Unpublish all artworks for the partner.",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerIdUnpublishAllWorks",
            },
        },
      "/api/v1/partner/{id}/netsuite_sync":
        {
          "post":
            {
              "description": "Update partner based off of associated Customer in Netsuite",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Update partner based off of associated Customer in Netsuite",
                    },
                },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerIdNetsuiteSync",
            },
        },
      "/api/v1/partner/{id}/rebuild":
        {
          "put":
            {
              "description": "Rebuild counts and determine access permissions for an existing partner.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Rebuild counts and determine access permissions for an existing partner.",
                    },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerIdRebuild",
            },
        },
      "/api/v1/partner/{id}/partner_flags":
        {
          "put":
            {
              "description": "Sets (or unsets) a partner flag.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerIdPartnerFlags",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1PartnerIdPartnerFlags" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Sets (or unsets) a partner flag." },
                },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerIdPartnerFlags",
            },
        },
      "/api/v1/partner/{id}/all":
        {
          "get":
            {
              "description": "Retrieve deep data for an existing partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve deep data for an existing partner.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerIdAll",
            },
        },
      "/api/v1/partner/{partner_id}/show/{show_id}/events":
        {
          "get":
            {
              "description": "Retrieve all partner show events for a given show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["end_at", "-end_at", "start_at", "-start_at"],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all partner show events for a given show.",
                    },
                },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowShowIdEvents",
            },
        },
      "/api/v1/partner/{partner_id}/show/{show_id}/event":
        {
          "post":
            {
              "description": "Create a partner show event.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerPartnerIdShowShowIdEvent",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerPartnerIdShowShowIdEvent",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Create a partner show event." } },
              "tags": ["partner"],
              "operationId": "postApiV1PartnerPartnerIdShowShowIdEvent",
            },
        },
      "/api/v1/partner/{partner_id}/show/{show_id}/event/{id}":
        {
          "put":
            {
              "description": "Update a partner show event.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Update a partner show event." } },
              "tags": ["partner"],
              "operationId": "putApiV1PartnerPartnerIdShowShowIdEventId",
            },
          "delete":
            {
              "description": "Delete a partner show event.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a partner show event." } },
              "tags": ["partner"],
              "operationId": "deleteApiV1PartnerPartnerIdShowShowIdEventId",
            },
          "get":
            {
              "description": "Retrieve a partner show event.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "show_id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a partner show event." } },
              "tags": ["partner"],
              "operationId": "getApiV1PartnerPartnerIdShowShowIdEventId",
            },
        },
      "/api/v1/partner_categories":
        {
          "get":
            {
              "description": "Retrieve all partner categories.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "category_type",
                    "description": "Partner Category Type (Gallery|Institution).",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "internal",
                    "description": "Filter by whether category is internal.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve all partner categories." },
                },
              "tags": ["partner_categories"],
              "operationId": "getApiV1PartnerCategories",
            },
        },
      "/api/v1/partner_category/{id}":
        {
          "delete":
            {
              "description": "Delete a partner category.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Category id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a partner category." } },
              "tags": ["partner_category"],
              "operationId": "deleteApiV1PartnerCategoryId",
            },
          "put":
            {
              "description": "Update an existing partner category.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerCategory",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1PartnerCategory" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an existing partner category." },
                },
              "tags": ["partner_category"],
              "operationId": "putApiV1PartnerCategoryId",
            },
          "get":
            {
              "description": "Retrieve a partner category.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Category id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a partner category." } },
              "tags": ["partner_category"],
              "operationId": "getApiV1PartnerCategoryId",
            },
        },
      "/api/v1/partner_category":
        {
          "post":
            {
              "description": "Create a new partner category.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1PartnerCategory",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1PartnerCategory" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new partner category." } },
              "tags": ["partner_category"],
              "operationId": "postApiV1PartnerCategory",
            },
        },
      "/api/v1/partner_communications":
        {
          "get":
            {
              "description": "Retrieve partner Api_v1_Partner_Communications.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve partner Api_v1_Partner_Communications.",
                    },
                },
              "tags": ["partner_communications"],
              "operationId": "getApiV1PartnerCommunications",
            },
        },
      "/api/v1/partner_communication/{id}":
        {
          "delete":
            {
              "description": "Delete an existing partner communication.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Communication id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Delete an existing partner communication.",
                    },
                },
              "tags": ["partner_communication"],
              "operationId": "deleteApiV1PartnerCommunicationId",
            },
          "put":
            {
              "description": "Update an existing partner communication.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Communication id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerCommunication",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1PartnerCommunication" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update an existing partner communication.",
                    },
                },
              "tags": ["partner_communication"],
              "operationId": "putApiV1PartnerCommunicationId",
            },
          "get":
            {
              "description": "Retrieve an existing partner communication.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Communication id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve an existing partner communication.",
                    },
                },
              "tags": ["partner_communication"],
              "operationId": "getApiV1PartnerCommunicationId",
            },
        },
      "/api/v1/partner_communication/{id}/partner_contact/{partner_contact_id}":
        {
          "delete":
            {
              "description": "Remove a partner contact to a partner communication.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "name",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Communication id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_contact_id",
                    "description": "Partner Contact id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Remove a partner contact to a partner communication.",
                    },
                },
              "tags": ["partner_communication"],
              "operationId": "deleteApiV1PartnerCommunicationIdPartnerContactPartnerContactId",
            },
          "post":
            {
              "description": "Add a partner contact to a partner communication.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Communication id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "partner_contact_id",
                    "description": "Partner Contact id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerCommunicationIdPartnerContact",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerCommunicationIdPartnerContact",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Add a partner contact to a partner communication.",
                    },
                },
              "tags": ["partner_communication"],
              "operationId": "postApiV1PartnerCommunicationIdPartnerContactPartnerContactId",
            },
        },
      "/api/v1/partner_communication/{id}/partner_contacts":
        {
          "get":
            {
              "description": "List partner contacts for a partner communication.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "name",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Communication id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "partner",
                    "description": "Partner identifier.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List partner contacts for a partner communication.",
                    },
                },
              "tags": ["partner_communication"],
              "operationId": "getApiV1PartnerCommunicationIdPartnerContacts",
            },
        },
      "/api/v1/partner_communication":
        {
          "post":
            {
              "description": "Create a partner communication.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1PartnerCommunication",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1PartnerCommunication" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a partner communication." } },
              "tags": ["partner_communication"],
              "operationId": "postApiV1PartnerCommunication",
            },
        },
      "/api/v1/partner_gene_categories":
        {
          "get":
            {
              "description": "Retrieve a map of partner gene categories and genes.",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a map of partner gene categories and genes.",
                    },
                },
              "tags": ["partner_gene_categories"],
              "operationId": "getApiV1PartnerGeneCategories",
            },
        },
      "/api/v1/partner_offer":
        {
          "post":
            {
              "description": "Create a partner offer.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1PartnerOffer",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1PartnerOffer" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a partner offer." } },
              "tags": ["partner_offer"],
              "operationId": "postApiV1PartnerOffer",
            },
        },
      "/api/v1/partner_offer/{partner_offer_id}":
        {
          "get":
            {
              "description": "Show a partner offer.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_offer_id",
                    "description": "Partner offer id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Show a partner offer." } },
              "tags": ["partner_offer"],
              "operationId": "getApiV1PartnerOfferPartnerOfferId",
            },
        },
      "/api/v1/partner_offers":
        {
          "get":
            {
              "description": "List partner offers.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork ID.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["created_at", "-created_at", "end_at", "-end_at"],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "List partner offers." } },
              "tags": ["partner_offers"],
              "operationId": "getApiV1PartnerOffers",
            },
        },
      "/api/v1/partner_show_events":
        {
          "get":
            {
              "description": "Retrieve all partner show events.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Return partner show events that are 'current', 'running', 'closed' or 'upcoming'.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["end_at", "-end_at", "start_at", "-start_at"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve all partner show events." },
                },
              "tags": ["partner_show_events"],
              "operationId": "getApiV1PartnerShowEvents",
            },
        },
      "/api/v1/partner_subscription_charges":
        {
          "get":
            {
              "description": "Retrieve partner subscription charges.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner ID.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "state",
                    "description": "Filter the charges by their state.",
                    "type": "string",
                    "enum":
                      [
                        "pending",
                        "completed",
                        "failed",
                        "refunded",
                        "deferred",
                        "disputed",
                        "waived",
                        "archived",
                        "payment processing",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "subscription_id",
                    "description": "Filter the charges by subscription.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "payment_method",
                    "description": "Return charges with given payment methods",
                    "type": "array",
                    "items":
                      {
                        "type": "string",
                        "enum":
                          [
                            "check",
                            "credit card",
                            "other",
                            "wire transfer",
                            "us bank account",
                            "credit card",
                          ],
                      },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "bill_date_from",
                    "description": "Start of bill date range (YYYY-MM-DD).",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "bill_date_to",
                    "description": "End of bill date range (YYYY-MM-DD).",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      ["-created_at", "created_at", "-bill_date", "bill_date"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve partner subscription charges." },
                },
              "tags": ["partner_subscription_charges"],
              "operationId": "getApiV1PartnerSubscriptionCharges",
            },
        },
      "/api/v1/partner_subscription_charge":
        {
          "post":
            {
              "description": "Create a partner subscription charge.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1PartnerSubscriptionCharge",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerSubscriptionCharge",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Create a partner subscription charge." },
                },
              "tags": ["partner_subscription_charge"],
              "operationId": "postApiV1PartnerSubscriptionCharge",
            },
        },
      "/api/v1/partner_subscription_charge/{id}/line_item/{line_item_id}":
        {
          "delete":
            {
              "description": "Remove a line item from a charge.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "line_item_id",
                    "description": "Partner Subscription Charge Line Item id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204": { "description": "Remove a line item from a charge." },
                },
              "tags": ["partner_subscription_charge"],
              "operationId": "deleteApiV1PartnerSubscriptionChargeIdLineItemLineItemId",
            },
        },
      "/api/v1/partner_subscription_charge/{id}":
        {
          "delete":
            {
              "description": "Delete a partner subscription charge",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete a partner subscription charge" },
                },
              "tags": ["partner_subscription_charge"],
              "operationId": "deleteApiV1PartnerSubscriptionChargeId",
            },
          "put":
            {
              "description": "Update an existing partner subscription charge.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerSubscriptionCharge",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerSubscriptionCharge",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update an existing partner subscription charge.",
                    },
                },
              "tags": ["partner_subscription_charge"],
              "operationId": "putApiV1PartnerSubscriptionChargeId",
            },
          "get":
            {
              "description": "Retrieve an existing partner subscription charge.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve an existing partner subscription charge.",
                    },
                },
              "tags": ["partner_subscription_charge"],
              "operationId": "getApiV1PartnerSubscriptionChargeId",
            },
        },
      "/api/v1/partner_subscription_charge/{id}/line_item":
        {
          "post":
            {
              "description": "Add a line item to a charge.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerSubscriptionChargeIdLineItem",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerSubscriptionChargeIdLineItem",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Add a line item to a charge." } },
              "tags": ["partner_subscription_charge"],
              "operationId": "postApiV1PartnerSubscriptionChargeIdLineItem",
            },
        },
      "/api/v1/partner_subscription_charge/{id}/receive_payment":
        {
          "put":
            {
              "description": "Mark an existing charge as completed.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerSubscriptionChargeIdReceivePayment",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerSubscriptionChargeIdReceivePayment",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Mark an existing charge as completed." },
                },
              "tags": ["partner_subscription_charge"],
              "operationId": "putApiV1PartnerSubscriptionChargeIdReceivePayment",
            },
        },
      "/api/v1/partner_subscription_charge/{id}/retry":
        {
          "put":
            {
              "description": "Retry an existing failed partner subscription charge.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retry an existing failed partner subscription charge.",
                    },
                },
              "tags": ["partner_subscription_charge"],
              "operationId": "putApiV1PartnerSubscriptionChargeIdRetry",
            },
        },
      "/api/v1/partner_subscription_charge/{id}/bill":
        {
          "put":
            {
              "description": "Bill an existing partner subscription charge.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Bill an existing partner subscription charge.",
                    },
                },
              "tags": ["partner_subscription_charge"],
              "operationId": "putApiV1PartnerSubscriptionChargeIdBill",
            },
        },
      "/api/v1/partner_subscription_events":
        {
          "get":
            {
              "description": "Retrieve partner subscription events.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["-created_at", "created_at"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "charge_id",
                    "description": "Partner Susbscription Charge id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "type",
                    "description": "Event type. One of the PartnerSubscriptionEvent::Types values.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve partner subscription events." },
                },
              "tags": ["partner_subscription_events"],
              "operationId": "getApiV1PartnerSubscriptionEvents",
            },
        },
      "/api/v1/partner_subscription_event/{id}":
        {
          "get":
            {
              "description": "Retrieve an existing partner subscription event.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Subscription Event id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve an existing partner subscription event.",
                    },
                },
              "tags": ["partner_subscription_event"],
              "operationId": "getApiV1PartnerSubscriptionEventId",
            },
        },
      "/api/v1/partner_subscription_invoices":
        {
          "get":
            {
              "description": "Retrieve partner subscription invoices.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve partner subscription invoices.",
                    },
                },
              "tags": ["partner_subscription_invoices"],
              "operationId": "getApiV1PartnerSubscriptionInvoices",
            },
        },
      "/api/v1/partner_subscription_invoice/{id}":
        {
          "get":
            {
              "description": "Retrieve a partner subscription invoice.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Invoice id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a partner subscription invoice.",
                    },
                },
              "tags": ["partner_subscription_invoice"],
              "operationId": "getApiV1PartnerSubscriptionInvoiceId",
            },
        },
      "/api/v1/partner_subscription_plans":
        {
          "get":
            {
              "description": "Retrieve partner subscription plans.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["-price_in_cents", "price_in_cents"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve partner subscription plans." },
                },
              "tags": ["partner_subscription_plans"],
              "operationId": "getApiV1PartnerSubscriptionPlans",
            },
        },
      "/api/v1/partner_subscription_plan/{id}":
        {
          "delete":
            {
              "description": "Delete an existing partner subscription plan.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Subscription Plan id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Delete an existing partner subscription plan.",
                    },
                },
              "tags": ["partner_subscription_plan"],
              "operationId": "deleteApiV1PartnerSubscriptionPlanId",
            },
          "put":
            {
              "description": "Update an existing partner subscription plan.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Subscription Plan id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerSubscriptionPlan",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerSubscriptionPlan",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Update an existing partner subscription plan.",
                    },
                },
              "tags": ["partner_subscription_plan"],
              "operationId": "putApiV1PartnerSubscriptionPlanId",
            },
          "get":
            {
              "description": "Retrieve an existing partner subscription plan.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Subscription Plan id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve an existing partner subscription plan.",
                    },
                },
              "tags": ["partner_subscription_plan"],
              "operationId": "getApiV1PartnerSubscriptionPlanId",
            },
        },
      "/api/v1/partner_subscription_plan":
        {
          "post":
            {
              "description": "Create a partner subscription plan.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1PartnerSubscriptionPlan",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerSubscriptionPlan",
                      },
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Create a partner subscription plan." },
                },
              "tags": ["partner_subscription_plan"],
              "operationId": "postApiV1PartnerSubscriptionPlan",
            },
        },
      "/api/v1/partner_subscriptions":
        {
          "get":
            {
              "description": "Retrieve partner subscriptions.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id to filter for.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "plan_id",
                    "description": "Subscription plan id to filter for.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "admin_id",
                    "description": "Only return subscriptions for partners that have a given admin.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "outreach_admin_id",
                    "description": "Only return subscriptions for partners that were outreached by a given admin.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "referral_contact_id",
                    "description": "Only return subscriptions for partners that have a given referral contact.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "active",
                    "description": "Include only active subscriptions.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "pending",
                    "description": "Include only pending subscriptions.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "upcoming",
                    "description": "Include only upcoming subscriptions.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "current",
                    "description": "Include only current subscriptions.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "expired",
                    "description": "Include only expired subscriptions.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "churned",
                    "description": "Include only churned subscriptions.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve partner subscriptions." } },
              "tags": ["partner_subscriptions"],
              "operationId": "getApiV1PartnerSubscriptions",
            },
          "post":
            {
              "description": "Add a partner to a partner subscription plan.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1PartnerSubscriptions",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1PartnerSubscriptions" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Add a partner to a partner subscription plan.",
                    },
                },
              "tags": ["partner_subscriptions"],
              "operationId": "postApiV1PartnerSubscriptions",
            },
        },
      "/api/v1/partner_subscription/{id}":
        {
          "delete":
            {
              "description": "Delete an existing not-active subscription.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner subscription id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Delete an existing not-active subscription.",
                    },
                },
              "tags": ["partner_subscription"],
              "operationId": "deleteApiV1PartnerSubscriptionId",
            },
          "put":
            {
              "description": "Updates a partner subscription.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerSubscription",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1PartnerSubscription" },
                  },
                ],
              "responses":
                { "200": { "description": "Updates a partner subscription." } },
              "tags": ["partner_subscription"],
              "operationId": "putApiV1PartnerSubscriptionId",
            },
          "get":
            {
              "description": "Retrieve a partner subscription.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner subscription id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve a partner subscription." },
                },
              "tags": ["partner_subscription"],
              "operationId": "getApiV1PartnerSubscriptionId",
            },
        },
      "/api/v1/partner_subscription/{id}/terminate":
        {
          "put":
            {
              "description": "Terminates a partner subscription.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner subscription id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerSubscriptionIdTerminate",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerSubscriptionIdTerminate",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Terminates a partner subscription." },
                },
              "tags": ["partner_subscription"],
              "operationId": "putApiV1PartnerSubscriptionIdTerminate",
            },
        },
      "/api/v1/partner_subscription/{id}/activate":
        {
          "put":
            {
              "description": "Activates a partner subscription.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner subscription id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerSubscriptionIdActivate",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerSubscriptionIdActivate",
                      },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Activates a partner subscription." },
                },
              "tags": ["partner_subscription"],
              "operationId": "putApiV1PartnerSubscriptionIdActivate",
            },
        },
      "/api/v1/partner_artists":
        {
          "get":
            {
              "description": "Retrieve partner/artist pairs",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist ID",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "represented_by",
                    "description": "Filter to only representation relationships when true",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "partner_category",
                    "description": "Filter to partners matching any of these 0 or more category ids/slugs",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "display_on_partner_profile",
                    "description": "When true, filter to only relationships that can be displayed on the front end.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve partner/artist pairs" } },
              "tags": ["partner_artists"],
              "operationId": "getApiV1PartnerArtists",
            },
        },
      "/api/v1/partner_artist/{id}":
        {
          "put":
            {
              "description": "Update a partner artist.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Artist id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerArtist",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1PartnerArtist" },
                  },
                ],
              "responses":
                { "200": { "description": "Update a partner artist." } },
              "tags": ["partner_artist"],
              "operationId": "putApiV1PartnerArtistId",
            },
          "get":
            {
              "description": "Retrieve a partner artist.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner Artist id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a partner artist." } },
              "tags": ["partner_artist"],
              "operationId": "getApiV1PartnerArtistId",
            },
        },
      "/api/v1/partners":
        {
          "get":
            {
              "description": "Retrieve all partners.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "aggregations",
                    "description": "Aggregations.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_full_profile",
                    "description": "Only include partners with 'full' profiles.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "type",
                    "description": "Only return partners of the specified _type(s).",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "partner_categories",
                    "description": "Only return partners of the specified partner categories. Accepts list of slugs.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "admin_id",
                    "description": "Only return partners that are managed by a given admin (admin-only).",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "contract_type",
                    "description": "Only return partners of a given contract_type. (admin-only).",
                    "type": "string",
                    "enum": ["General", "Subscription", "Fair", "Custom"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_subscription_plan_id",
                    "description": "Only include partners belonging to a partner subscription plan (admin-only).",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "near",
                    "description": "Coordinates to find partners closest to.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "max_distance",
                    "description": "Max distance to use when geo-locating partners, defaults to 75km.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "geo_within",
                    "description": "Comma-delineated list of lat,lng pairs making up a polygon to search inside.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "eligible_for_carousel",
                    "description": "Only include partners eligible for carousel.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "eligible_for_primary_bucket",
                    "description": "Only include partners eligible for primary (visible) bucket.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "eligible_for_secondary_bucket",
                    "description": "Only include partners eligible for secondary bucket.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "eligible_for_listing",
                    "description": "Only include partners eligible for listing.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_followed_partners",
                    "description": "Exclude partners the user follows (only effective when `include_partners_with_followed_artists` is set to true).",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "id",
                    "description": "Returns only partners that match passed in ids, ignores other params.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_partners_with_followed_artists",
                    "description": "If true, will only return partners that list artists that the user follows",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Result page",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of results to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "term",
                    "description": "Term to match.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_slugs",
                        "-_slugs",
                        "created_at",
                        "-created_at",
                        "sortable_id",
                        "-sortable_id",
                        "relative_size",
                        "-relative_size",
                        "-published_at",
                        "-random_score",
                        "distance",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partners." } },
              "tags": ["partners"],
              "operationId": "getApiV1Partners",
            },
        },
      "/api/v1/partner_show/{partner_show_id}/images/reposition":
        {
          "post":
            {
              "description": "Reposition partner show images.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "image_ids",
                    "description": "Array of partner show image ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Reposition partner show images." } },
              "tags": ["partner_show"],
              "operationId": "postApiV1PartnerShowPartnerShowIdImagesReposition",
            },
        },
      "/api/v1/partner_show/{partner_show_id}/images":
        {
          "get":
            {
              "description": "Retrieve partner show's images.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "default",
                    "description": "Only include non-covers when set to false.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["position"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve partner show's images." } },
              "tags": ["partner_show"],
              "operationId": "getApiV1PartnerShowPartnerShowIdImages",
            },
        },
      "/api/v1/partner_show/{partner_show_id}/image/{id}/artist/{artist_id}":
        {
          "delete":
            {
              "description": "Remove an artist from a partner show's image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Image id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artist_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Remove an artist from a partner show's image.",
                    },
                },
              "tags": ["partner_show"],
              "operationId": "deleteApiV1PartnerShowPartnerShowIdImageIdArtistArtistId",
            },
        },
      "/api/v1/partner_show/{partner_show_id}/image/{id}/artwork/{artwork_id}":
        {
          "delete":
            {
              "description": "Remove an artwork from a partner show's image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Image id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "Remove an artwork from a partner show's image.",
                    },
                },
              "tags": ["partner_show"],
              "operationId": "deleteApiV1PartnerShowPartnerShowIdImageIdArtworkArtworkId",
            },
        },
      "/api/v1/partner_show/{partner_show_id}/image/{id}":
        {
          "delete":
            {
              "description": "Remove an image from a partner show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Image id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Remove an image from a partner show." },
                },
              "tags": ["partner_show"],
              "operationId": "deleteApiV1PartnerShowPartnerShowIdImageId",
            },
          "put":
            {
              "description": "Update a partner show's image.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Image id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerShowPartnerShowIdImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1PartnerShowPartnerShowIdImage",
                      },
                  },
                ],
              "responses":
                { "200": { "description": "Update a partner show's image." } },
              "tags": ["partner_show"],
              "operationId": "putApiV1PartnerShowPartnerShowIdImageId",
            },
        },
      "/api/v1/partner_show/{partner_show_id}/image":
        {
          "post":
            {
              "description": "Add an image to a partner show.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1PartnerShowPartnerShowIdImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1PartnerShowPartnerShowIdImage",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Add an image to a partner show." } },
              "tags": ["partner_show"],
              "operationId": "postApiV1PartnerShowPartnerShowIdImage",
            },
        },
      "/api/v1/partner_show/{partner_show_id}/default_image(/{image_version})":
        {
          "get":
            {
              "description": "Get a partner show's default (cover) image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get a partner show's default (cover) image.",
                    },
                },
              "tags": ["partner_show"],
              "operationId": "getApiV1PartnerShowPartnerShowIdDefaultImage(ImageVersion)",
            },
        },
      "/api/v1/partner_show/{partner_show_id}/image/{id}(/{image_version})":
        {
          "get":
            {
              "description": "Get an partner show's image (install shot).",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "partner_show_id",
                    "description": "Partner Show id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Image id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "filename",
                    "description": "Filename to download the image as.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get an partner show's image (install shot).",
                    },
                },
              "tags": ["partner_show"],
              "operationId": "getApiV1PartnerShowPartnerShowIdImageId(ImageVersion)",
            },
        },
      "/api/v1/periods":
        {
          "get":
            {
              "description": "Retrieve periods.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["name", "-name", "created_at", "-created_at"],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve periods." } },
              "tags": ["periods"],
              "operationId": "getApiV1Periods",
            },
        },
      "/api/v1/period":
        {
          "post":
            {
              "description": "Create a new period",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Period",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Period" },
                  },
                ],
              "responses": { "201": { "description": "Create a new period" } },
              "tags": ["period"],
              "operationId": "postApiV1Period",
            },
        },
      "/api/v1/period/{id}":
        {
          "delete":
            {
              "description": "Delete an existing period",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Period id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing period" } },
              "tags": ["period"],
              "operationId": "deleteApiV1PeriodId",
            },
          "put":
            {
              "description": "Update an existing period",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Period id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Period",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Period" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing period" } },
              "tags": ["period"],
              "operationId": "putApiV1PeriodId",
            },
          "get":
            {
              "description": "Retrieve a period.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Period id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve a period." } },
              "tags": ["period"],
              "operationId": "getApiV1PeriodId",
            },
        },
      "/api/v1/profile/{id}/image(/{image_version})":
        {
          "get":
            {
              "description": "Get a profile's image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "description": "Image version.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Get a profile's image." } },
              "tags": ["profile"],
              "operationId": "getApiV1ProfileIdImage(ImageVersion)",
            },
        },
      "/api/v1/profile/{id}":
        {
          "delete":
            {
              "description": "Delete a profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "204": { "description": "Delete a profile." } },
              "tags": ["profile"],
              "operationId": "deleteApiV1ProfileId",
            },
          "put":
            {
              "description": "Update a profile.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Profile",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Profile" },
                  },
                ],
              "responses": { "200": { "description": "Update a profile." } },
              "tags": ["profile"],
              "operationId": "putApiV1ProfileId",
            },
          "get":
            {
              "description": "Retrieve a profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve a profile." } },
              "tags": ["profile"],
              "operationId": "getApiV1ProfileId",
            },
        },
      "/api/v1/profile":
        {
          "post":
            {
              "description": "Create a profile.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Profile",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Profile" },
                  },
                ],
              "responses": { "201": { "description": "Create a profile." } },
              "tags": ["profile"],
              "operationId": "postApiV1Profile",
            },
        },
      "/api/v1/profile/{id}/cover_image":
        {
          "delete":
            {
              "description": "Delete profile cover image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete profile cover image." } },
              "tags": ["profile"],
              "operationId": "deleteApiV1ProfileIdCoverImage",
            },
          "put":
            {
              "description": "Update profile cover.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ProfileIdCoverImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1ProfileIdCoverImage" },
                  },
                ],
              "responses":
                { "200": { "description": "Update profile cover." } },
              "tags": ["profile"],
              "operationId": "putApiV1ProfileIdCoverImage",
            },
          "post":
            {
              "description": "Change profile cover.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ProfileIdCoverImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1ProfileIdCoverImage" },
                  },
                ],
              "responses":
                { "201": { "description": "Change profile cover." } },
              "tags": ["profile"],
              "operationId": "postApiV1ProfileIdCoverImage",
            },
          "get":
            {
              "description": "Retrieve profile cover image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve profile cover image." } },
              "tags": ["profile"],
              "operationId": "getApiV1ProfileIdCoverImage",
            },
        },
      "/api/v1/profile/{id}/icon":
        {
          "delete":
            {
              "description": "Delete profile icon.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "204": { "description": "Delete profile icon." } },
              "tags": ["profile"],
              "operationId": "deleteApiV1ProfileIdIcon",
            },
          "put":
            {
              "description": "Update profile icon.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ProfileIdIcon",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1ProfileIdIcon" },
                  },
                ],
              "responses": { "200": { "description": "Update profile icon." } },
              "tags": ["profile"],
              "operationId": "putApiV1ProfileIdIcon",
            },
          "post":
            {
              "description": "Change profile icon.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ProfileIdIcon",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1ProfileIdIcon" },
                  },
                ],
              "responses": { "201": { "description": "Change profile icon." } },
              "tags": ["profile"],
              "operationId": "postApiV1ProfileIdIcon",
            },
          "get":
            {
              "description": "Retrieve profile icon.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Profile id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve profile icon." } },
              "tags": ["profile"],
              "operationId": "getApiV1ProfileIdIcon",
            },
        },
      "/api/v1/purchases":
        {
          "get":
            {
              "description": "Retrieve purchases.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "without_owner_type",
                    "description": "Only return purchases with no owner_type.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "without_owner",
                    "description": "Only return purchases with no owner.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "admin_id",
                    "description": "Only return purchases belonging to partners that are managed by a given admin.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "sale_date",
                        "-sale_date",
                        "owner_type",
                        "-owner_type",
                        "owner_id",
                        "-owner_id",
                        "artwork_id",
                        "-artwork_id",
                      ],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve purchases." } },
              "tags": ["purchases"],
              "operationId": "getApiV1Purchases",
            },
        },
      "/api/v1/purchase/{id}":
        {
          "delete":
            {
              "description": "Delete an existing purchase.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Purchase id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing purchase." } },
              "tags": ["purchase"],
              "operationId": "deleteApiV1PurchaseId",
            },
          "put":
            {
              "description": "Update a purchase.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Purchase id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Purchase",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Purchase" },
                  },
                ],
              "responses": { "200": { "description": "Update a purchase." } },
              "tags": ["purchase"],
              "operationId": "putApiV1PurchaseId",
            },
        },
      "/api/v1/purchase":
        {
          "post":
            {
              "description": "Create a purchase object for artwork sale.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Purchase",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Purchase" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create a purchase object for artwork sale.",
                    },
                },
              "tags": ["purchase"],
              "operationId": "postApiV1Purchase",
            },
        },
      "/api/v1/related/posts":
        {
          "get":
            {
              "description": "Return related posts, deprecated.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "artwork",
                    "description": "Artworks.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artist",
                    "description": "Artists.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["created_at", "-created_at"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Return related posts, deprecated." },
                },
              "tags": ["related"],
              "operationId": "getApiV1RelatedPosts",
            },
        },
      "/api/v1/related/artworks":
        {
          "get":
            {
              "description": "Related artworks",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "for_sale",
                    "description": "If true, will only include for sale artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Related artworks" } },
              "tags": ["related"],
              "operationId": "getApiV1RelatedArtworks",
            },
        },
      "/api/v1/related/sales":
        {
          "get":
            {
              "description": "Sales related to an artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artwork",
                    "description": "Artwork id.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "live",
                    "description": "If true, will restrict to only live sales.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_auction",
                    "description": "If true, will restrict to only auctions.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Sales related to an artwork." } },
              "tags": ["related"],
              "operationId": "getApiV1RelatedSales",
            },
        },
      "/api/v1/related/shows":
        {
          "get":
            {
              "description": "Shows related to an artwork, or an artist. Optionally restricts shows to booths at a fair.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "Artist id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artwork",
                    "description": "Artwork id.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artist",
                    "description": "Artist id.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Fair id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_reference",
                    "description": "Whether to include reference shows (default: false).",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "solo_show",
                    "description": "True/false to return solo shows, or group shows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_institution",
                    "description": "True/false to return only institutional shows, or gallery shows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "at_a_fair",
                    "description": "True/false to return fair booths, or non fair booths.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "top_tier",
                    "description": "True/false to return top tier shows, or lower tier ones.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "highest_tier",
                    "description": "True/false to return highest tier shows, or lower tier ones.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "active",
                    "description": "If true, returns only active shows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Can filter by closed, running, and upcoming.",
                    "type": "string",
                    "enum": ["closed", "running", "upcoming"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "displayable",
                    "description": "Whether to include displayable shows (default: all).",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "visible_to_public",
                    "description": "If false, will include all shows (default: true)",
                    "type": "boolean",
                    "default": true,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_location",
                    "description": "If true, will include only shows with a location, if false only shows without a location.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Result page",
                    "type": "string",
                    "default": 1,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Maximum number of results to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "end_at",
                        "-end_at",
                        "start_at",
                        "-start_at",
                        "-relevance,-start_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Shows related to an artwork, or an artist. Optionally restricts shows to booths at a fair.",
                    },
                },
              "tags": ["related"],
              "operationId": "getApiV1RelatedShows",
            },
        },
      "/api/v1/related/fairs":
        {
          "get":
            {
              "description": "Fairs related to an artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "artwork",
                    "description": "Artwork id.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Fairs related to an artwork." } },
              "tags": ["related"],
              "operationId": "getApiV1RelatedFairs",
            },
        },
      "/api/v1/related/layer/{id}/artists":
        {
          "get":
            {
              "description": "Search within a layer.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Layer id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "artist",
                    "description": "Artists.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "exclude_artists_without_artworks",
                    "description": "If true, will only include artists with at least one published work.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_forsale_artworks",
                    "description": "Min number of for sale works",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Search within a layer." } },
              "tags": ["related"],
              "operationId": "getApiV1RelatedLayerIdArtists",
            },
        },
      "/api/v1/related/layer/{type}/{id}/artworks":
        {
          "get":
            {
              "description": "Search within a layer.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Layer id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "artwork",
                    "description": "Artworks.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of artworks to return.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "type",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Search within a layer." } },
              "tags": ["related"],
              "operationId": "getApiV1RelatedLayerTypeIdArtworks",
            },
        },
      "/api/v1/related/layers":
        {
          "get":
            {
              "description": "Retrieve search layers.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "artist",
                    "description": "Artists.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artwork",
                    "description": "Artworks.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve search layers." } },
              "tags": ["related"],
              "operationId": "getApiV1RelatedLayers",
            },
        },
      "/api/v1/related/genes":
        {
          "get":
            {
              "description": "Return related genes.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "artist",
                    "description": "Artists.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Return related genes." } },
              "tags": ["related"],
              "operationId": "getApiV1RelatedGenes",
            },
        },
      "/api/v1/related/artists":
        {
          "get":
            {
              "description": "Return similar artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "artist",
                    "description": "Artists.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Return similar artists." } },
              "tags": ["related"],
              "operationId": "getApiV1RelatedArtists",
            },
        },
      "/api/v1/representative/{id}/artwork_inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve all artwork inquiries the admin represents.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-created_at",
                        "created_at",
                        "-outcome",
                        "outcome",
                        "likely_to_purchase",
                        "-likely_to_purchase",
                        "status",
                        "-status",
                        "flagged",
                        "-flagged",
                        "contact_gallery",
                        "-contact_gallery",
                        "status,-likely_to_purchase,created_at",
                        "last_message_received_at",
                        "-last_message_received_at",
                      ],
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artwork inquiries the admin represents.",
                    },
                },
              "tags": ["representative"],
              "operationId": "getApiV1RepresentativeIdArtworkInquiryRequests",
            },
        },
      "/api/v1/sale_agreements/{id}":
        {
          "put":
            {
              "description": "Update a sale agreement.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "The ID of the sale agreement.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1SaleAgreements",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1SaleAgreements" },
                  },
                ],
              "responses":
                { "200": { "description": "Update a sale agreement." } },
              "tags": ["sale_agreements"],
              "operationId": "putApiV1SaleAgreementsId",
            },
          "get":
            {
              "description": "Get an individual sale agreement.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "The sale agreement's ID.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Get an individual sale agreement." },
                },
              "tags": ["sale_agreements"],
              "operationId": "getApiV1SaleAgreementsId",
            },
        },
      "/api/v1/sale_agreements":
        {
          "post":
            {
              "description": "Create a new sale agreement.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1SaleAgreements",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1SaleAgreements" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new sale agreement." } },
              "tags": ["sale_agreements"],
              "operationId": "postApiV1SaleAgreements",
            },
          "get":
            {
              "description": "Get all sale_agreements, optionally by status.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["created_at", "-created_at", "status", "-status"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Return the sale agreements with the provided status.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get all sale_agreements, optionally by status.",
                    },
                },
              "tags": ["sale_agreements"],
              "operationId": "getApiV1SaleAgreements",
            },
        },
      "/api/v1/sale_artwork/{id}":
        {
          "get":
            {
              "description": "Retrieve sale_artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale artwork id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve sale_artwork." } },
              "tags": ["sale_artwork"],
              "operationId": "getApiV1SaleArtworkId",
            },
        },
      "/api/v1/sale_artworks":
        {
          "get":
            {
              "description": "Retrieve sale_artworks for a given artwork.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["position", "end_at", "-end_at", "timely_at"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_watched_artworks",
                    "description": "If true, will filter sale artworks the user has watched",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_artworks_by_followed_artists",
                    "description": "If true, will filter sale artworks by only artists followed by current user or passed-in user_id",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_closed_lots",
                    "description": "If true, does not include artworks for which sale has ended",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "live_sale",
                    "description": "Sale Status",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "biddable_sale",
                    "description": "Filter only for sale artworks that are currently accept bids.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_auction",
                    "description": "When true, only return auction artworks.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "When present, will return sale artworks for the given user. If not present, will return sale artworks for the current user.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "withdrawn",
                    "description": "If true, include sale artworks that are withdrawn for admins/trusted apps.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "marketable",
                    "description": "Works that are marketable.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve sale_artworks for a given artwork.",
                    },
                },
              "tags": ["sale_artworks"],
              "operationId": "getApiV1SaleArtworks",
            },
        },
      "/api/v1/sale/{id}/sale_agreement":
        {
          "get":
            {
              "description": "Get the sale agreement associated with the sale",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get the sale agreement associated with the sale",
                    },
                },
              "tags": ["sale"],
              "operationId": "getApiV1SaleIdSaleAgreement",
            },
        },
      "/api/v1/sale/{id}/unpublish_artworks":
        {
          "put":
            {
              "description": "Batch un-publish all of the artworks in a sale.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Batch un-publish all of the artworks in a sale.",
                    },
                },
              "tags": ["sale"],
              "operationId": "putApiV1SaleIdUnpublishArtworks",
            },
        },
      "/api/v1/sale/{id}/publish_artworks":
        {
          "put":
            {
              "description": "Batch publish all of the artworks in a sale.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Batch publish all of the artworks in a sale.",
                    },
                },
              "tags": ["sale"],
              "operationId": "putApiV1SaleIdPublishArtworks",
            },
        },
      "/api/v1/sale/{id}/end_sale":
        {
          "put":
            {
              "description": "End sale on demand.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "End sale on demand." } },
              "tags": ["sale"],
              "operationId": "putApiV1SaleIdEndSale",
            },
        },
      "/api/v1/sale/{id}/registered_bidders_report":
        {
          "put":
            {
              "description": "Deliver registered bidders report to admins.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Deliver registered bidders report to admins.",
                    },
                },
              "tags": ["sale"],
              "operationId": "putApiV1SaleIdRegisteredBiddersReport",
            },
        },
      "/api/v1/sale/{id}":
        {
          "delete":
            {
              "description": "Delete an existing sale.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing sale." } },
              "tags": ["sale"],
              "operationId": "deleteApiV1SaleId",
            },
          "get":
            {
              "description": "Retrieve an existing sale.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an existing sale." } },
              "tags": ["sale"],
              "operationId": "getApiV1SaleId",
            },
          "put":
            {
              "description": "Update an existing sale.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Sale",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Sale" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing sale." } },
              "tags": ["sale"],
              "operationId": "putApiV1SaleId",
            },
        },
      "/api/v1/sale":
        {
          "post":
            {
              "description": "Create a sale.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Sale",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Sale" },
                  },
                ],
              "responses": { "201": { "description": "Create a sale." } },
              "tags": ["sale"],
              "operationId": "postApiV1Sale",
            },
        },
      "/api/v1/sale/{sale_id}/sale_artwork/{artwork_id}/calculated_cost":
        {
          "get":
            {
              "description": "Get the calculated cost for an artwork in a sale.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "bid_amount_cents",
                    "description": "Bid amount in cents.",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get the calculated cost for an artwork in a sale.",
                    },
                },
              "tags": ["sale"],
              "operationId": "getApiV1SaleSaleIdSaleArtworkArtworkIdCalculatedCost",
            },
        },
      "/api/v1/sale/{sale_id}/sale_artwork/{artwork_id}":
        {
          "put":
            {
              "description": "Update a sale artwork.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1SaleSaleIdSaleArtwork",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1SaleSaleIdSaleArtwork" },
                  },
                ],
              "responses":
                { "200": { "description": "Update a sale artwork." } },
              "tags": ["sale"],
              "operationId": "putApiV1SaleSaleIdSaleArtworkArtworkId",
            },
          "get":
            {
              "description": "Get a sale artwork from a sale.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "artwork_id",
                    "description": "Artwork id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "withdrawn",
                    "description": "If true, include sale artworks that are withdrawn for admins/trusted apps.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Get a sale artwork from a sale." } },
              "tags": ["sale"],
              "operationId": "getApiV1SaleSaleIdSaleArtworkArtworkId",
            },
        },
      "/api/v1/sale/{sale_id}/sale_artwork":
        {
          "post":
            {
              "description": "Add an artwork to a sale.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1SaleSaleIdSaleArtwork",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1SaleSaleIdSaleArtwork",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Add an artwork to a sale." } },
              "tags": ["sale"],
              "operationId": "postApiV1SaleSaleIdSaleArtwork",
            },
        },
      "/api/v1/sale/{sale_id}/sale_artworks":
        {
          "get":
            {
              "description": "Retrieve artworks within a given sale.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "ids",
                    "description": "Returns these objects if passed in.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "sale_id",
                    "description": "Sale id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "If present, will filter lots to either open or closed.",
                    "type": "string",
                    "enum": ["open", "closed"],
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "exclude_ids",
                    "description": "An array of sale artwork database ids to exclude from the response.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_bids",
                    "description": "Only return sale artworks that have bids.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "withdrawn",
                    "description": "If true, include sale artworks that are withdrawn for admins/trusted apps.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "artwork_ids",
                    "description": "An array of artwork database ids to include in the response.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["position", "-position"],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve artworks within a given sale." },
                },
              "tags": ["sale"],
              "operationId": "getApiV1SaleSaleIdSaleArtworks",
            },
        },
      "/api/v1/sales":
        {
          "get":
            {
              "description": "Retrieve sales.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "id",
                    "description": "Restrict to this subset of sales. `sort` will be respected if provided. With `batched`, order is preserved.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Returns sales owned by this partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "batched",
                    "description": "Formats result for batched queries, preserves nulls in the list and maintains order in `id`.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "registered",
                    "description": "Returns sales the user has registered for if true, returns sales the user has not registered for if false.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "auction_state",
                    "description": "Returns sales filtered to a particular type of auction.",
                    "type": "string",
                    "enum": ["open", "closed", "upcoming"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_artsy_licensed",
                    "description": "Returns sales that are Artsy-licensed if true, returns sales that are not Artsy-licensed if false.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "is_benefit",
                    "description": "Returns sales that are benefit auctions if true, returns sales that are not benefit auctions if false.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "min_start_at",
                    "description": "Returns sales that start at or after this time.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "id",
                        "-id",
                        "name",
                        "-name",
                        "created_at",
                        "-created_at",
                        "start_at",
                        "-start_at",
                        "end_at",
                        "-end_at",
                        "eligible_sale_artworks_count",
                        "-eligible_sale_artworks_count",
                        "timely_at",
                        "-timely_at",
                        "timely_at,name",
                        "-timely_at,name",
                        "is_artsy_licensed,timely_at,name",
                        "-is_artsy_licensed,timely_at,name",
                      ],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve sales." } },
              "tags": ["sales"],
              "operationId": "getApiV1Sales",
            },
        },
      "/api/v1/search/filtered/{type}/{id}/options":
        {
          "get":
            {
              "description": "Filter options.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "type",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Filter options." } },
              "tags": ["search"],
              "operationId": "getApiV1SearchFilteredTypeIdOptions",
            },
        },
      "/api/v1/search/filtered/{type}/{id}":
        {
          "get":
            {
              "description": "Filtered gene/tag/fair/artist search.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "type",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Filtered gene/tag/fair/artist search." },
                },
              "tags": ["search"],
              "operationId": "getApiV1SearchFilteredTypeId",
            },
        },
      "/api/v1/sets/contains":
        {
          "get":
            {
              "description": "Get all sets, that contain the given item.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "item_type",
                    "description": "Item type.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "item_id",
                    "description": "Item id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_id",
                        "-_id",
                        "key",
                        "-key",
                        "created_at",
                        "-created_at",
                        "owner_type",
                        "-owner_type",
                        "owner_id",
                        "-owner_id",
                        "item_type",
                        "-item_type",
                        "name",
                        "-name",
                        "internal_name",
                        "-internal_name",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get all sets, that contain the given item.",
                    },
                },
              "tags": ["sets"],
              "operationId": "getApiV1SetsContains",
            },
        },
      "/api/v1/sets":
        {
          "get":
            {
              "description": "Get all sets, optionally by label, item_type, or owner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_id",
                        "-_id",
                        "key",
                        "-key",
                        "created_at",
                        "-created_at",
                        "owner_type",
                        "-owner_type",
                        "owner_id",
                        "-owner_id",
                        "item_type",
                        "-item_type",
                        "name",
                        "-name",
                        "internal_name",
                        "-internal_name",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Get all sets, optionally by label, item_type, or owner.",
                    },
                },
              "tags": ["sets"],
              "operationId": "getApiV1Sets",
            },
        },
      "/api/v1/set/{id}/item/{item_id}":
        {
          "delete":
            {
              "description": "Delete an item from an existing set.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Set id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "item_id",
                    "description": "Item id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Delete an item from an existing set." },
                },
              "tags": ["set"],
              "operationId": "deleteApiV1SetIdItemItemId",
            },
          "put":
            {
              "description": "Update an item in an existing set.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Set id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "item_id",
                    "description": "Item id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1SetIdItem",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1SetIdItem" },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update an item in an existing set." },
                },
              "tags": ["set"],
              "operationId": "putApiV1SetIdItemItemId",
            },
        },
      "/api/v1/set/{id}/item":
        {
          "post":
            {
              "description": "Add an item to an existing set.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Set id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1SetIdItem",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1SetIdItem" },
                  },
                ],
              "responses":
                { "201": { "description": "Add an item to an existing set." } },
              "tags": ["set"],
              "operationId": "postApiV1SetIdItem",
            },
        },
      "/api/v1/set/{id}/items":
        {
          "get":
            {
              "description": "Get all items in an existing set.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Set id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "has_image",
                    "description": "True to reject items without images.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_disliked_artworks",
                    "description": "Exclude disliked artworks if authenticated.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Get all items in an existing set." },
                },
              "tags": ["set"],
              "operationId": "getApiV1SetIdItems",
            },
        },
      "/api/v1/set/{id}":
        {
          "delete":
            {
              "description": "Delete an existing set.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Set id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing set." } },
              "tags": ["set"],
              "operationId": "deleteApiV1SetId",
            },
          "put":
            {
              "description": "Update an existing set.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Set id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Set",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Set" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing set." } },
              "tags": ["set"],
              "operationId": "putApiV1SetId",
            },
          "get":
            {
              "description": "Retrieve an existing set.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Set id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve an existing set." } },
              "tags": ["set"],
              "operationId": "getApiV1SetId",
            },
        },
      "/api/v1/set":
        {
          "post":
            {
              "description": "Create a new set.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Set",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Set" },
                  },
                ],
              "responses": { "201": { "description": "Create a new set." } },
              "tags": ["set"],
              "operationId": "postApiV1Set",
            },
        },
      "/api/v1/shortcut":
        {
          "post":
            {
              "description": "Create a new shortcut for a given long URL (and optional short URL).",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Shortcut",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Shortcut" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create a new shortcut for a given long URL (and optional short URL).",
                    },
                },
              "tags": ["shortcut"],
              "operationId": "postApiV1Shortcut",
            },
        },
      "/api/v1/shortcut/{short}":
        {
          "delete":
            {
              "description": "Delete an existing shortcut.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "short",
                    "description": "Shortcut short.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing shortcut." } },
              "tags": ["shortcut"],
              "operationId": "deleteApiV1ShortcutShort",
            },
          "put":
            {
              "description": "Update an existing shortcut.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "short",
                    "description": "Shortcut short.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Shortcut",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Shortcut" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing shortcut." } },
              "tags": ["shortcut"],
              "operationId": "putApiV1ShortcutShort",
            },
          "get":
            {
              "description": "Retrieve a shortcut by short.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "short",
                    "description": "Shortcut id or shortcut name.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a shortcut by short." } },
              "tags": ["shortcut"],
              "operationId": "getApiV1ShortcutShort",
            },
        },
      "/api/v1/shortcuts":
        {
          "get":
            {
              "description": "Retrieve all shortcuts.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["short", "-short", "created_at", "-created_at"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all shortcuts." } },
              "tags": ["shortcuts"],
              "operationId": "getApiV1Shortcuts",
            },
        },
      "/api/v1/show/{id}":
        {
          "delete":
            {
              "description": "Delete a show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Show id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "204": { "description": "Delete a show." } },
              "tags": ["show"],
              "operationId": "deleteApiV1ShowId",
            },
          "put":
            {
              "description": "Update an existing partner show.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Show",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Show" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Update an existing partner show." },
                },
              "tags": ["show"],
              "operationId": "putApiV1ShowId",
            },
          "get":
            {
              "description": "Retrieve a partner show.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Partner show id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a partner show." } },
              "tags": ["show"],
              "operationId": "getApiV1ShowId",
            },
        },
      "/api/v1/show":
        {
          "post":
            {
              "description": "Create a new partner show.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Show",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Show" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a new partner show." } },
              "tags": ["show"],
              "operationId": "postApiV1Show",
            },
        },
      "/api/v1/shows":
        {
          "get":
            {
              "description": "Retrieve all partner shows.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "artwork",
                    "description": "Filter shows by the artwork on exhibit.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "status",
                    "description": "Return shows that are 'current', 'running', 'closed', 'upcoming' or 'active'.",
                    "type": "string",
                    "enum":
                      [
                        "current",
                        "running",
                        "closed",
                        "upcoming",
                        "running_and_upcoming",
                        "closing_soon",
                        "active",
                      ],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "day_threshold",
                    "description": "Number of days which will be used to filter upcoming and closing soon shows.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "near",
                    "description": "Coordinates to find shows closest to.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "max_distance",
                    "description": "Max distance to use when geo-locating shows (default: 75 km).",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "fair_id",
                    "description": "Only return shows at the given fair.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Only return shows at the given partner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "displayable",
                    "description": "Include all displayable shows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_local_discovery",
                    "description": "Include local discovery shows.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "at_a_fair",
                    "description": "Only return shows that are part of a fair.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "has_location",
                    "description": "If true, will include only shows with a location, if false only shows without a location.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "id",
                    "description": "Only return shows that match passed in ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "partner_types",
                    "description": "Only return shows that match passed in partner types.",
                    "type": "array",
                    "items":
                      {
                        "type": "string",
                        "enum":
                          [
                            "Auction",
                            "Demo",
                            "Gallery",
                            "Private Collector",
                            "Private Dealer",
                            "Institution",
                            "Institutional Seller",
                            "Brand",
                          ],
                      },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "include_discovery_blocked",
                    "description": "Include shows that were flagged as non-discoverable.",
                    "type": "boolean",
                    "default": true,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "created_at",
                        "-created_at",
                        "end_at",
                        "-end_at",
                        "start_at",
                        "-start_at",
                        "name",
                        "-name",
                        "-featured,-start_at",
                        "-featured,-end_at",
                        "sortable_name",
                        "-sortable_name",
                        "fully_qualified_name",
                        "-fully_qualified_name",
                        "-relevance,-start_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all partner shows." } },
              "tags": ["shows"],
              "operationId": "getApiV1Shows",
            },
        },
      "/api/v1/shows/feed":
        {
          "get":
            {
              "description": "Retrieve all displayable, non-fair partner shows feed.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all displayable, non-fair partner shows feed.",
                    },
                },
              "tags": ["shows"],
              "operationId": "getApiV1ShowsFeed",
            },
        },
      "/api/v1/site_hero_unit/{site_hero_unit_id}/image":
        {
          "post":
            {
              "description": "Add an image to a hero unit.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "site_hero_unit_id",
                    "description": "Hero Unit id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1SiteHeroUnitSiteHeroUnitIdImage",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1SiteHeroUnitSiteHeroUnitIdImage",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Add an image to a hero unit." } },
              "tags": ["site_hero_unit"],
              "operationId": "postApiV1SiteHeroUnitSiteHeroUnitIdImage",
            },
        },
      "/api/v1/site_hero_unit/{id}":
        {
          "delete":
            {
              "description": "Delete a site hero unit.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Site hero unit id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a site hero unit." } },
              "tags": ["site_hero_unit"],
              "operationId": "deleteApiV1SiteHeroUnitId",
            },
          "put":
            {
              "description": "Update a site hero unit.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Site hero unit id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1SiteHeroUnit",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1SiteHeroUnit" },
                  },
                ],
              "responses":
                { "200": { "description": "Update a site hero unit." } },
              "tags": ["site_hero_unit"],
              "operationId": "putApiV1SiteHeroUnitId",
            },
          "get":
            {
              "description": "Retrieve a site hero unit.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Site hero unit id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a site hero unit." } },
              "tags": ["site_hero_unit"],
              "operationId": "getApiV1SiteHeroUnitId",
            },
        },
      "/api/v1/site_hero_unit":
        {
          "post":
            {
              "description": "Create a site hero unit.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1SiteHeroUnit",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1SiteHeroUnit" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a site hero unit." } },
              "tags": ["site_hero_unit"],
              "operationId": "postApiV1SiteHeroUnit",
            },
        },
      "/api/v1/site_hero_units":
        {
          "get":
            {
              "description": "Retrieve all site hero units.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "enabled",
                    "description": "Only return enabled site hero units.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "Grape::API::Boolean",
                    "description": "Only return enabled site hero units.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "mobile",
                    "description": "Don't return non-mobile hero units.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "desktop",
                    "description": "Don't return non-desktop hero units.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "martsy",
                    "description": "Don't return non-martsy hero units.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["position"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve all site hero units." } },
              "tags": ["site_hero_units"],
              "operationId": "getApiV1SiteHeroUnits",
            },
        },
      "/api/v1/stripe_customer":
        {
          "get":
            {
              "description": "Retrieve Stripe customer for a partner.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner Id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve Stripe customer for a partner.",
                    },
                },
              "tags": ["stripe_customer"],
              "operationId": "getApiV1StripeCustomer",
            },
          "post":
            {
              "description": "Create or return an existing customer account and Stripe customer for a user.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1StripeCustomer",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1StripeCustomer" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Create or return an existing customer account and Stripe customer for a user.",
                    },
                },
              "tags": ["stripe_customer"],
              "operationId": "postApiV1StripeCustomer",
            },
        },
      "/api/v1/system/roles":
        {
          "get":
            {
              "description": "List all available roles",
              "produces": ["application/json"],
              "responses":
                { "200": { "description": "List all available roles" } },
              "tags": ["system"],
              "operationId": "getApiV1SystemRoles",
            },
        },
      "/api/v1/system/time(/{zone})":
        {
          "get":
            {
              "description": "Return system time.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "zone",
                    "description": "Time zone, one of local or utc.",
                    "type": "string",
                    "default": "utc",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Return system time." } },
              "tags": ["system"],
              "operationId": "getApiV1SystemTime(Zone)",
            },
        },
      "/api/v1/system/cache":
        {
          "delete":
            {
              "description": "Clear rails cache.",
              "produces": ["application/json"],
              "responses": { "204": { "description": "Clear rails cache." } },
              "tags": ["system"],
              "operationId": "deleteApiV1SystemCache",
            },
        },
      "/api/v1/system/info":
        {
          "get":
            {
              "description": "Retrieve system info.",
              "produces": ["application/json"],
              "responses":
                { "200": { "description": "Retrieve system info." } },
              "tags": ["system"],
              "operationId": "getApiV1SystemInfo",
            },
        },
      "/api/v1/system/up":
        {
          "get":
            {
              "description": "System up check.",
              "produces": ["application/json"],
              "responses": { "200": { "description": "System up check." } },
              "tags": ["system"],
              "operationId": "getApiV1SystemUp",
            },
        },
      "/api/v1/system/boom/{status_code}":
        {
          "get":
            {
              "description": "Return a specific error response.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "status_code",
                    "description": "An HTTP response status code.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Return a specific error response." },
                },
              "tags": ["system"],
              "operationId": "getApiV1SystemBoomStatusCode",
            },
        },
      "/api/v1/system/boom":
        {
          "get":
            {
              "description": "Raise an exception with an optional error status to return.",
              "produces": ["application/json"],
              "responses":
                {
                  "200":
                    {
                      "description": "Raise an exception with an optional error status to return.",
                    },
                },
              "tags": ["system"],
              "operationId": "getApiV1SystemBoom",
            },
        },
      "/api/v1/system/ping":
        {
          "get":
            {
              "description": "Return pong.",
              "produces": ["application/json"],
              "responses": { "200": { "description": "Return pong." } },
              "tags": ["system"],
              "operationId": "getApiV1SystemPing",
            },
        },
      "/api/v1/tag/{id}":
        {
          "delete":
            {
              "description": "Delete a tag.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Tag id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "204": { "description": "Delete a tag." } },
              "tags": ["tag"],
              "operationId": "deleteApiV1TagId",
            },
          "put":
            {
              "description": "Update an existing tag.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Tag id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1Tag",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1Tag" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing tag." } },
              "tags": ["tag"],
              "operationId": "putApiV1TagId",
            },
          "get":
            {
              "description": "Retrieve a tag.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Tag id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve a tag." } },
              "tags": ["tag"],
              "operationId": "getApiV1TagId",
            },
        },
      "/api/v1/tag/{id}/image(/{image_version})":
        {
          "get":
            {
              "description": "Get a tag's image.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Tag's id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "image_version",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Get a tag's image." } },
              "tags": ["tag"],
              "operationId": "getApiV1TagIdImage(ImageVersion)",
            },
        },
      "/api/v1/tag/{id}/artworks":
        {
          "get":
            {
              "description": "Retrieve tagged artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Tag id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve tagged artworks." } },
              "tags": ["tag"],
              "operationId": "getApiV1TagIdArtworks",
            },
        },
      "/api/v1/tags":
        {
          "get":
            {
              "description": "Retrieve all tags.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["name", "-name", "created_at", "-created_at"],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve all tags." } },
              "tags": ["tags"],
              "operationId": "getApiV1Tags",
            },
        },
      "/api/v1/token/exchange":
        {
          "post":
            {
              "description": "Get a token for a client app.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1TokenExchange",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1TokenExchange" },
                  },
                ],
              "responses":
                { "201": { "description": "Get a token for a client app." } },
              "tags": ["token"],
              "operationId": "postApiV1TokenExchange",
            },
        },
      "/api/v1/user_art_quiz":
        {
          "put":
            {
              "description": "Update a user's art quiz.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1UserArtQuiz",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1UserArtQuiz" },
                  },
                ],
              "responses":
                { "200": { "description": "Update a user's art quiz." } },
              "tags": ["user_art_quiz"],
              "operationId": "putApiV1UserArtQuiz",
            },
          "get":
            {
              "description": "Retrieve a user's art quiz.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "The id of the user to retrieve the art quiz for.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a user's art quiz." } },
              "tags": ["user_art_quiz"],
              "operationId": "getApiV1UserArtQuiz",
            },
        },
      "/api/v1/user_fair_actions":
        {
          "get":
            {
              "description": "Retrieve user fair actions for a given collector or sale profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum": ["-_id", "_id"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "owner_type",
                    "type": "string",
                    "enum": ["UserSaleProfile", "CollectorProfile"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "owner_id",
                    "description": "ID of owner",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Session ID of the inquirer if anonymous.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Client's key for anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve user fair actions for a given collector or sale profile.",
                    },
                },
              "tags": ["user_fair_actions"],
              "operationId": "getApiV1UserFairActions",
            },
        },
      "/api/v1/user_fair_action/{id}":
        {
          "delete":
            {
              "description": "Delete a user-fair action",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "UserFairAction id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a user-fair action" } },
              "tags": ["user_fair_action"],
              "operationId": "deleteApiV1UserFairActionId",
            },
        },
      "/api/v1/user_fair_action":
        {
          "post":
            {
              "description": "Creates a new user fair action for a given collector or sale profile.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1UserFairAction",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1UserFairAction" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Creates a new user fair action for a given collector or sale profile.",
                    },
                },
              "tags": ["user_fair_action"],
              "operationId": "postApiV1UserFairAction",
            },
        },
      "/api/v1/user_interests":
        {
          "get":
            {
              "description": "Retrieve user interests of a collector profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "owner_id",
                    "description": "Collector profile or sale profile id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "owner_type",
                    "type": "string",
                    "enum": ["UserSaleProfile", "CollectorProfile"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "interest_type",
                    "description": "Type of interest.",
                    "type": "string",
                    "enum": ["Artist", "Gene"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "category",
                    "description": "Category of interest.",
                    "type": "string",
                    "enum": ["collected_before", "interested_in_collecting"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Client's key for anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve user interests of a collector profile.",
                    },
                },
              "tags": ["user_interests"],
              "operationId": "getApiV1UserInterests",
            },
        },
      "/api/v1/user_interest/{id}":
        {
          "delete":
            {
              "description": "Delete an interest.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User interest id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Client's key for anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses": { "204": { "description": "Delete an interest." } },
              "tags": ["user_interest"],
              "operationId": "deleteApiV1UserInterestId",
            },
          "get":
            {
              "description": "Get an interest.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User interest id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "anonymous_session_id",
                    "description": "Anonymous session id.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "session_id",
                    "description": "Client's key for anonymous session.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Get an interest." } },
              "tags": ["user_interest"],
              "operationId": "getApiV1UserInterestId",
            },
        },
      "/api/v1/user_interest":
        {
          "post":
            {
              "description": "Add an interest.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1UserInterest",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1UserInterest" },
                  },
                ],
              "responses": { "201": { "description": "Add an interest." } },
              "tags": ["user_interest"],
              "operationId": "postApiV1UserInterest",
            },
        },
      "/api/v1/user_sale_profile/{id}":
        {
          "delete":
            {
              "description": "Delete a sale profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale profile id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a sale profile." } },
              "tags": ["user_sale_profile"],
              "operationId": "deleteApiV1UserSaleProfileId",
            },
          "put":
            {
              "description": "Update a profile.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale profile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1UserSaleProfile",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1UserSaleProfile" },
                  },
                ],
              "responses": { "200": { "description": "Update a profile." } },
              "tags": ["user_sale_profile"],
              "operationId": "putApiV1UserSaleProfileId",
            },
          "get":
            {
              "description": "Retrieve a sale profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Sale profile id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a sale profile." } },
              "tags": ["user_sale_profile"],
              "operationId": "getApiV1UserSaleProfileId",
            },
        },
      "/api/v1/user_sale_profile":
        {
          "post":
            {
              "description": "Create a sale profile.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1UserSaleProfile",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1UserSaleProfile" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a sale profile." } },
              "tags": ["user_sale_profile"],
              "operationId": "postApiV1UserSaleProfile",
            },
        },
      "/api/v1/user/{id}/representative/{representative_id}":
        {
          "put":
            {
              "description": "Update a user's representative.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "representative_id",
                    "description": "Representative's id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Update a user's representative." } },
              "tags": ["user"],
              "operationId": "putApiV1UserIdRepresentativeRepresentativeId",
            },
        },
      "/api/v1/user/{id}/representative":
        {
          "get":
            {
              "description": "Retrieve a user's representative.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve a user's representative." },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdRepresentative",
            },
        },
      "/api/v1/user/{id}/lab_feature/{feature_id}":
        {
          "delete":
            {
              "description": "Disables a lab feature for a user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "feature_id",
                    "description": "Lab Feature id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "Disables a lab feature for a user." },
                },
              "tags": ["user"],
              "operationId": "deleteApiV1UserIdLabFeatureFeatureId",
            },
          "post":
            {
              "description": "Enable a lab feature for a user.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "feature_id",
                    "description": "Lab Feature id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1UserIdLabFeature",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1UserIdLabFeature" },
                  },
                ],
              "responses":
                {
                  "201": { "description": "Enable a lab feature for a user." },
                },
              "tags": ["user"],
              "operationId": "postApiV1UserIdLabFeatureFeatureId",
            },
        },
      "/api/v1/user/{id}/lab_features":
        {
          "get":
            {
              "description": "Retrieve a user's enabled lab features.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a user's enabled lab features.",
                    },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdLabFeatures",
            },
        },
      "/api/v1/user":
        {
          "post":
            {
              "description": "Create a new user.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1User",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1User" },
                  },
                ],
              "responses": { "201": { "description": "Create a new user." } },
              "tags": ["user"],
              "operationId": "postApiV1User",
            },
          "get":
            {
              "description": "Check whether a user exists by email address.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "email",
                    "description": "User email.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Check whether a user exists by email address.",
                    },
                },
              "tags": ["user"],
              "operationId": "getApiV1User",
            },
        },
      "/api/v1/user/identify":
        {
          "post":
            {
              "description": "Check whether a user exists by email address (used by Artsy clients for authentication flows).",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1UserIdentify",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1UserIdentify" },
                  },
                ],
              "responses":
                {
                  "201":
                    {
                      "description": "Check whether a user exists by email address (used by Artsy clients for authentication flows).",
                    },
                },
              "tags": ["user"],
              "operationId": "postApiV1UserIdentify",
            },
        },
      "/api/v1/user/{id}/admin_note/{admin_note_id}":
        {
          "delete":
            {
              "description": "Delete an existing admin_note.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "admin_note_id",
                    "description": "Admin note id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing admin_note." } },
              "tags": ["user"],
              "operationId": "deleteApiV1UserIdAdminNoteAdminNoteId",
            },
          "put":
            {
              "description": "Update an existing admin_note.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "admin_note_id",
                    "description": "Admin note id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing admin_note." } },
              "tags": ["user"],
              "operationId": "putApiV1UserIdAdminNoteAdminNoteId",
            },
          "get":
            {
              "description": "Retrieve one user admin_note.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "admin_note_id",
                    "description": "Admin note id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve one user admin_note." } },
              "tags": ["user"],
              "operationId": "getApiV1UserIdAdminNoteAdminNoteId",
            },
        },
      "/api/v1/user/{id}/admin_notes":
        {
          "get":
            {
              "description": "Retrieve all user's admin_notes.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200": { "description": "Retrieve all user's admin_notes." },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdAdminNotes",
            },
        },
      "/api/v1/user/{id}/admin_note":
        {
          "post":
            {
              "description": "Create a user admin_note.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Create a user admin_note." } },
              "tags": ["user"],
              "operationId": "postApiV1UserIdAdminNote",
            },
        },
      "/api/v1/user/{user_id}/access_control/{id}":
        {
          "delete":
            {
              "description": "Delete a user's access control.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Access control id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a user's access control." } },
              "tags": ["user"],
              "operationId": "deleteApiV1UserUserIdAccessControlId",
            },
        },
      "/api/v1/user/{id}/access_controls":
        {
          "get":
            {
              "description": "Get user's access controls.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "model",
                    "description": "Property model, eg. 'partner'.",
                    "type": "string",
                    "enum": ["partner", "artist", "artwork", "profile"],
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Get user's access controls." } },
              "tags": ["user"],
              "operationId": "getApiV1UserIdAccessControls",
            },
        },
      "/api/v1/user/{user_id}/access_control":
        {
          "post":
            {
              "description": "Grants user access to a model.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1UserUserIdAccessControl",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1UserUserIdAccessControl",
                      },
                  },
                ],
              "responses":
                { "201": { "description": "Grants user access to a model." } },
              "tags": ["user"],
              "operationId": "postApiV1UserUserIdAccessControl",
            },
        },
      "/api/v1/user/{id}/backup_code":
        {
          "post":
            {
              "description": "Send the User a 2FA backup code",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Send the User a 2FA backup code" } },
              "tags": ["user"],
              "operationId": "postApiV1UserIdBackupCode",
            },
        },
      "/api/v1/user/{id}/password":
        {
          "put":
            {
              "description": "Change a users password.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1UserIdPassword",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1UserIdPassword" },
                  },
                ],
              "responses":
                { "200": { "description": "Change a users password." } },
              "tags": ["user"],
              "operationId": "putApiV1UserIdPassword",
            },
        },
      "/api/v1/user/{id}/recently_viewed_artwork_ids":
        {
          "get":
            {
              "description": "Retrieve all recently viewed artworks by a user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all recently viewed artworks by a user.",
                    },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdRecentlyViewedArtworkIds",
            },
        },
      "/api/v1/user/{id}/artwork_inquiry_requests":
        {
          "get":
            {
              "description": "Retrieve all artwork inquiry requests by a user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "-created_at",
                        "created_at",
                        "-outcome",
                        "outcome",
                        "likely_to_purchase",
                        "-likely_to_purchase",
                        "status",
                        "-status",
                        "flagged",
                        "-flagged",
                        "contact_gallery",
                        "-contact_gallery",
                        "status,-likely_to_purchase,created_at",
                        "last_message_received_at",
                        "-last_message_received_at",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artwork inquiry requests by a user.",
                    },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdArtworkInquiryRequests",
            },
        },
      "/api/v1/user/{id}/suggested/genes":
        {
          "get":
            {
              "description": "Retrieve suggested genes for a user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve suggested genes for a user." },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdSuggestedGenes",
            },
        },
      "/api/v1/user/{id}/suggested/similar/artists":
        {
          "get":
            {
              "description": "Retrieve suggested artists for a user, based on similar artists.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "limit_per_artist",
                    "description": "Limit the number of suggestions per artist.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_artists_without_forsale_artworks",
                    "description": "When true, will only include artists with for sale works.",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "exclude_followed_artists",
                    "description": "If true, will exclude followed artists as a suggestion.",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve suggested artists for a user, based on similar artists.",
                    },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdSuggestedSimilarArtists",
            },
        },
      "/api/v1/user/{id}/follow/profiles":
        {
          "get":
            {
              "description": "Retrieve all profiles followed by a user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "type",
                    "description": "Profile type.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all profiles followed by a user.",
                    },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdFollowProfiles",
            },
        },
      "/api/v1/user/{id}/follow/genes":
        {
          "get":
            {
              "description": "Retrieve all genes followed by a user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "counts.artists",
                        "-counts.artists",
                        "counts.artworks",
                        "-counts.artworks",
                        "published",
                        "-published",
                        "automated",
                        "-automated",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve all genes followed by a user." },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdFollowGenes",
            },
        },
      "/api/v1/user/{id}/roles/{role_type}":
        {
          "delete":
            {
              "description": "Remove a role from a user",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "role_type",
                    "description": "Role type.",
                    "type": "string",
                    "enum":
                      [
                        "admin",
                        "billing_admin",
                        "consignments_manager",
                        "consignments_representative",
                        "content_manager",
                        "customer_support",
                        "editorial",
                        "genomer",
                        "metadata_admin",
                        "partner_support",
                        "role_manager",
                        "sales_admin",
                        "sales_observer",
                        "subscriptions_manager",
                        "team",
                        "verification_admin",
                      ],
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Remove a role from a user" } },
              "tags": ["user"],
              "operationId": "deleteApiV1UserIdRolesRoleType",
            },
          "post":
            {
              "description": "Add a new role to the user",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "role_type",
                    "description": "Role type.",
                    "type": "string",
                    "enum":
                      [
                        "admin",
                        "billing_admin",
                        "consignments_manager",
                        "consignments_representative",
                        "content_manager",
                        "customer_support",
                        "editorial",
                        "genomer",
                        "metadata_admin",
                        "partner_support",
                        "role_manager",
                        "sales_admin",
                        "sales_observer",
                        "subscriptions_manager",
                        "team",
                        "verification_admin",
                      ],
                    "required": true,
                  },
                ],
              "responses":
                { "201": { "description": "Add a new role to the user" } },
              "tags": ["user"],
              "operationId": "postApiV1UserIdRolesRoleType",
            },
        },
      "/api/v1/user/{id}/follow/artists":
        {
          "get":
            {
              "description": "Retrieve all artists followed by a user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "_slugs",
                        "-_slugs",
                        "created_at",
                        "-created_at",
                        "sortable_id",
                        "-sortable_id",
                        "-trending",
                      ],
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve all artists followed by a user.",
                    },
                },
              "tags": ["user"],
              "operationId": "getApiV1UserIdFollowArtists",
            },
        },
      "/api/v1/user/{id}":
        {
          "delete":
            {
              "description": "Delete an existing user.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete an existing user." } },
              "tags": ["user"],
              "operationId": "deleteApiV1UserId",
            },
          "put":
            {
              "description": "Update an existing user.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1User",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1User" },
                  },
                ],
              "responses":
                { "200": { "description": "Update an existing user." } },
              "tags": ["user"],
              "operationId": "putApiV1UserId",
            },
          "get":
            {
              "description": "Retrieve a user by id.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a user by id." } },
              "tags": ["user"],
              "operationId": "getApiV1UserId",
            },
        },
      "/api/v1/users/reset_password":
        {
          "put":
            {
              "description": "Reset a password given a password token.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1UsersResetPassword",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/putApiV1UsersResetPassword" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Reset a password given a password token.",
                    },
                },
              "tags": ["users"],
              "operationId": "putApiV1UsersResetPassword",
            },
        },
      "/api/v1/users/send_reset_password_instructions":
        {
          "post":
            {
              "description": "Send reset password instructions.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1UsersSendResetPasswordInstructions",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1UsersSendResetPasswordInstructions",
                      },
                  },
                ],
              "responses":
                {
                  "201": { "description": "Send reset password instructions." },
                },
              "tags": ["users"],
              "operationId": "postApiV1UsersSendResetPasswordInstructions",
            },
        },
      "/api/v1/users":
        {
          "get":
            {
              "description": "Retrieve all users.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "id",
                    "description": "Only return users that match passed in ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "roles",
                    "description": "Return users that have any of the specified roles (required, depending on privilege level).",
                    "type": "array",
                    "items":
                      {
                        "type": "string",
                        "enum":
                          [
                            "admin",
                            "billing_admin",
                            "consignments_manager",
                            "consignments_representative",
                            "content_manager",
                            "customer_support",
                            "editorial",
                            "genomer",
                            "metadata_admin",
                            "partner_support",
                            "role_manager",
                            "sales_admin",
                            "sales_observer",
                            "subscriptions_manager",
                            "team",
                            "verification_admin",
                          ],
                      },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "properties",
                    "description": "Scope of user data to return (default: all).",
                    "type": "string",
                    "default": "all",
                    "enum": ["short", "public", "all"],
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "sort",
                    "description": "Sort order.",
                    "type": "string",
                    "enum":
                      [
                        "name",
                        "-name",
                        "email",
                        "-email",
                        "collector_since",
                        "-collector_since",
                      ],
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "Retrieve all users." } },
              "tags": ["users"],
              "operationId": "getApiV1Users",
            },
        },
      "/api/v1/verified_representatives/{id}":
        {
          "delete":
            {
              "description": "Delete a verified representative.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204": { "description": "Delete a verified representative." },
                },
              "tags": ["verified_representatives"],
              "operationId": "deleteApiV1VerifiedRepresentativesId",
            },
        },
      "/api/v1/verified_representatives":
        {
          "post":
            {
              "description": "Create a verified representative.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1VerifiedRepresentatives",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1VerifiedRepresentatives",
                      },
                  },
                ],
              "responses":
                {
                  "201": { "description": "Create a verified representative." },
                },
              "tags": ["verified_representatives"],
              "operationId": "postApiV1VerifiedRepresentatives",
            },
          "get":
            {
              "description": "Get list of verified representatives.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "artist_id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Get list of verified representatives." },
                },
              "tags": ["verified_representatives"],
              "operationId": "getApiV1VerifiedRepresentatives",
            },
        },
      "/api/v1/video":
        {
          "post":
            {
              "description": "Create a video.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1Video",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1Video" },
                  },
                ],
              "responses": { "201": { "description": "Create a video." } },
              "tags": ["video"],
              "operationId": "postApiV1Video",
            },
        },
      "/api/v1/video/{id}":
        {
          "get":
            {
              "description": "Retrieve a video.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Video id.",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "Retrieve a video." } },
              "tags": ["video"],
              "operationId": "getApiV1VideoId",
            },
        },
      "/api/v1/viewing_rooms":
        {
          "get":
            {
              "description": "Retrieve viewing rooms",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "ids",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "featured",
                    "type": "boolean",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "statuses",
                    "type": "array",
                    "items":
                      {
                        "type": "string",
                        "enum": ["draft", "scheduled", "live", "closed"],
                        "default": ["live"],
                      },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve viewing rooms" } },
              "tags": ["viewing_rooms"],
              "operationId": "getApiV1ViewingRooms",
            },
        },
      "/api/v1/viewing_room/{id}/subsections":
        {
          "put":
            {
              "description": "Update a viewing room's subsections.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ViewingRoomIdSubsections",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1ViewingRoomIdSubsections",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Update a viewing room's subsections." },
                },
              "tags": ["viewing_room"],
              "operationId": "putApiV1ViewingRoomIdSubsections",
            },
          "get":
            {
              "description": "Retrieve a viewing room's subsections.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Viewing room id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    { "description": "Retrieve a viewing room's subsections." },
                },
              "tags": ["viewing_room"],
              "operationId": "getApiV1ViewingRoomIdSubsections",
            },
        },
      "/api/v1/viewing_room/{id}/viewing_room_artworks":
        {
          "put":
            {
              "description": "Update a viewing room's artworks.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ViewingRoomIdViewingRoomArtworks",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/putApiV1ViewingRoomIdViewingRoomArtworks",
                      },
                  },
                ],
              "responses":
                {
                  "200": { "description": "Update a viewing room's artworks." },
                },
              "tags": ["viewing_room"],
              "operationId": "putApiV1ViewingRoomIdViewingRoomArtworks",
            },
          "get":
            {
              "description": "Retrieve join entities between viewing rooms and artworks.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Viewing room id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve join entities between viewing rooms and artworks.",
                    },
                },
              "tags": ["viewing_room"],
              "operationId": "getApiV1ViewingRoomIdViewingRoomArtworks",
            },
        },
      "/api/v1/viewing_room/{id}":
        {
          "delete":
            {
              "description": "Delete a viewing_room.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Viewing Room ID",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "204": { "description": "Delete a viewing_room." } },
              "tags": ["viewing_room"],
              "operationId": "deleteApiV1ViewingRoomId",
            },
          "put":
            {
              "description": "Update a viewing room.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Viewing Room ID",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ViewingRoom",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/putApiV1ViewingRoom" },
                  },
                ],
              "responses":
                { "200": { "description": "Update a viewing room." } },
              "tags": ["viewing_room"],
              "operationId": "putApiV1ViewingRoomId",
            },
          "get":
            {
              "description": "Retrieve a viewing room.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Viewing room id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve a viewing room." } },
              "tags": ["viewing_room"],
              "operationId": "getApiV1ViewingRoomId",
            },
        },
      "/api/v1/viewing_room":
        {
          "post":
            {
              "description": "Create a viewing room.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1ViewingRoom",
                    "in": "body",
                    "required": true,
                    "schema": { "$ref": "#/definitions/postApiV1ViewingRoom" },
                  },
                ],
              "responses":
                { "201": { "description": "Create a viewing room." } },
              "tags": ["viewing_room"],
              "operationId": "postApiV1ViewingRoom",
            },
        },
      "/api/v1/xapp_token":
        {
          "get":
            {
              "description": "Obtain an XApp token.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "client_id",
                    "description": "Client id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "client_secret",
                    "description": "Client secret.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "Obtain an XApp token." } },
              "tags": ["xapp_token"],
              "operationId": "getApiV1XappToken",
            },
        },
      "/api/v1/address_verification":
        {
          "post":
            {
              "description": "Verify an address",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1AddressVerification",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1AddressVerification" },
                  },
                ],
              "responses": { "201": { "description": "Verify an address" } },
              "tags": ["address_verification"],
              "operationId": "postApiV1AddressVerification",
            },
        },
      ? "/api/v1/client_application/{id}/client_application_partner/{client_application_partner_id}"
      : {
          "delete":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Client application id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "path",
                    "name": "client_application_partner_id",
                    "description": "Client application partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "204": { "description": "deleted ClientApplicationPartner" },
                },
              "tags": ["client_application"],
              "operationId": "deleteApiV1ClientApplicationIdClientApplicationPartnerClientApplicationPartnerId",
            },
        },
      "/api/v1/client_application/{id}/client_application_partner":
        {
          "post":
            {
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Client application id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "name": "ApiV1ClientApplicationIdClientApplicationPartner",
                    "in": "body",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/definitions/postApiV1ClientApplicationIdClientApplicationPartner",
                      },
                  },
                ],
              "responses":
                {
                  "201": { "description": "created ClientApplicationPartner" },
                },
              "tags": ["client_application"],
              "operationId": "postApiV1ClientApplicationIdClientApplicationPartner",
            },
        },
      "/api/v1/client_application/{id}/client_application_partners":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "description": "Client application id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "get ClientApplicationPartner(s)" } },
              "tags": ["client_application"],
              "operationId": "getApiV1ClientApplicationIdClientApplicationPartners",
            },
        },
      "/api/v1/fair_booth_import":
        {
          "post":
            {
              "description": "Executes fair booth creation process.",
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "name": "ApiV1FairBoothImport",
                    "in": "body",
                    "required": true,
                    "schema":
                      { "$ref": "#/definitions/postApiV1FairBoothImport" },
                  },
                ],
              "responses":
                {
                  "201":
                    { "description": "Executes fair booth creation process." },
                },
              "tags": ["fair_booth_import"],
              "operationId": "postApiV1FairBoothImport",
            },
        },
      "/api/v1/increments":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "sale_id",
                    "description": "ID or slug of sale by which to filter increment strategies.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "key",
                    "description": "Key by which to filter increment strategies.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses": { "200": { "description": "get Increment(s)" } },
              "tags": ["increments"],
              "operationId": "getApiV1Increments",
            },
        },
      "/api/v1/increment/{key}":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "key",
                    "description": "Key identifying increment strategy.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses": { "200": { "description": "get Increment(s)" } },
              "tags": ["increment"],
              "operationId": "getApiV1IncrementKey",
            },
        },
      ? "/api/v1/partner_collector_profile/{collector_profile_id}/partner_engagement"
      : {
          "get":
            {
              "description": "Retrieve information related to partner engagement.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "collector_profile_id",
                    "description": "CollectorProfile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve information related to partner engagement.",
                    },
                },
              "tags": ["partner_collector_profile"],
              "operationId": "getApiV1PartnerCollectorProfileCollectorProfileIdPartnerEngagement",
            },
        },
      ? "/api/v1/partner_collector_profile/{collector_profile_id}/artwork_inquiry_requests_count"
      : {
          "get":
            {
              "description": "Retrieve a count of artwork inquiries made by a collector profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "collector_profile_id",
                    "description": "CollectorProfile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "artist_id",
                    "description": "When present, only consider inquiry requests for this artist.",
                    "type": "string",
                    "required": false,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve a count of artwork inquiries made by a collector profile.",
                    },
                },
              "tags": ["partner_collector_profile"],
              "operationId": "getApiV1PartnerCollectorProfileCollectorProfileIdArtworkInquiryRequestsCount",
            },
        },
      "/api/v1/partner_collector_profile/{collector_profile_id}/user_interests":
        {
          "get":
            {
              "description": "Retrieve user interests of a collector profile.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "page",
                    "description": "Page number to retrieve, starting at 1.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "offset",
                    "description": "Offset from which to retrieve.",
                    "type": "integer",
                    "format": "int32",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "description": "Number of items to retrieve for this page or from the current offset.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "cursor",
                    "description": "Cursor for pagination.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "path",
                    "name": "collector_profile_id",
                    "description": "CollectorProfile id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve user interests of a collector profile.",
                    },
                },
              "tags": ["partner_collector_profile"],
              "operationId": "getApiV1PartnerCollectorProfileCollectorProfileIdUserInterests",
            },
        },
      "/api/v1/partner_collector_profile":
        {
          "get":
            {
              "description": "Retrieve details of a partner collector profile",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "user_id",
                    "description": "User id.",
                    "type": "string",
                    "required": true,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Retrieve details of a partner collector profile",
                    },
                },
              "tags": ["partner_collector_profile"],
              "operationId": "getApiV1PartnerCollectorProfile",
            },
        },
      "/api/v1/partner_collector_profiles":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "partner_id",
                    "description": "Partner id.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "formData",
                    "name": "user_ids",
                    "description": "User ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "total_count",
                    "description": "When true, include total count in headers",
                    "type": "boolean",
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "get PartnerCollectorProfile(s)" } },
              "tags": ["partner_collector_profiles"],
              "operationId": "getApiV1PartnerCollectorProfiles",
            },
        },
      "/api/v1/profiles":
        {
          "get":
            {
              "description": "Retrieve 1 or more profiles.",
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "formData",
                    "name": "id",
                    "description": "One or more profile ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "owner_type",
                    "description": "Type of owner.",
                    "type": "string",
                    "required": false,
                  },
                  {
                    "in": "formData",
                    "name": "owner_ids",
                    "description": "One or more owner ids.",
                    "type": "array",
                    "items": { "type": "string" },
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "Retrieve 1 or more profiles." } },
              "tags": ["profiles"],
              "operationId": "getApiV1Profiles",
            },
        },
      "/api/v1/webhook_deliveries":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "query",
                    "name": "client_application_id",
                    "description": "Client application ID.",
                    "type": "string",
                    "required": true,
                  },
                  {
                    "in": "query",
                    "name": "page",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false,
                  },
                  {
                    "in": "query",
                    "name": "size",
                    "type": "integer",
                    "format": "int32",
                    "default": 10,
                    "minimum": 0,
                    "maximum": 99,
                    "required": false,
                  },
                ],
              "responses":
                { "200": { "description": "get WebhookDelivery(s)" } },
              "tags": ["webhook_deliveries"],
              "operationId": "getApiV1WebhookDeliveries",
            },
        },
      "/api/v1/webhook_delivery/{id}/redeliver":
        {
          "post":
            {
              "produces": ["application/json"],
              "consumes": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses": { "201": { "description": "created Redeliver" } },
              "tags": ["webhook_delivery"],
              "operationId": "postApiV1WebhookDeliveryIdRedeliver",
            },
        },
      "/api/v1/webhook_delivery/{id}":
        {
          "get":
            {
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                  },
                ],
              "responses":
                { "200": { "description": "get WebhookDelivery(s)" } },
              "tags": ["webhook_delivery"],
              "operationId": "getApiV1WebhookDeliveryId",
            },
        },
    },
  "definitions":
    {
      "postApiV1AccountRequests":
        {
          "type": "object",
          "properties":
            {
              "user_id": { "type": "string", "description": "User id." },
              "action":
                {
                  "type": "string",
                  "description": "Action taken.",
                  "enum": ["user_delete", "user_data"],
                },
              "notes": { "type": "string", "description": "Notes." },
              "name": { "type": "string" },
              "email": { "type": "string" },
            },
          "required": ["action"],
          "description": "Create an account request, which may be associated with a user.",
        },
      "putApiV1ArtistCareerHighlight":
        {
          "type": "object",
          "properties":
            {
              "solo": { "type": "string" },
              "group": { "type": "string" },
              "collected": { "type": "string" },
            },
          "description": "Update an artist career highlight.",
        },
      "postApiV1ArtistCareerHighlight":
        {
          "type": "object",
          "properties":
            {
              "artist_id": { "type": "string", "description": "Artist id." },
              "partner_id": { "type": "string", "description": "Partner id." },
            },
          "required": ["artist_id", "partner_id"],
          "description": "Create an artist career highlight.",
        },
      "putApiV1ArtistIdGenome":
        {
          "type": "object",
          "properties":
            {
              "genes":
                { "type": "object", "description": "Gene name/value pairs." },
            },
          "description": "Update an artist's genome.",
        },
      "postApiV1ArtistIdMerge":
        {
          "type": "object",
          "properties":
            {
              "artist_id":
                { "type": "string", "description": "Artist to merge id." },
            },
          "required": ["artist_id"],
          "description": "Merge two artists (any artworks, follows, and posts)",
        },
      "postApiV1Artist":
        {
          "type": "object",
          "properties":
            {
              "first": { "type": "string", "description": "First name." },
              "middle": { "type": "string", "description": "Middle name." },
              "last": { "type": "string", "description": "Last name." },
              "display_name":
                { "type": "string", "description": "Display name." },
              "birthday":
                {
                  "type": "string",
                  "description": "A date on which the artist was born.",
                },
              "deathday":
                {
                  "type": "string",
                  "description": "A date on which the artist died.",
                },
              "gender": { "type": "string", "description": "Gender." },
              "nationality":
                {
                  "type": "string",
                  "description": "The country that best defines the artist.",
                },
              "hometown":
                {
                  "type": "string",
                  "description": "The city in which the artist was born.",
                },
              "location":
                {
                  "type": "string",
                  "description": "The city in which the artist is currently working.",
                },
              "statement":
                { "type": "string", "description": "An artist statement." },
              "biography":
                { "type": "string", "description": "A brief biography." },
              "blurb":
                {
                  "type": "string",
                  "description": "A blurb that best describes the artist.",
                },
              "education":
                {
                  "type": "string",
                  "description": "Artist's degrees and academic achievements.",
                },
              "awards": { "type": "string", "description": "Artist's awards." },
              "publications":
                { "type": "string", "description": "Artist's publications." },
              "collections":
                {
                  "type": "string",
                  "description": "Collections that contain artist's works.",
                },
              "soloexhibitions":
                {
                  "type": "string",
                  "description": "A list of solo exhibitions.",
                },
              "groupexhibitions":
                {
                  "type": "string",
                  "description": "A list of group exhibitions.",
                },
              "image_rights":
                {
                  "type": "string",
                  "description": "Rights associated with an artist.",
                },
              "alternate_names":
                {
                  "type": "array",
                  "description": "Alternate names or synonyms for this artist.",
                  "items": { "type": "string" },
                },
              "featured_names":
                {
                  "type": "array",
                  "description": "Used by global search to produce featured results",
                  "items": { "type": "string" },
                },
              "public": { "type": "string" },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "consignable":
                {
                  "type": "string",
                  "description": "True if Artsy clients may solicit consignments for the artist.",
                },
              "hide_auction_link":
                {
                  "type": "string",
                  "description": "If true, do not display auction results link.",
                },
              "exclude_from_criteo":
                {
                  "type": "string",
                  "description": "Exclude from Criteo artwork report.",
                },
              "disable_price_context":
                {
                  "type": "string",
                  "description": "Disable price context feature.",
                },
              "target_supply_priority":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Corresponds to target supply priority tier (e.g. P1, P2)",
                },
              "target_supply_type":
                {
                  "type": "string",
                  "description": "The target supply category",
                },
              "group_indicator":
                {
                  "type": "string",
                  "description": "Indicates whether the artist is a solo person or more of a group.",
                },
              "medium_known_for":
                {
                  "type": "string",
                  "description": "Name of medium this artist is known for.",
                },
              "alternate_nationalities":
                {
                  "type": "array",
                  "description": "Other nationalities associated with the artist, for matching.",
                  "items": { "type": "string" },
                },
              "cover_artwork_id": { "type": "string" },
              "critically_acclaimed":
                {
                  "type": "string",
                  "description": "Indicates whether the artist has been deemed critically acclaimed.",
                },
              "vanguard_year":
                {
                  "type": "string",
                  "description": "Indicates year the artist was in Artsy Vanguard.",
                },
              "recent_show":
                { "type": "string", "description": "Recent Artist's Show." },
              "foundations":
                {
                  "type": "string",
                  "description": "Indicates when the artist was in Artsy Foundations.",
                },
              "is_personal_artist":
                {
                  "type": "boolean",
                  "description": "Whether the artist is a personal artist that belongs to a user.",
                },
            },
          "description": "Create a new artist.",
        },
      "putApiV1Artist":
        {
          "type": "object",
          "properties":
            {
              "first": { "type": "string", "description": "First name." },
              "middle": { "type": "string", "description": "Middle name." },
              "last": { "type": "string", "description": "Last name." },
              "display_name":
                { "type": "string", "description": "Display name." },
              "birthday":
                {
                  "type": "string",
                  "description": "A date on which the artist was born.",
                },
              "deathday":
                {
                  "type": "string",
                  "description": "A date on which the artist died.",
                },
              "gender": { "type": "string", "description": "Gender." },
              "nationality":
                {
                  "type": "string",
                  "description": "The country that best defines the artist.",
                },
              "hometown":
                {
                  "type": "string",
                  "description": "The city in which the artist was born.",
                },
              "location":
                {
                  "type": "string",
                  "description": "The city in which the artist is currently working.",
                },
              "statement":
                { "type": "string", "description": "An artist statement." },
              "biography":
                { "type": "string", "description": "A brief biography." },
              "blurb":
                {
                  "type": "string",
                  "description": "A blurb that best describes the artist.",
                },
              "education":
                {
                  "type": "string",
                  "description": "Artist's degrees and academic achievements.",
                },
              "awards": { "type": "string", "description": "Artist's awards." },
              "publications":
                { "type": "string", "description": "Artist's publications." },
              "collections":
                {
                  "type": "string",
                  "description": "Collections that contain artist's works.",
                },
              "soloexhibitions":
                {
                  "type": "string",
                  "description": "A list of solo exhibitions.",
                },
              "groupexhibitions":
                {
                  "type": "string",
                  "description": "A list of group exhibitions.",
                },
              "image_rights":
                {
                  "type": "string",
                  "description": "Rights associated with an artist.",
                },
              "alternate_names":
                {
                  "type": "array",
                  "description": "Alternate names or synonyms for this artist.",
                  "items": { "type": "string" },
                },
              "featured_names":
                {
                  "type": "array",
                  "description": "Used by global search to produce featured results",
                  "items": { "type": "string" },
                },
              "public": { "type": "string" },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "consignable":
                {
                  "type": "string",
                  "description": "True if Artsy clients may solicit consignments for the artist.",
                },
              "hide_auction_link":
                {
                  "type": "string",
                  "description": "If true, do not display auction results link.",
                },
              "exclude_from_criteo":
                {
                  "type": "string",
                  "description": "Exclude from Criteo artwork report.",
                },
              "disable_price_context":
                {
                  "type": "string",
                  "description": "Disable price context feature.",
                },
              "target_supply_priority":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Corresponds to target supply priority tier (e.g. P1, P2)",
                },
              "target_supply_type":
                {
                  "type": "string",
                  "description": "The target supply category",
                },
              "group_indicator":
                {
                  "type": "string",
                  "description": "Indicates whether the artist is a solo person or more of a group.",
                },
              "medium_known_for":
                {
                  "type": "string",
                  "description": "Name of medium this artist is known for.",
                },
              "alternate_nationalities":
                {
                  "type": "array",
                  "description": "Other nationalities associated with the artist, for matching.",
                  "items": { "type": "string" },
                },
              "cover_artwork_id": { "type": "string" },
              "critically_acclaimed":
                {
                  "type": "string",
                  "description": "Indicates whether the artist has been deemed critically acclaimed.",
                },
              "vanguard_year":
                {
                  "type": "string",
                  "description": "Indicates year the artist was in Artsy Vanguard.",
                },
              "recent_show":
                { "type": "string", "description": "Recent Artist's Show." },
              "foundations":
                {
                  "type": "string",
                  "description": "Indicates when the artist was in Artsy Foundations.",
                },
            },
          "description": "Update an existing artist.",
        },
      "putApiV1ArtworkArtworkIdInventory":
        {
          "type": "object",
          "properties":
            {
              "count":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "The new number of items available.",
                },
              "unlimited":
                {
                  "type": "boolean",
                  "description": "Whether the inventory for this item should be treated as unlimited.",
                },
              "deduct":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of items to deduct from sold inventory",
                },
              "undeduct":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of items to be added back to sold inventory",
                },
            },
          "description": "Create or update an artwork's inventory.",
        },
      "putApiV1ArtworkArtworkIdImage":
        {
          "type": "object",
          "properties":
            {
              "position":
                {
                  "type": "string",
                  "description": "Position of the image within the artwork images.",
                },
              "downloadable": { "type": "string" },
              "skip_watermark": { "type": "string" },
              "reprocess_original":
                {
                  "type": "boolean",
                  "description": "Reprocess originally uploaded image.",
                },
            },
          "description": "Update an artwork image.",
        },
      "postApiV1ArtworkArtworkIdImage":
        {
          "type": "object",
          "properties":
            {
              "remote_image_url":
                {
                  "type": "string",
                  "description": "Remote URL for the image to upload (string). Takes precedence over gemini_token.",
                },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Gemini token of image to associate with artwork.",
                },
              "skip_watermark":
                {
                  "type": "boolean",
                  "description": "Skips applying Digimarc watermarking to image.",
                },
              "low_priority":
                {
                  "type": "boolean",
                  "description": "Should be true when clients expect to submit a large number of images.",
                },
              "position":
                {
                  "type": "string",
                  "description": "Position of the image within the artwork images.",
                },
            },
          "description": "Add an image to an artwork.",
        },
      "putApiV1ArtworkIdGenome":
        {
          "type": "object",
          "properties":
            {
              "genes":
                { "type": "object", "description": "Gene name/value pairs." },
            },
          "description": "Update an artwork's genome.",
        },
      "postApiV1Artwork":
        {
          "type": "object",
          "properties":
            {
              "title": { "type": "string", "description": "Artwork title." },
              "date": { "type": "string" },
              "category":
                { "type": "string", "description": "Artwork category." },
              "condition": { "type": "string" },
              "medium": { "type": "string", "description": "Artwork medium." },
              "signature":
                {
                  "type": "string",
                  "description": "Description of artist signature, when present.",
                },
              "provenance":
                { "type": "string", "description": "Artwork provenance." },
              "series": { "type": "string", "description": "Artwork series." },
              "depth": { "type": "string", "description": "Depth." },
              "diameter": { "type": "string", "description": "Diameter." },
              "duration":
                {
                  "type": "string",
                  "description": "Multimedia artwork duration.",
                },
              "width": { "type": "string", "description": "Width." },
              "height": { "type": "string", "description": "Height." },
              "metric":
                {
                  "type": "string",
                  "description": "Metric used for dimensions.",
                },
              "literature":
                { "type": "string", "description": "Artwork literature." },
              "exhibition_history":
                { "type": "string", "description": "Exhibition history." },
              "collecting_institution":
                { "type": "string", "description": "Collecting institution." },
              "additional_information":
                { "type": "string", "description": "Additional information." },
              "image_rights":
                { "type": "string", "description": "Image rights." },
              "external_id":
                {
                  "type": "string",
                  "description": "External provider identity.",
                },
              "external_video_id":
                {
                  "type": "string",
                  "description": "External video identity. Currently points to Vimeo upload.",
                },
              "import_source":
                {
                  "type": "string",
                  "description": "A reference to the system used to import the work.",
                },
              "availability":
                { "type": "string", "description": "Availability." },
              "ecommerce":
                { "type": "string", "description": "Buy Now by partner" },
              "price_listed":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Price listed.",
                },
              "price_min":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Minimum price.",
                },
              "price_max":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Maximum price.",
                },
              "display_price_range":
                { "type": "string", "description": "Display price as range." },
              "price_hidden":
                { "type": "string", "description": "Price hidden." },
              "price_currency":
                { "type": "string", "description": "Currency used." },
              "price_includes_tax":
                {
                  "type": "string",
                  "description": "Price includes tax, such as VAT.",
                },
              "feature_eligible":
                {
                  "type": "string",
                  "description": "Artwork eligible for show feed.",
                },
              "tags":
                {
                  "type": "array",
                  "description": "Tags.",
                  "items": { "type": "string" },
                },
              "inventory_id": { "type": "string" },
              "partner": { "type": "string" },
              "website":
                { "type": "string", "description": "Net art website URL." },
              "secondary_market":
                {
                  "type": "string",
                  "description": "Whether received directly from the artist or not.",
                },
              "can_share_image": { "type": "string" },
              "offer":
                {
                  "type": "string",
                  "description": "Make Offer enabled by partner",
                },
              "manufacturer":
                {
                  "type": "string",
                  "description": "Manufacturer of the artwork (generally applied to design objects).",
                },
              "unique":
                {
                  "type": "string",
                  "description": "Indicates a unique single artwork (generally applied to design objects).",
                },
              "dimensions_string":
                {
                  "type": "string",
                  "description": "Dimensions as plain text.",
                },
              "publisher":
                {
                  "type": "string",
                  "description": "Publisher of artwork (generally applied to prints).",
                },
              "relevant_auction_results":
                {
                  "type": "string",
                  "description": "Text representation of relevant auction results.",
                },
              "blurb":
                {
                  "type": "string",
                  "description": "Short text blurb about the artwork.",
                },
              "cultural_maker":
                {
                  "type": "string",
                  "description": "Can be substituted for artist when no artist is available.",
                },
              "cultural_maker_ids":
                {
                  "type": "array",
                  "description": "List of related cultural makers' IDs",
                  "items": { "type": "string" },
                },
              "confidential_notes":
                {
                  "type": "string",
                  "description": "Confidential notes about the artwork.",
                },
              "attribution_class":
                {
                  "type": "string",
                  "description": "Attribution class, aka artwork classification",
                },
              "framed": { "type": "string", "description": "Framed?" },
              "certificate_of_authenticity":
                {
                  "type": "string",
                  "description": "Certificate of Authenticity?",
                },
              "coa_by_authenticating_body":
                {
                  "type": "string",
                  "description": "Certificate of Authenticity issued by authenticating body?",
                },
              "coa_by_gallery":
                {
                  "type": "string",
                  "description": "Certificate of Authenticity issued by gallery?",
                },
              "condition_description":
                { "type": "string", "description": "Condition description." },
              "signed_by_artist":
                { "type": "string", "description": "Hand-signed by artist?" },
              "stamped_by_artist_estate":
                {
                  "type": "string",
                  "description": "Stamped by artist estate?",
                },
              "sticker_label":
                {
                  "type": "string",
                  "description": "Sticker label for signature/authentication?",
                },
              "signed_in_plate":
                { "type": "string", "description": "Signed in plate?" },
              "signed_other":
                {
                  "type": "string",
                  "description": "Other form of signature/authentication?",
                },
              "not_signed": { "type": "string", "description": "Not signed?" },
              "pickup_available":
                { "type": "string", "description": "Available for pickup?" },
              "domestic_shipping_fee_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Flat domestic shipping fee.",
                },
              "international_shipping_fee_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Flat international shipping fee.",
                },
              "price_paid_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Price paid by a collector for this artwork in My Collection",
                },
              "price_paid_currency":
                {
                  "type": "string",
                  "description": "Currency for price_paid_cents",
                },
              "shipping_weight":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Weight of artwork to be shipped.",
                },
              "shipping_weight_metric":
                {
                  "type": "string",
                  "description": "Weight metric for artwork to be shipped",
                },
              "framed_height":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed height",
                },
              "framed_width":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed width",
                },
              "framed_depth":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed depth",
                },
              "framed_diameter":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed diameter",
                },
              "framed_metric":
                {
                  "type": "string",
                  "description": "Metric for framed dimensions.",
                },
              "arta_enabled":
                {
                  "type": "string",
                  "description": "Opted into Arta shipping service",
                },
              "artsy_shipping_international":
                {
                  "type": "string",
                  "description": "Opted into Artsy international shipping service",
                },
              "artsy_shipping_domestic": { "type": "string" },
              "artwork_location":
                {
                  "type": "string",
                  "description": 'Location of the artwork for "My Collection" artworks',
                },
              "submission_id":
                {
                  "type": "string",
                  "description": "Submission ID in Convection",
                },
              "collector_location": { "type": "string" },
              "shipping_notes":
                {
                  "type": "string",
                  "description": "Notes provided by the partner in regards to shipping details",
                },
              "set_video_as_cover":
                {
                  "type": "string",
                  "description": "Sets the video as the cover image.",
                },
              "partner_promoted":
                {
                  "type": "string",
                  "description": "Artwork is promoted by partner.",
                },
              "visibility_level":
                {
                  "type": "string",
                  "description": "The level of external exposure an artwork receives.",
                },
              "display_artist_bio":
                {
                  "type": "string",
                  "description": "Whether or not artist bio should be displayed on a private artwork.",
                },
              "artists":
                {
                  "type": "array",
                  "description": "List of related artists' IDs",
                  "items": { "type": "string" },
                },
              "partner_location_id":
                { "type": "string", "description": "Location of an artwork." },
              "collection_id":
                {
                  "type": "string",
                  "description": "Collection id to add artwork to.",
                },
              "inventory":
                {
                  "type": "object",
                  "description": "Params to create inventory record",
                  "properties":
                    {
                      "count":
                        {
                          "type": "integer",
                          "format": "int32",
                          "description": "The new number of items available.",
                        },
                      "unlimited":
                        {
                          "type": "boolean",
                          "description": "Whether the inventory for this item should be treated as unlimited.",
                        },
                    },
                },
            },
          "description": "Create an artwork.",
        },
      "putApiV1Artwork":
        {
          "type": "object",
          "properties":
            {
              "title": { "type": "string", "description": "Artwork title." },
              "date": { "type": "string" },
              "category":
                { "type": "string", "description": "Artwork category." },
              "condition": { "type": "string" },
              "medium": { "type": "string", "description": "Artwork medium." },
              "signature":
                {
                  "type": "string",
                  "description": "Description of artist signature, when present.",
                },
              "provenance":
                { "type": "string", "description": "Artwork provenance." },
              "series": { "type": "string", "description": "Artwork series." },
              "depth": { "type": "string", "description": "Depth." },
              "diameter": { "type": "string", "description": "Diameter." },
              "duration":
                {
                  "type": "string",
                  "description": "Multimedia artwork duration.",
                },
              "width": { "type": "string", "description": "Width." },
              "height": { "type": "string", "description": "Height." },
              "metric":
                {
                  "type": "string",
                  "description": "Metric used for dimensions.",
                },
              "literature":
                { "type": "string", "description": "Artwork literature." },
              "exhibition_history":
                { "type": "string", "description": "Exhibition history." },
              "collecting_institution":
                { "type": "string", "description": "Collecting institution." },
              "additional_information":
                { "type": "string", "description": "Additional information." },
              "image_rights":
                { "type": "string", "description": "Image rights." },
              "external_id":
                {
                  "type": "string",
                  "description": "External provider identity.",
                },
              "external_video_id":
                {
                  "type": "string",
                  "description": "External video identity. Currently points to Vimeo upload.",
                },
              "import_source":
                {
                  "type": "string",
                  "description": "A reference to the system used to import the work.",
                },
              "availability":
                { "type": "string", "description": "Availability." },
              "ecommerce":
                { "type": "string", "description": "Buy Now by partner" },
              "price_listed":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Price listed.",
                },
              "price_min":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Minimum price.",
                },
              "price_max":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Maximum price.",
                },
              "display_price_range":
                { "type": "string", "description": "Display price as range." },
              "price_hidden":
                { "type": "string", "description": "Price hidden." },
              "price_currency":
                { "type": "string", "description": "Currency used." },
              "price_includes_tax":
                {
                  "type": "string",
                  "description": "Price includes tax, such as VAT.",
                },
              "feature_eligible":
                {
                  "type": "string",
                  "description": "Artwork eligible for show feed.",
                },
              "tags":
                {
                  "type": "array",
                  "description": "Tags.",
                  "items": { "type": "string" },
                },
              "inventory_id": { "type": "string" },
              "partner": { "type": "string" },
              "website":
                { "type": "string", "description": "Net art website URL." },
              "secondary_market":
                {
                  "type": "string",
                  "description": "Whether received directly from the artist or not.",
                },
              "can_share_image": { "type": "string" },
              "offer":
                {
                  "type": "string",
                  "description": "Make Offer enabled by partner",
                },
              "manufacturer":
                {
                  "type": "string",
                  "description": "Manufacturer of the artwork (generally applied to design objects).",
                },
              "unique":
                {
                  "type": "string",
                  "description": "Indicates a unique single artwork (generally applied to design objects).",
                },
              "dimensions_string":
                {
                  "type": "string",
                  "description": "Dimensions as plain text.",
                },
              "publisher":
                {
                  "type": "string",
                  "description": "Publisher of artwork (generally applied to prints).",
                },
              "relevant_auction_results":
                {
                  "type": "string",
                  "description": "Text representation of relevant auction results.",
                },
              "blurb":
                {
                  "type": "string",
                  "description": "Short text blurb about the artwork.",
                },
              "cultural_maker":
                {
                  "type": "string",
                  "description": "Can be substituted for artist when no artist is available.",
                },
              "cultural_maker_ids":
                {
                  "type": "array",
                  "description": "List of related cultural makers' IDs",
                  "items": { "type": "string" },
                },
              "confidential_notes":
                {
                  "type": "string",
                  "description": "Confidential notes about the artwork.",
                },
              "attribution_class":
                {
                  "type": "string",
                  "description": "Attribution class, aka artwork classification",
                },
              "framed": { "type": "string", "description": "Framed?" },
              "certificate_of_authenticity":
                {
                  "type": "string",
                  "description": "Certificate of Authenticity?",
                },
              "coa_by_authenticating_body":
                {
                  "type": "string",
                  "description": "Certificate of Authenticity issued by authenticating body?",
                },
              "coa_by_gallery":
                {
                  "type": "string",
                  "description": "Certificate of Authenticity issued by gallery?",
                },
              "condition_description":
                { "type": "string", "description": "Condition description." },
              "signed_by_artist":
                { "type": "string", "description": "Hand-signed by artist?" },
              "stamped_by_artist_estate":
                {
                  "type": "string",
                  "description": "Stamped by artist estate?",
                },
              "sticker_label":
                {
                  "type": "string",
                  "description": "Sticker label for signature/authentication?",
                },
              "signed_in_plate":
                { "type": "string", "description": "Signed in plate?" },
              "signed_other":
                {
                  "type": "string",
                  "description": "Other form of signature/authentication?",
                },
              "not_signed": { "type": "string", "description": "Not signed?" },
              "pickup_available":
                { "type": "string", "description": "Available for pickup?" },
              "domestic_shipping_fee_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Flat domestic shipping fee.",
                },
              "international_shipping_fee_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Flat international shipping fee.",
                },
              "price_paid_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Price paid by a collector for this artwork in My Collection",
                },
              "price_paid_currency":
                {
                  "type": "string",
                  "description": "Currency for price_paid_cents",
                },
              "shipping_weight":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Weight of artwork to be shipped.",
                },
              "shipping_weight_metric":
                {
                  "type": "string",
                  "description": "Weight metric for artwork to be shipped",
                },
              "framed_height":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed height",
                },
              "framed_width":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed width",
                },
              "framed_depth":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed depth",
                },
              "framed_diameter":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed diameter",
                },
              "framed_metric":
                {
                  "type": "string",
                  "description": "Metric for framed dimensions.",
                },
              "arta_enabled":
                {
                  "type": "string",
                  "description": "Opted into Arta shipping service",
                },
              "artsy_shipping_international":
                {
                  "type": "string",
                  "description": "Opted into Artsy international shipping service",
                },
              "artsy_shipping_domestic": { "type": "string" },
              "artwork_location":
                {
                  "type": "string",
                  "description": 'Location of the artwork for "My Collection" artworks',
                },
              "submission_id":
                {
                  "type": "string",
                  "description": "Submission ID in Convection",
                },
              "collector_location": { "type": "string" },
              "shipping_notes":
                {
                  "type": "string",
                  "description": "Notes provided by the partner in regards to shipping details",
                },
              "set_video_as_cover":
                {
                  "type": "string",
                  "description": "Sets the video as the cover image.",
                },
              "partner_promoted":
                {
                  "type": "string",
                  "description": "Artwork is promoted by partner.",
                },
              "visibility_level":
                {
                  "type": "string",
                  "description": "The level of external exposure an artwork receives.",
                },
              "display_artist_bio":
                {
                  "type": "string",
                  "description": "Whether or not artist bio should be displayed on a private artwork.",
                },
              "artists":
                {
                  "type": "array",
                  "description": "List of related artists' IDs",
                  "items": { "type": "string" },
                },
              "partner_location_id":
                { "type": "string", "description": "Location of an artwork." },
              "force_publish":
                {
                  "type": "boolean",
                  "description": "Publishes an artwork without validating",
                },
            },
          "description": "Update an existing artwork.",
        },
      "putApiV1ArtworkArtworkIdEditionSetIdInventory":
        {
          "type": "object",
          "properties":
            {
              "count":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "The new number of items available.",
                },
              "unlimited":
                {
                  "type": "boolean",
                  "description": "Whether the inventory for this item should be treated as unlimited (default: false).",
                },
              "deduct":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of items to deduct from sold inventory",
                },
              "undeduct":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of items to be added back to sold inventory",
                },
            },
          "description": "Create or update an edition set's inventory.",
        },
      "putApiV1ArtworkArtworkIdEditionSet":
        {
          "type": "object",
          "properties":
            {
              "availability":
                { "type": "string", "description": "Availability." },
              "ecommerce":
                { "type": "string", "description": "Buy Now by partner" },
              "offer":
                {
                  "type": "string",
                  "description": "Make Offer enabled by partner",
                },
              "price_listed":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Price listed.",
                },
              "price_min":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Minimum price.",
                },
              "price_max":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Maximum price.",
                },
              "price_hidden":
                { "type": "string", "description": "Price hidden." },
              "price_currency":
                { "type": "string", "description": "Currency used." },
              "display_price_range":
                { "type": "string", "description": "Display price as range." },
              "price_includes_tax":
                {
                  "type": "string",
                  "description": "Price includes tax, such as VAT.",
                },
              "height": { "type": "string", "description": "Height." },
              "width": { "type": "string", "description": "Width." },
              "depth": { "type": "string", "description": "Depth." },
              "diameter": { "type": "string", "description": "Diameter." },
              "duration":
                {
                  "type": "string",
                  "description": "Multimedia artwork duration.",
                },
              "metric":
                {
                  "type": "string",
                  "description": "Metric used for dimensions.",
                },
              "edition_size":
                {
                  "type": "string",
                  "description": "Number of works in this edition.",
                },
              "available_editions":
                {
                  "type": "array",
                  "description": "Available editions in an array format, eg. ['1', 2, '3-9'].",
                  "items": { "type": "string" },
                },
              "artist_proofs":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Artist proofs.",
                },
              "external_id":
                { "type": "string", "description": "External identity." },
              "secondary_market":
                {
                  "type": "string",
                  "description": "Whether received directly from the artist or not.",
                },
              "prototypes":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Prototypes (typically used in design objects).",
                },
              "shipping_weight":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Weight of artwork to be shipped.",
                },
              "shipping_weight_metric":
                {
                  "type": "string",
                  "description": "Weight metric for artwork to be shipped",
                },
              "framed": { "type": "string", "description": "Framed?" },
              "framed_height":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed height",
                },
              "framed_width":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed width",
                },
              "framed_depth":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed depth",
                },
              "framed_diameter":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed diameter",
                },
              "framed_metric":
                {
                  "type": "string",
                  "description": "Metric for framed dimensions.",
                },
              "partner_id": { "type": "string" },
            },
          "description": "Update an existing edition set.",
        },
      "postApiV1ArtworkArtworkIdEditionSet":
        {
          "type": "object",
          "properties":
            {
              "availability":
                { "type": "string", "description": "Availability." },
              "ecommerce":
                { "type": "string", "description": "Buy Now by partner" },
              "offer":
                {
                  "type": "string",
                  "description": "Make Offer enabled by partner",
                },
              "price_listed":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Price listed.",
                },
              "price_min":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Minimum price.",
                },
              "price_max":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Maximum price.",
                },
              "price_hidden":
                { "type": "string", "description": "Price hidden." },
              "price_currency":
                { "type": "string", "description": "Currency used." },
              "display_price_range":
                { "type": "string", "description": "Display price as range." },
              "price_includes_tax":
                {
                  "type": "string",
                  "description": "Price includes tax, such as VAT.",
                },
              "height": { "type": "string", "description": "Height." },
              "width": { "type": "string", "description": "Width." },
              "depth": { "type": "string", "description": "Depth." },
              "diameter": { "type": "string", "description": "Diameter." },
              "duration":
                {
                  "type": "string",
                  "description": "Multimedia artwork duration.",
                },
              "metric":
                {
                  "type": "string",
                  "description": "Metric used for dimensions.",
                },
              "edition_size":
                {
                  "type": "string",
                  "description": "Number of works in this edition.",
                },
              "available_editions":
                {
                  "type": "array",
                  "description": "Available editions in an array format, eg. ['1', 2, '3-9'].",
                  "items": { "type": "string" },
                },
              "artist_proofs":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Artist proofs.",
                },
              "external_id":
                { "type": "string", "description": "External identity." },
              "secondary_market":
                {
                  "type": "string",
                  "description": "Whether received directly from the artist or not.",
                },
              "prototypes":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Prototypes (typically used in design objects).",
                },
              "shipping_weight":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Weight of artwork to be shipped.",
                },
              "shipping_weight_metric":
                {
                  "type": "string",
                  "description": "Weight metric for artwork to be shipped",
                },
              "framed": { "type": "string", "description": "Framed?" },
              "framed_height":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed height",
                },
              "framed_width":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed width",
                },
              "framed_depth":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed depth",
                },
              "framed_diameter":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Framed diameter",
                },
              "framed_metric":
                {
                  "type": "string",
                  "description": "Metric for framed dimensions.",
                },
              "partner_id": { "type": "string" },
              "inventory":
                {
                  "type": "object",
                  "description": "Params to create inventory record",
                  "properties":
                    {
                      "count":
                        {
                          "type": "integer",
                          "format": "int32",
                          "description": "The new number of items available.",
                        },
                      "unlimited":
                        {
                          "type": "boolean",
                          "description": "Whether the inventory for this item should be treated as unlimited.",
                        },
                    },
                },
            },
          "description": "Create an artwork edition set.",
        },
      "putApiV1BankAccount":
        {
          "type": "object",
          "properties":
            {
              "account_holder_name":
                { "type": "string", "description": "Account holder name." },
            },
          "description": "Update a bank account.",
        },
      "postApiV1BankAccount":
        {
          "type": "object",
          "properties":
            {
              "external_id":
                {
                  "type": "string",
                  "description": "Payment method ID in Stripe.",
                },
              "last4": { "type": "string", "description": "Last 4." },
              "fingerprint":
                { "type": "string", "description": "Fingerprint." },
              "user_id": { "type": "string", "description": "User ID." },
              "bank_account_type":
                {
                  "type": "string",
                  "description": "Bank account type.",
                  "enum": ["us_bank_account", "sepa_debit"],
                },
              "account_holder_type":
                { "type": "string", "description": "Account holder type." },
              "account_type":
                { "type": "string", "description": "Account type." },
              "bank_name": { "type": "string", "description": "Bank name." },
              "routing_number":
                { "type": "string", "description": "Routing number." },
              "account_holder_name":
                { "type": "string", "description": "Account holder name." },
              "account_holder_email":
                { "type": "string", "description": "Account holder email." },
              "country": { "type": "string", "description": "Country." },
              "currency": { "type": "string", "description": "Currency." },
              "one_time_use":
                {
                  "type": "boolean",
                  "description": "Flag showing if this bank account was created for one time use",
                },
              "status": { "type": "string", "description": "Status." },
              "bank_code":
                { "type": "string", "description": "[SEPA only] Bank code." },
              "branch_code":
                { "type": "string", "description": "[SEPA only] Branch code." },
            },
          "required":
            [
              "external_id",
              "last4",
              "fingerprint",
              "user_id",
              "bank_account_type",
            ],
          "description": "Add a bank account.",
        },
      "putApiV1BidderPositionIdRetract":
        {
          "type": "object",
          "properties":
            {
              "reason":
                { "type": "string", "description": "Reason for retraction." },
            },
          "required": ["reason"],
          "description": "Retract a bidder position.",
        },
      "postApiV1BidderPosition":
        {
          "type": "object",
          "properties":
            {
              "sale_id": { "type": "string", "description": "Sale id." },
              "artwork_id": { "type": "string", "description": "Artwork id." },
              "max_bid_amount_cents":
                {
                  "type": "string",
                  "description": "Maximum amount to bid, in cents.",
                },
              "user_id":
                { "type": "string", "description": "User placing bid." },
              "bid_max":
                {
                  "type": "boolean",
                  "description": "Bid maximum amount immediately rather than incrementing as necessary.",
                },
            },
          "required":
            ["sale_id", "artwork_id", "max_bid_amount_cents", "user_id"],
          "description": "Place a bid with a maximum amount in cents.",
        },
      "putApiV1Bidder":
        {
          "type": "object",
          "properties":
            {
              "created_by_admin":
                {
                  "type": "boolean",
                  "description": "Whether this bidder is approved by an admin.",
                },
              "disqualified":
                {
                  "type": "boolean",
                  "description": "Whether this bidder has been disqualified by an admin.",
                },
            },
          "description": "Register to bid.",
        },
      "postApiV1Bidder":
        {
          "type": "object",
          "properties":
            {
              "sale_id": { "type": "string", "description": "Sale id." },
              "user_id":
                {
                  "type": "string",
                  "description": "User being registered (default: current user; admins only).",
                },
            },
          "required": ["sale_id"],
          "description": "Register to bid.",
        },
      "postApiV1CallbacksStripeConnect":
        {
          "type": "object",
          "properties": { "id": { "type": "string" } },
          "required": ["id"],
          "description": "Receive Connect webhooks from Stripe.",
        },
      "postApiV1CallbacksStripe":
        {
          "type": "object",
          "properties": { "id": { "type": "string" } },
          "required": ["id"],
          "description": "Receive webhooks from Stripe.",
        },
      "postApiV1CallbacksJumio":
        {
          "type": "object",
          "properties":
            {
              "merchantIdScanReference":
                {
                  "type": "string",
                  "description": "Identifier of an IdentityVerification.",
                },
              "jumioIdScanReference":
                {
                  "type": "string",
                  "description": "Jumio's own identifier for the corresponding scan reference.",
                },
            },
          "required": ["merchantIdScanReference", "jumioIdScanReference"],
          "description": "Receive and process webhooks from Jumio",
        },
      "postApiV1CallbacksGemini":
        {
          "type": "object",
          "properties":
            {
              "token": { "type": "string", "description": "Token for entry." },
              "metadata":
                {
                  "type": "string",
                  "description": "Hash of metadata, should include _type and id.",
                },
              "image_url":
                {
                  "type": "string",
                  "description": "Hash of image version and url.",
                },
              "deep_zoom":
                {
                  "type": "string",
                  "description": "Hash of deep zoom attributes (for artworks only).",
                },
              "image_geometry":
                {
                  "type": "string",
                  "description": "Hash of image geometry attributes.",
                },
              "genes":
                {
                  "type": "string",
                  "description": "Hash of visual genome (genes and values- artworks only).",
                },
              "file_size":
                {
                  "type": "string",
                  "description": "File size of generated asset.",
                },
              "blurhash":
                {
                  "type": "string",
                  "description": "Compact textual representation of a placeholder for an image.",
                },
            },
          "required": ["token", "metadata"],
          "description": "Receive webhook from Gemini Image Processing Service.",
        },
      "postApiV1CallbacksBraze":
        {
          "type": "object",
          "properties":
            {
              "external_id": { "type": "string", "description": "User id" },
              "email_subscribe":
                {
                  "type": "string",
                  "description": "Value of Braze email subscribe property.",
                },
              "email_frequency":
                {
                  "type": "string",
                  "description": "The frequency being adjusted.",
                },
            },
          "required": ["external_id", "email_subscribe", "email_frequency"],
          "description": "Webhook for receiving updates from Braze",
        },
      "putApiV1Collection":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "default": { "type": "boolean" },
              "private": { "type": "boolean" },
              "saves": { "type": "boolean" },
              "shareable_with_partners": { "type": "boolean" },
              "user_id": { "type": "string", "description": "User id." },
            },
          "required": ["user_id"],
          "description": "Update a collection.",
        },
      "postApiV1Collection":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "default": { "type": "boolean" },
              "private": { "type": "boolean" },
              "saves": { "type": "boolean" },
              "shareable_with_partners": { "type": "boolean" },
              "user_id": { "type": "string", "description": "User id." },
            },
          "required": ["user_id"],
          "description": "Create a collection.",
        },
      "postApiV1CollectionCollectionIdArtwork":
        {
          "type": "object",
          "properties":
            { "user_id": { "type": "string", "description": "User id." } },
          "required": ["user_id"],
          "description": "Add an artwork to a collection.",
        },
      "putApiV1CollectorProfile":
        {
          "type": "object",
          "properties":
            {
              "institutional_affiliations":
                {
                  "type": "string",
                  "description": "Institutional Affiliations.",
                },
              "confirmed_buyer_at":
                {
                  "type": "string",
                  "description": "Artsy confirmed buyer creation",
                },
              "collector_level":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "User Collector Level.",
                },
              "affiliated_auction_house_ids":
                {
                  "type": "array",
                  "description": "List of affiliated auction house ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "self_reported_purchases":
                {
                  "type": "string",
                  "description": "Free-form text of purchases the collector has indicated.",
                },
              "affiliated_fair_ids":
                {
                  "type": "array",
                  "description": "List of affiliated fair ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "affiliated_gallery_ids":
                {
                  "type": "array",
                  "description": "List of affiliated gallery ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "yearly_budget_min":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Yearly budget minimum.",
                },
              "yearly_budget_max":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Yearly budget maximum.",
                },
              "min_works_per_year":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minimum number of works collected per year.",
                },
              "why_buy_art":
                {
                  "type": "string",
                  "description": "Why the collector buys art.",
                },
              "been_to_auction":
                {
                  "type": "string",
                  "description": "Whether the collector has been to an art auction.",
                },
              "works_with_advisor":
                {
                  "type": "string",
                  "description": "Whether or not the collector works with an advisor.",
                },
              "linked_in":
                {
                  "type": "string",
                  "description": "Collector's LinkedIn url.",
                },
              "facebook":
                {
                  "type": "string",
                  "description": "Collector's Facebook page.",
                },
              "instagram":
                {
                  "type": "string",
                  "description": "Collector's Instagram handle.",
                },
              "twitter":
                {
                  "type": "string",
                  "description": "Collector's Twitter handle.",
                },
              "company_website":
                { "type": "string", "description": "Company website." },
              "company_name":
                { "type": "string", "description": "Company name." },
              "intents":
                {
                  "type": "array",
                  "description": "Collector Intent.",
                  "items": { "type": "string" },
                },
              "bio":
                {
                  "type": "string",
                  "description": "User bio in their own words.",
                },
              "privacy":
                {
                  "type": "string",
                  "description": "Whether or not the collector shares detailed profile information with galleries.",
                },
              "user": { "type": "string", "description": "User id." },
              "confirmed_buyer":
                { "type": "boolean", "description": "Artsy confirmed buyer." },
              "professional_buyer":
                {
                  "type": "boolean",
                  "description": "Artsy confirmed professional buyer.",
                },
            },
          "description": "Update an existing collector profile.",
        },
      "putApiV1Device":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Name for device." },
              "token": { "type": "string", "description": "Token for device." },
              "app_id":
                { "type": "string", "description": "App id for device." },
              "production":
                { "type": "boolean", "description": "App Store version?" },
              "platform":
                { "type": "string", "description": "Platform for device." },
            },
          "description": "Update an existing device.",
        },
      "postApiV1Device":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Name for device." },
              "token": { "type": "string", "description": "Token for device." },
              "app_id":
                { "type": "string", "description": "App id for device." },
              "production":
                { "type": "boolean", "description": "App Store version?" },
              "platform":
                {
                  "type": "string",
                  "description": "Platform for device.",
                  "default": "ios",
                },
            },
          "description": "Create or update a device.",
        },
      "putApiV1FairFairIdImage":
        {
          "type": "object",
          "properties":
            {
              "remote_image_url":
                {
                  "type": "string",
                  "description": "Remote URL for the image to upload.",
                },
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
              "type":
                {
                  "type": "string",
                  "description": "Which type of fair image",
                  "enum": ["mobile", "banner"],
                  "default": "banner",
                },
            },
          "description": "Modify the image on a fair.",
        },
      "postApiV1FairFairIdImage":
        {
          "type": "object",
          "properties":
            {
              "remote_image_url":
                {
                  "type": "string",
                  "description": "Remote URL for the image to upload.",
                },
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
              "type":
                {
                  "type": "string",
                  "description": "Which type of fair image",
                  "enum": ["mobile", "banner"],
                  "default": "banner",
                },
            },
          "description": "Add an image to a fair.",
        },
      "postApiV1Fair":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "published": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "about": { "type": "string" },
              "contact": { "type": "string" },
              "links": { "type": "string" },
              "location": { "type": "string" },
              "summary":
                {
                  "type": "string",
                  "description": "Short summary (275 character max)",
                },
              "medium_genes": { "type": "string" },
              "filter_genes": { "type": "string" },
              "tickets_link":
                {
                  "type": "string",
                  "description": "Markdown, containing ticket link information",
                },
              "tier": { "type": "integer", "format": "int32" },
              "layout": { "type": "string" },
              "display_vip":
                {
                  "type": "string",
                  "description": "Tells clients to display the VIP fair context",
                },
              "has_full_feature":
                {
                  "type": "string",
                  "description": "Indicates if fair has official partnership with Artsy",
                },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "organizer": { "type": "string" },
              "autopublish_artworks_at": { "type": "string" },
              "tagline": { "type": "string" },
              "hours": { "type": "string" },
              "tickets": { "type": "string" },
              "floorplan_url":
                {
                  "type": "string",
                  "description": "URL link to floorplan file",
                },
              "has_large_banner":
                {
                  "type": "string",
                  "description": "When true, banner size will be x-large no matter the tier.",
                },
              "has_homepage_section":
                {
                  "type": "string",
                  "description": "When true, eligible for a homepage rail.",
                },
              "has_listing":
                {
                  "type": "string",
                  "description": "When true, shows up in listings.",
                },
              "active_start_at": { "type": "string" },
              "kaws_collection_slugs":
                {
                  "type": "array",
                  "description": "List of slugs of associated collections from KAWS",
                  "items": { "type": "string" },
                },
              "featured_keywords":
                {
                  "type": "array",
                  "description": "Suggested filters for associated artworks.",
                  "items": { "type": "string" },
                },
            },
          "description": "Create a new fair.",
        },
      "putApiV1Fair":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "published": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "about": { "type": "string" },
              "contact": { "type": "string" },
              "links": { "type": "string" },
              "location": { "type": "string" },
              "summary":
                {
                  "type": "string",
                  "description": "Short summary (275 character max)",
                },
              "medium_genes": { "type": "string" },
              "filter_genes": { "type": "string" },
              "tickets_link":
                {
                  "type": "string",
                  "description": "Markdown, containing ticket link information",
                },
              "tier": { "type": "integer", "format": "int32" },
              "layout": { "type": "string" },
              "display_vip":
                {
                  "type": "string",
                  "description": "Tells clients to display the VIP fair context",
                },
              "has_full_feature":
                {
                  "type": "string",
                  "description": "Indicates if fair has official partnership with Artsy",
                },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "organizer": { "type": "string" },
              "autopublish_artworks_at": { "type": "string" },
              "tagline": { "type": "string" },
              "hours": { "type": "string" },
              "tickets": { "type": "string" },
              "floorplan_url":
                {
                  "type": "string",
                  "description": "URL link to floorplan file",
                },
              "has_large_banner":
                {
                  "type": "string",
                  "description": "When true, banner size will be x-large no matter the tier.",
                },
              "has_homepage_section":
                {
                  "type": "string",
                  "description": "When true, eligible for a homepage rail.",
                },
              "has_listing":
                {
                  "type": "string",
                  "description": "When true, shows up in listings.",
                },
              "active_start_at": { "type": "string" },
              "kaws_collection_slugs":
                {
                  "type": "array",
                  "description": "List of slugs of associated collections from KAWS",
                  "items": { "type": "string" },
                },
              "featured_keywords":
                {
                  "type": "array",
                  "description": "Suggested filters for associated artworks.",
                  "items": { "type": "string" },
                },
            },
          "description": "Update an existing fair.",
        },
      "putApiV1FairFairIdFairEvent":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "extended_description": { "type": "string" },
              "venue": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "fair": { "type": "string" },
              "fair_event_groups": { "type": "string" },
              "venue_address": { "type": "string" },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "caption": { "type": "string" },
            },
          "description": "Update an existing fair event.",
        },
      "postApiV1FairFairIdFairEvent":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "extended_description": { "type": "string" },
              "venue": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "fair": { "type": "string" },
              "fair_event_groups": { "type": "string" },
              "venue_address": { "type": "string" },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "caption": { "type": "string" },
            },
          "description": "Create a new fair event.",
        },
      "postApiV1FairFairIdFairEventGroup":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "fair": { "type": "string" },
            },
          "description": "Create a new fair event group.",
        },
      "putApiV1FairOrganizer":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "about": { "type": "string" },
              "website": { "type": "string" },
              "fairs":
                {
                  "type": "array",
                  "description": "Fairs to set (id's).",
                  "items": { "type": "string" },
                },
            },
          "description": "Update a fair organizer.",
        },
      "postApiV1FairOrganizer":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "about": { "type": "string" },
              "website": { "type": "string" },
              "fairs":
                {
                  "type": "array",
                  "description": "Fairs to set (id's).",
                  "items": { "type": "string" },
                },
            },
          "description": "Create a fair organizer.",
        },
      "putApiV1FeaturedLink":
        {
          "type": "object",
          "properties":
            {
              "href": { "type": "string" },
              "title": { "type": "string" },
              "subtitle": { "type": "string" },
              "display_on_mobile":
                { "type": "string", "description": "Display on mobile." },
              "display_on_desktop":
                { "type": "string", "description": "Display on desktop." },
              "display_on_martsy":
                { "type": "string", "description": "Display on martsy." },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "description": { "type": "string" },
              "source_bucket":
                {
                  "type": "string",
                  "description": "S3 bucket of an already uploaded image.",
                },
              "source_key":
                {
                  "type": "string",
                  "description": "S3 key of an already uploaded image.",
                },
            },
          "description": "Update an existing link.",
        },
      "postApiV1FeaturedLink":
        {
          "type": "object",
          "properties":
            {
              "href": { "type": "string" },
              "title": { "type": "string" },
              "subtitle": { "type": "string" },
              "display_on_mobile":
                { "type": "string", "description": "Display on mobile." },
              "display_on_desktop":
                { "type": "string", "description": "Display on desktop." },
              "display_on_martsy":
                { "type": "string", "description": "Display on martsy." },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "description": { "type": "string" },
              "source_bucket":
                {
                  "type": "string",
                  "description": "S3 bucket of an already uploaded image.",
                },
              "source_key":
                {
                  "type": "string",
                  "description": "S3 key of an already uploaded image.",
                },
            },
          "description": "Create a new link.",
        },
      "putApiV1Feature":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "active": { "type": "string" },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "subheadline": { "type": "string" },
              "callout":
                {
                  "type": "string",
                  "description": "Text that gets an emphasized UI treatment.",
                },
              "layout": { "type": "string" },
              "source_bucket":
                {
                  "type": "string",
                  "description": "S3 bucket of an already uploaded image.",
                },
              "source_key":
                {
                  "type": "string",
                  "description": "S3 key of an already uploaded image.",
                },
            },
          "description": "Update an existing feature.",
        },
      "postApiV1Feature":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "active": { "type": "string" },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
              "subheadline": { "type": "string" },
              "callout":
                {
                  "type": "string",
                  "description": "Text that gets an emphasized UI treatment.",
                },
              "layout": { "type": "string" },
              "source_bucket":
                {
                  "type": "string",
                  "description": "S3 bucket of an already uploaded image.",
                },
              "source_key":
                {
                  "type": "string",
                  "description": "S3 key of an already uploaded image.",
                },
            },
          "description": "Create a feature.",
        },
      "postApiV1Feedback":
        {
          "type": "object",
          "properties":
            {
              "message": { "type": "string" },
              "url": { "type": "string" },
              "user_name": { "type": "string" },
              "user_email": { "type": "string" },
              "email": { "type": "string" },
              "name": { "type": "string" },
            },
          "description": "Create feedback.",
        },
      "postApiV1FollowShows":
        {
          "type": "object",
          "properties":
            {
              "partner_show_id":
                {
                  "type": "string",
                  "description": "ID of the show to follow.",
                },
            },
          "required": ["partner_show_id"],
          "description": "Add a show to the list of shows a user is following",
        },
      "postApiV1GeneType":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "published": { "type": "string" },
              "genes": { "type": "string" },
              "properties": { "type": "string" },
            },
          "description": "Create a gene type.",
        },
      "putApiV1GeneType":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "published": { "type": "string" },
              "genes": { "type": "string" },
              "properties": { "type": "string" },
            },
          "description": "Updated a gene type.",
        },
      "postApiV1Gene":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "display_name":
                {
                  "type": "string",
                  "description": "User and SEO-friendly alternate display name (optional)",
                },
              "description": { "type": "string" },
              "published": { "type": "string" },
              "browseable": { "type": "string" },
              "gene_type": { "type": "string" },
              "gene_family_id": { "type": "string" },
              "additional_search_terms":
                { "type": "array", "items": { "type": "string" } },
              "automation_rules": { "type": "string" },
              "notes": { "type": "string" },
              "examples": { "type": "string" },
              "automated": { "type": "string" },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
            },
          "description": "Create a gene.",
        },
      "putApiV1Gene":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "display_name":
                {
                  "type": "string",
                  "description": "User and SEO-friendly alternate display name (optional)",
                },
              "description": { "type": "string" },
              "published": { "type": "string" },
              "browseable": { "type": "string" },
              "gene_type": { "type": "string" },
              "gene_family_id": { "type": "string" },
              "additional_search_terms":
                { "type": "array", "items": { "type": "string" } },
              "automation_rules": { "type": "string" },
              "notes": { "type": "string" },
              "examples": { "type": "string" },
              "automated": { "type": "string" },
              "gemini_token":
                {
                  "type": "string",
                  "description": "Token for image entry on Gemini.",
                },
            },
          "description": "Updated a gene.",
        },
      "putApiV1HeroUnits":
        {
          "type": "object",
          "properties":
            {
              "body":
                {
                  "type": "string",
                  "description": "Body content for Hero Unit.",
                },
              "link_text":
                { "type": "string", "description": "Link text for Hero Unit." },
              "link_url":
                { "type": "string", "description": "Link url for Hero Unit." },
              "title":
                {
                  "type": "string",
                  "description": "Title content for Hero Unit.",
                },
              "start_at":
                {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to start displaying Hero Unit.",
                },
              "end_at":
                {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to end displaying Hero Unit.",
                },
              "position":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Position for Hero Unit.",
                },
              "credit":
                {
                  "type": "string",
                  "description": "Credit content for Hero Unit.",
                },
              "label":
                {
                  "type": "string",
                  "description": "Label content for Hero Unit.",
                },
              "image_attributes":
                {
                  "type": "object",
                  "properties":
                    {
                      "image_url":
                        {
                          "type": "string",
                          "description": "Image url for Hero Unit.",
                        },
                    },
                },
            },
          "description": "Update a hero unit.",
        },
      "postApiV1HeroUnits":
        {
          "type": "object",
          "properties":
            {
              "body":
                {
                  "type": "string",
                  "description": "Body content for Hero Unit.",
                },
              "link_text":
                { "type": "string", "description": "Link text for Hero Unit." },
              "link_url":
                { "type": "string", "description": "Link url for Hero Unit." },
              "title":
                {
                  "type": "string",
                  "description": "Title content for Hero Unit.",
                },
              "start_at":
                {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to start displaying Hero Unit.",
                },
              "end_at":
                {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to end displaying Hero Unit.",
                },
              "position":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Position for Hero Unit.",
                },
              "credit":
                {
                  "type": "string",
                  "description": "Credit content for Hero Unit.",
                },
              "label":
                {
                  "type": "string",
                  "description": "Label content for Hero Unit.",
                },
              "image_attributes":
                {
                  "type": "object",
                  "properties":
                    {
                      "image_url":
                        {
                          "type": "string",
                          "description": "Image url for Hero Unit.",
                        },
                    },
                },
            },
          "required": ["body", "link_text", "link_url", "title"],
          "description": "Create a hero unit.",
        },
      "postApiV1IdentityVerificationIdOverride":
        {
          "type": "object",
          "properties":
            { "state": { "type": "string" }, "reason": { "type": "string" } },
          "required": ["state", "reason"],
          "description": "manually set the state on an identity verification",
        },
      "postApiV1IdentityVerification":
        {
          "type": "object",
          "properties":
            {
              "user_id":
                {
                  "type": "string",
                  "description": "User id of the subject of the identity verification. When no params provided, the current_user will be the subject",
                },
              "email":
                {
                  "type": "string",
                  "description": "Email of the subject of the identity verification. When no params provided, the current_user will be the subject",
                },
              "name":
                {
                  "type": "string",
                  "description": "Full name to be used with the verification. When provided, we use this instead of the name associated with the user's account",
                },
              "send_email":
                {
                  "type": "boolean",
                  "description": "Determines whether consumers of the identity verification event are asked to send an automated request email",
                  "default": true,
                },
              "sale_id":
                {
                  "type": "string",
                  "description": "The auction from which this identity verification request was initiated",
                },
              "initiator_id":
                {
                  "type": "string",
                  "description": "The ID of the user that initiated the IDV request (self or admin)",
                },
              "order_id":
                {
                  "type": "string",
                  "description": "The ID of the order that caused this IDV request to be initiated",
                },
            },
          "description": "Create an identity verification",
        },
      "putApiV1InquiryRequest":
        {
          "type": "object",
          "properties":
            {
              "message": { "type": "string" },
              "introduction": { "type": "string" },
              "note": { "type": "string" },
              "flagged": { "type": "string" },
              "contact_gallery": { "type": "string" },
              "user_reported_outcome":
                {
                  "type": "string",
                  "description": "Outcome of inquiry requested selected by the user.",
                },
              "user_reported_outcome_comment":
                {
                  "type": "string",
                  "description": "Comments by user regarding outcome of inquiry request.",
                },
              "inquiry_questions":
                { "type": "array", "items": { "type": "string" } },
              "inquiry_shipping_location": { "type": "string" },
              "user": { "type": "string", "description": "User id." },
              "outcome_token":
                {
                  "type": "string",
                  "description": "Outcome Token used for authentication coming from email",
                },
            },
          "description": "Update an existing inquiry request.",
        },
      "postApiV1InquiryRequestIdStatus":
        {
          "type": "object",
          "properties":
            { "title": { "type": "string" }, "note": { "type": "string" } },
          "description": "Add a status to an inquiry request.",
        },
      "putApiV1Invoice":
        {
          "type": "object",
          "properties":
            {
              "user_id":
                {
                  "type": "string",
                  "description": "Optional user to be associated with invoice.",
                },
              "name":
                { "type": "string", "description": "Optional recipient name." },
              "email":
                {
                  "type": "string",
                  "description": "Optional recipient email.",
                },
              "state": { "type": "string", "description": "New state." },
              "external_note":
                { "type": "string", "description": "User-visible note." },
              "internal_note":
                { "type": "string", "description": "Admin-only note." },
              "currency":
                {
                  "type": "string",
                  "description": "Currency for the invoice and line items.",
                },
            },
          "description": "Update an invoice.",
        },
      "postApiV1Invoice":
        {
          "type": "object",
          "properties":
            {
              "user_id":
                {
                  "type": "string",
                  "description": "Optional user to be associated with invoice.",
                },
              "name":
                { "type": "string", "description": "Optional recipient name." },
              "email":
                {
                  "type": "string",
                  "description": "Optional recipient email.",
                },
              "external_note":
                { "type": "string", "description": "User-visible note." },
              "internal_note":
                { "type": "string", "description": "Admin-only note." },
              "currency":
                {
                  "type": "string",
                  "description": "Currency for the invoice and line items.",
                },
            },
          "description": "Create an invoice.",
        },
      "postApiV1InvoiceInvoiceIdPayment":
        {
          "type": "object",
          "properties":
            {
              "token":
                {
                  "type": "string",
                  "description": "The invoice's secret token.",
                },
              "credit_card_id":
                {
                  "type": "string",
                  "description": "Already-saved card for user associated with invoice (required if no card token provided).",
                },
              "credit_card_token":
                {
                  "type": "string",
                  "description": "Result of card tokenization at provider (required if no card id provided).",
                },
              "amount_cents":
                { "type": "string", "description": "Amount of this payment." },
              "provider":
                {
                  "type": "string",
                  "description": "Payment provider.",
                  "enum": ["stripe"],
                },
            },
          "required": ["token", "amount_cents", "provider"],
          "description": "Add a payment.",
        },
      "putApiV1InvoiceInvoiceIdLineItem":
        {
          "type": "object",
          "properties":
            {
              "description":
                { "type": "string", "description": "Description of charge." },
              "amount_cents":
                {
                  "type": "string",
                  "description": "Line item amount in USD cents.",
                },
              "quantity":
                {
                  "type": "string",
                  "description": "Quantity, if applicable (default: 1).",
                },
              "artwork_id":
                {
                  "type": "string",
                  "description": "Artwork on which to base description/amount.",
                },
              "edition_set_id":
                {
                  "type": "string",
                  "description": "Edition set on which to base description/amount.",
                },
              "sale_artwork_id":
                {
                  "type": "string",
                  "description": "SaleArtwork (auction or traditional) on which to base description/amount.",
                },
              "internal_note":
                { "type": "string", "description": "Admin-only explanation." },
            },
          "description": "Update a line item.",
        },
      "postApiV1InvoiceInvoiceIdLineItem":
        {
          "type": "object",
          "properties":
            {
              "description":
                {
                  "type": "string",
                  "description": "Description of charge (required unless artwork provided).",
                },
              "amount_cents":
                {
                  "type": "string",
                  "description": "Line item amount in USD cents (required unless artwork provided).",
                },
              "quantity":
                {
                  "type": "string",
                  "description": "Quantity, if applicable (default: 1).",
                },
              "artwork_id":
                {
                  "type": "string",
                  "description": "Artwork on which to base description/amount.",
                },
              "edition_set_id":
                {
                  "type": "string",
                  "description": "Edition set on which to base description/amount.",
                },
              "sale_artwork_id":
                {
                  "type": "string",
                  "description": "SaleArtwork (auction or traditional) on which to base description/amount.",
                },
              "internal_note":
                { "type": "string", "description": "Admin-only explanation." },
            },
          "description": "Add a line item.",
        },
      "putApiV1MeAnonymousSession":
        {
          "type": "object",
          "properties":
            {
              "session_id": { "type": "string" },
              "email": { "type": "string", "description": "Email." },
              "name": { "type": "string", "description": "Name." },
              "profession": { "type": "string", "description": "Profession." },
              "phone": { "type": "string", "description": "Phone number." },
              "location": { "type": "string" },
              "subsequent_user_id":
                {
                  "type": "string",
                  "description": "User this session registered/authenticated as (requires authentication).",
                },
            },
          "description": "Updates an anonymous session. Uses cookied session_id if not specified.",
        },
      "postApiV1MeAnonymousSession":
        {
          "type": "object",
          "properties":
            {
              "session_id": { "type": "string" },
              "email": { "type": "string", "description": "Email." },
              "name": { "type": "string", "description": "Name." },
              "profession": { "type": "string", "description": "Profession." },
              "phone": { "type": "string", "description": "Phone number." },
              "location": { "type": "string" },
              "subsequent_user_id":
                {
                  "type": "string",
                  "description": "User this session registered/authenticated as (requires authentication).",
                },
            },
          "description": "Creates [or updates] an anonymous session.",
        },
      "putApiV1MeAlert":
        {
          "type": "object",
          "properties":
            {
              "user_alert_settings":
                {
                  "type": "object",
                  "properties":
                    {
                      "name": { "type": "string" },
                      "push": { "type": "boolean" },
                      "email": { "type": "boolean" },
                      "frequency":
                        { "type": "string", "enum": ["daily", "instant"] },
                      "details": { "type": "string" },
                    },
                },
              "attributes":
                {
                  "type": "object",
                  "properties":
                    {
                      "acquireable": { "type": "boolean" },
                      "additional_gene_ids":
                        { "type": "array", "items": { "type": "string" } },
                      "artist_ids":
                        { "type": "array", "items": { "type": "string" } },
                      "artist_series_ids":
                        { "type": "array", "items": { "type": "string" } },
                      "at_auction": { "type": "boolean" },
                      "attribution_class":
                        { "type": "array", "items": { "type": "string" } },
                      "colors":
                        { "type": "array", "items": { "type": "string" } },
                      "dimension_range": { "type": "string" },
                      "height": { "type": "string" },
                      "inquireable_only": { "type": "boolean" },
                      "keyword": { "type": "string" },
                      "location_cities":
                        { "type": "array", "items": { "type": "string" } },
                      "major_periods":
                        { "type": "array", "items": { "type": "string" } },
                      "materials_terms":
                        { "type": "array", "items": { "type": "string" } },
                      "offerable": { "type": "boolean" },
                      "partner_ids":
                        { "type": "array", "items": { "type": "string" } },
                      "price_range": { "type": "string" },
                      "sizes":
                        { "type": "array", "items": { "type": "string" } },
                      "width": { "type": "string" },
                    },
                },
            },
          "description": "Update an alert.",
        },
      "postApiV1MeAlert":
        {
          "type": "object",
          "properties":
            {
              "user_alert_settings":
                {
                  "type": "object",
                  "properties":
                    {
                      "name": { "type": "string" },
                      "push": { "type": "boolean" },
                      "email": { "type": "boolean" },
                      "frequency":
                        { "type": "string", "enum": ["daily", "instant"] },
                      "details": { "type": "string" },
                    },
                },
              "attributes":
                {
                  "type": "object",
                  "properties":
                    {
                      "acquireable": { "type": "boolean" },
                      "additional_gene_ids":
                        { "type": "array", "items": { "type": "string" } },
                      "artist_ids":
                        { "type": "array", "items": { "type": "string" } },
                      "artist_series_ids":
                        { "type": "array", "items": { "type": "string" } },
                      "at_auction": { "type": "boolean" },
                      "attribution_class":
                        { "type": "array", "items": { "type": "string" } },
                      "colors":
                        { "type": "array", "items": { "type": "string" } },
                      "dimension_range": { "type": "string" },
                      "height": { "type": "string" },
                      "inquireable_only": { "type": "boolean" },
                      "keyword": { "type": "string" },
                      "location_cities":
                        { "type": "array", "items": { "type": "string" } },
                      "major_periods":
                        { "type": "array", "items": { "type": "string" } },
                      "materials_terms":
                        { "type": "array", "items": { "type": "string" } },
                      "offerable": { "type": "boolean" },
                      "partner_ids":
                        { "type": "array", "items": { "type": "string" } },
                      "price_range": { "type": "string" },
                      "sizes":
                        { "type": "array", "items": { "type": "string" } },
                      "width": { "type": "string" },
                    },
                  "required": ["artist_ids"],
                },
            },
          "required": ["attributes"],
          "description": "Create an alert.",
        },
      "putApiV1MeArtworkInquiryRequestIdSend":
        {
          "type": "object",
          "properties":
            {
              "session_id":
                {
                  "type": "string",
                  "description": "Client's key for anonymous session.",
                },
            },
          "description": "Send a delayed inquiry request.",
        },
      "putApiV1MeArtworkInquiryRequest":
        {
          "type": "object",
          "properties":
            {
              "message":
                { "type": "string", "description": "Optional message." },
              "contact_gallery":
                {
                  "type": "string",
                  "description": "Bool for whether to contact the gallery on create.",
                },
              "session_id":
                {
                  "type": "string",
                  "description": "External session id to track logged out actions.",
                },
            },
          "description": "Update an existing inquiry request.",
        },
      "postApiV1MeArtworkInquiryRequest":
        {
          "type": "object",
          "properties":
            {
              "artwork": { "type": "string", "description": "Artwork id." },
              "anonymous_session_id":
                { "type": "string", "description": "Anonymous session id." },
              "name":
                {
                  "type": "string",
                  "description": "User name for inquiries without an associated user.",
                },
              "email":
                {
                  "type": "string",
                  "description": "User email for inquiries without an associated user.",
                },
              "message":
                { "type": "string", "description": "Optional message." },
              "introduction":
                { "type": "string", "description": "Optional introduction." },
              "contact_gallery":
                {
                  "type": "boolean",
                  "description": "Bool for whether to contact the gallery on create.",
                },
              "referring_url":
                {
                  "type": "string",
                  "description": "Last place user was before landing in Artsy.",
                },
              "landing_url":
                {
                  "type": "string",
                  "description": "First place user landed in Artsy.",
                },
              "inquiry_url":
                {
                  "type": "string",
                  "description": "URL used to generate the inquiry (sometimes we encode things in the query params).",
                },
              "session_id":
                {
                  "type": "string",
                  "description": "External session id to track logged out actions.",
                },
              "notification_delay":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of seconds to delay the sending of the inquiry. Default is no delay.",
                },
              "inquiry_questions":
                {
                  "type": "array",
                  "items":
                    {
                      "type": "string",
                      "enum":
                        [
                          "price_and_availability",
                          "shipping_quote",
                          "condition_and_provenance",
                          "similar_work",
                          "artist_information",
                          "artwork_information",
                        ],
                    },
                },
              "inquiry_shipping_location": { "type": "object" },
              "order_id": { "type": "string" },
            },
          "required": ["artwork"],
          "description": "Create an artwork inquiry request.",
        },
      "postApiV1MeTriggerCampaign":
        {
          "type": "object",
          "properties":
            {
              "campaign_id":
                { "type": "string", "description": "Campaign id." },
            },
          "required": ["campaign_id"],
          "description": "Trigger a campaign send.",
        },
      "postApiV1MeRecentlyViewedArtworks":
        {
          "type": "object",
          "properties":
            { "artwork_id": { "type": "string", "description": "Artwork id" } },
          "required": ["artwork_id"],
          "description": "Record a recently viewed artwork.",
        },
      "putApiV1MeUserFlags":
        {
          "type": "object",
          "properties":
            {
              "key":
                {
                  "type": "string",
                  "description": "Label of user flag to set/unset.",
                },
              "value":
                {
                  "type": "string",
                  "description": "New user flag value. If empty, unsets flag.",
                },
            },
          "required": ["key"],
          "description": "Set (or unset) user flag.",
        },
      "putApiV1MePassword":
        {
          "type": "object",
          "properties":
            {
              "current_password":
                { "type": "string", "description": "Current password." },
              "new_password":
                { "type": "string", "description": "New password." },
              "password_confirmation":
                {
                  "type": "string",
                  "description": "New password confirmation.",
                },
            },
          "required": ["current_password", "new_password"],
          "description": "Change current user password.",
        },
      "putApiV1Me":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Name." },
              "display_follow_tooltip": { "type": "string" },
              "display_filter_tooltip": { "type": "string" },
              "display_inquiry_tooltip": { "type": "string" },
              "display_favorites_dialog": { "type": "string" },
              "phone": { "type": "string", "description": "Phone number." },
              "phone_number":
                { "type": "string", "description": "Normalized phone number." },
              "phone_country_code":
                {
                  "type": "string",
                  "description": "ISO 3166 country code for phone number.",
                },
              "gender": { "type": "string", "description": "Gender." },
              "price_range_min": { "type": "integer", "format": "int32" },
              "price_range_max": { "type": "integer", "format": "int32" },
              "artworks_per_year":
                {
                  "type": "string",
                  "description": "Number of artworks purchased per year.",
                },
              "is_collector":
                { "type": "string", "description": "Is a collector?" },
              "industry":
                {
                  "type": "string",
                  "description": "Works in the art industry?",
                },
              "profession": { "type": "string", "description": "Profession." },
              "notes":
                {
                  "type": "string",
                  "description": "Additional personal notes.",
                },
              "share_follows":
                {
                  "type": "string",
                  "description": "Shares FollowArtists, FollowGenes, and FollowProfiles with partners.",
                },
              "receive_purchase_notification":
                {
                  "type": "string",
                  "description": "Receive purchase notifications.",
                },
              "receive_outbid_notification":
                {
                  "type": "string",
                  "description": "Receive outbid auctions notifications.",
                },
              "receive_lot_opening_soon_notification":
                {
                  "type": "string",
                  "description": "Receive lot opening auctions notifications.",
                },
              "receive_sale_opening_closing_notification":
                {
                  "type": "string",
                  "description": "Receive auction starting/ending notifications.",
                },
              "receive_new_works_notification":
                {
                  "type": "string",
                  "description": "Receive new works notifications.",
                },
              "receive_new_sales_notification":
                {
                  "type": "string",
                  "description": "Receive new sales notifications.",
                },
              "receive_promotion_notification":
                {
                  "type": "string",
                  "description": "Receive promotional notifications.",
                },
              "receive_order_notification":
                {
                  "type": "string",
                  "description": "Receive order notifications.",
                },
              "receive_viewing_room_notification":
                {
                  "type": "string",
                  "description": "Receive viewing room notifications.",
                },
              "receive_partner_show_notification":
                {
                  "type": "string",
                  "description": "Receive partner show notifications.",
                },
              "receive_partner_offer_notification":
                {
                  "type": "string",
                  "description": "Receive partner offer notifications.",
                },
              "email": { "type": "string", "description": "Email." },
              "email_frequency":
                {
                  "type": "string",
                  "description": "Frequency of marketing emails.",
                },
              "location": { "type": "string" },
              "collector_since": { "type": "string" },
              "publish_to_facebook":
                {
                  "type": "string",
                  "description": "Automatically publish saved artworks and followed artists to Facebook.",
                },
              "is_representative": { "type": "string" },
              "is_available_representative":
                {
                  "type": "string",
                  "description": "Is the admin available to be contacted about inquiries.",
                },
              "data_transfer_opt_out": { "type": "string" },
              "currency_preference":
                { "type": "string", "description": "Preferred currency." },
              "length_unit_preference":
                {
                  "type": "string",
                  "description": "Preferred length unit preference.",
                },
              "password":
                {
                  "type": "string",
                  "description": "Required to change email address.",
                },
              "collector_level":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Collector Level of user.",
                },
              "bio": { "type": "string", "description": "User bio." },
              "accepted_terms_of_service":
                {
                  "type": "boolean",
                  "description": "If true, user has accepted terms of use and privacy policy",
                },
              "agreed_to_receive_emails":
                {
                  "type": "boolean",
                  "description": "If true, user has agreed to receive emails from Artsy",
                },
              "completed_onboarding":
                {
                  "type": "boolean",
                  "description": "If true, set timestamp of when user completed onboarding",
                },
              "prompted_for_update":
                {
                  "type": "boolean",
                  "description": "When true, will set last_update_prompt_at.",
                },
            },
          "description": "Update user info.",
        },
      "postApiV1MeToken":
        {
          "type": "object",
          "properties":
            {
              "client_application_id":
                {
                  "type": "string",
                  "description": "ID of client application to get a JWT for.",
                },
            },
          "required": ["client_application_id"],
          "description": "Get a token for a client app.",
        },
      "postApiV1MeAuthentications":
        {
          "type": "object",
          "properties":
            {
              "oauth_token":
                { "type": "string", "description": "An OAuth token." },
              "apple_uid":
                {
                  "type": "string",
                  "description": "An apple unique user id, used for apple authentication.",
                },
              "id_token":
                {
                  "type": "string",
                  "description": "JWT used for apple authentication.",
                },
              "name":
                {
                  "type": "string",
                  "description": "User name, only used for apple authentication.",
                },
              "email":
                {
                  "type": "string",
                  "description": "User email, only used for apple authentication.",
                },
            },
          "required": ["oauth_token", "apple_uid"],
          "description": "Link a 3rd party account.",
        },
      "postApiV1MeBidderPosition":
        {
          "type": "object",
          "properties":
            {
              "sale_id": { "type": "string", "description": "Sale id." },
              "artwork_id": { "type": "string", "description": "Artwork id." },
              "max_bid_amount_cents":
                {
                  "type": "string",
                  "description": "Maximum amount to bid, in cents.",
                },
              "bid_max":
                {
                  "type": "string",
                  "description": "Bid maximum amount immediately rather than incrementing as necessary.",
                },
            },
          "required": ["sale_id", "artwork_id", "max_bid_amount_cents"],
          "description": "Place a bid with a maximum amount in cents.",
        },
      "putApiV1MeCollections":
        {
          "type": "object",
          "properties":
            {
              "attributes":
                {
                  "type": "array",
                  "items":
                    {
                      "type": "object",
                      "properties":
                        {
                          "id": { "type": "string" },
                          "shareable_with_partners": { "type": "boolean" },
                        },
                      "required": ["id", "shareable_with_partners"],
                    },
                },
            },
          "required": ["attributes"],
          "description": "Batch update Collections.",
        },
      "putApiV1MeCollectorProfileIcon":
        {
          "type": "object",
          "properties":
            {
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
              "remote_image_url":
                { "type": "string", "description": "icon image." },
              "source_bucket":
                { "type": "string", "description": "source bucket." },
              "source_key": { "type": "string", "description": "source key." },
            },
          "description": "Change user icon.",
        },
      "putApiV1MeCollectorProfile":
        {
          "type": "object",
          "properties":
            {
              "institutional_affiliations":
                {
                  "type": "string",
                  "description": "Institutional Affiliations.",
                },
              "confirmed_buyer_at":
                {
                  "type": "string",
                  "description": "Artsy confirmed buyer creation",
                },
              "collector_level":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "User Collector Level.",
                },
              "affiliated_auction_house_ids":
                {
                  "type": "array",
                  "description": "List of affiliated auction house ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "self_reported_purchases":
                {
                  "type": "string",
                  "description": "Free-form text of purchases the collector has indicated.",
                },
              "affiliated_fair_ids":
                {
                  "type": "array",
                  "description": "List of affiliated fair ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "affiliated_gallery_ids":
                {
                  "type": "array",
                  "description": "List of affiliated gallery ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "yearly_budget_min":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Yearly budget minimum.",
                },
              "yearly_budget_max":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Yearly budget maximum.",
                },
              "min_works_per_year":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minimum number of works collected per year.",
                },
              "why_buy_art":
                {
                  "type": "string",
                  "description": "Why the collector buys art.",
                },
              "been_to_auction":
                {
                  "type": "string",
                  "description": "Whether the collector has been to an art auction.",
                },
              "works_with_advisor":
                {
                  "type": "string",
                  "description": "Whether or not the collector works with an advisor.",
                },
              "linked_in":
                {
                  "type": "string",
                  "description": "Collector's LinkedIn url.",
                },
              "facebook":
                {
                  "type": "string",
                  "description": "Collector's Facebook page.",
                },
              "instagram":
                {
                  "type": "string",
                  "description": "Collector's Instagram handle.",
                },
              "twitter":
                {
                  "type": "string",
                  "description": "Collector's Twitter handle.",
                },
              "company_website":
                { "type": "string", "description": "Company website." },
              "company_name":
                { "type": "string", "description": "Company name." },
              "intents":
                {
                  "type": "array",
                  "description": "What is the collector's intent.",
                  "items": { "type": "string" },
                },
              "bio":
                {
                  "type": "string",
                  "description": "User bio in their own words.",
                },
              "privacy":
                {
                  "type": "string",
                  "description": "Whether or not the collector shares detailed profile information with galleries.",
                },
              "professional_buyer":
                {
                  "type": "boolean",
                  "description": "When true, will set professional_buyer_applied_at.",
                },
              "loyalty_applicant":
                {
                  "type": "boolean",
                  "description": "When true, will set loyalty_applicant_at.",
                },
              "session_id":
                {
                  "type": "string",
                  "description": "Session id associated with the anonymous session.",
                },
              "prompted_for_update":
                {
                  "type": "boolean",
                  "description": "When true, will set last_update_prompt_at.",
                },
            },
          "description": "Update an existing collector profile for the current user or an anonymous session.",
        },
      "postApiV1MeCollectorProfile":
        {
          "type": "object",
          "properties":
            {
              "institutional_affiliations":
                {
                  "type": "string",
                  "description": "Institutional Affiliations.",
                },
              "confirmed_buyer_at":
                {
                  "type": "string",
                  "description": "Artsy confirmed buyer creation",
                },
              "collector_level":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "User Collector Level.",
                },
              "affiliated_auction_house_ids":
                {
                  "type": "array",
                  "description": "List of affiliated auction house ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "self_reported_purchases":
                {
                  "type": "string",
                  "description": "Free-form text of purchases the collector has indicated.",
                },
              "affiliated_fair_ids":
                {
                  "type": "array",
                  "description": "List of affiliated fair ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "affiliated_gallery_ids":
                {
                  "type": "array",
                  "description": "List of affiliated gallery ids, referencing Galaxy.",
                  "items": { "type": "string" },
                },
              "yearly_budget_min":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Yearly budget minimum.",
                },
              "yearly_budget_max":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Yearly budget maximum.",
                },
              "min_works_per_year":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minimum number of works collected per year.",
                },
              "why_buy_art":
                {
                  "type": "string",
                  "description": "Why the collector buys art.",
                },
              "been_to_auction":
                {
                  "type": "string",
                  "description": "Whether the collector has been to an art auction.",
                },
              "works_with_advisor":
                {
                  "type": "string",
                  "description": "Whether or not the collector works with an advisor.",
                },
              "linked_in":
                {
                  "type": "string",
                  "description": "Collector's LinkedIn url.",
                },
              "facebook":
                {
                  "type": "string",
                  "description": "Collector's Facebook page.",
                },
              "instagram":
                {
                  "type": "string",
                  "description": "Collector's Instagram handle.",
                },
              "twitter":
                {
                  "type": "string",
                  "description": "Collector's Twitter handle.",
                },
              "company_website":
                { "type": "string", "description": "Company website." },
              "company_name":
                { "type": "string", "description": "Company name." },
              "intents":
                {
                  "type": "array",
                  "description": "What is the collector's intent.",
                  "items": { "type": "string" },
                },
              "bio":
                {
                  "type": "string",
                  "description": "User bio in their own words.",
                },
              "privacy":
                {
                  "type": "string",
                  "description": "Whether or not the collector shares detailed profile information with galleries.",
                },
              "professional_buyer":
                {
                  "type": "boolean",
                  "description": "When true, will set professional_buyer_applied_at.",
                },
              "loyalty_applicant":
                {
                  "type": "boolean",
                  "description": "When true, will set loyalty_applicant_at.",
                },
              "session_id":
                {
                  "type": "string",
                  "description": "Session id associated with the anonymous session.",
                },
            },
          "description": "Create a new collector profile for the current user or an anonymous session.",
        },
      "putApiV1MeCollectorProfileCollectorReference":
        {
          "type": "object",
          "properties":
            {
              "anonymous_session_id":
                { "type": "string", "description": "Anonymous session id" },
              "session_id":
                {
                  "type": "string",
                  "description": "Session id associated with the anonymous session.",
                },
              "email": { "type": "string", "description": "Email." },
              "contact_name":
                { "type": "string", "description": "Contact name." },
              "organization":
                {
                  "type": "string",
                  "description": "Name of the organization.",
                },
              "address":
                {
                  "type": "string",
                  "description": "Address of the organization.",
                },
              "phone": { "type": "string", "description": "Phone number." },
              "reference_type":
                {
                  "type": "string",
                  "description": "Art advisor or reference gallery.",
                },
            },
          "description": "Update a collector reference.",
        },
      "postApiV1MeCollectorProfileCollectorReference":
        {
          "type": "object",
          "properties":
            {
              "anonymous_session_id":
                { "type": "string", "description": "Anonymous session id" },
              "session_id":
                {
                  "type": "string",
                  "description": "Session id associated with the anonymous session.",
                },
              "email": { "type": "string", "description": "Email." },
              "contact_name":
                { "type": "string", "description": "Contact name." },
              "organization":
                {
                  "type": "string",
                  "description": "Name of the organization.",
                },
              "address":
                {
                  "type": "string",
                  "description": "Address of the organization.",
                },
              "phone": { "type": "string", "description": "Phone number." },
              "reference_type":
                {
                  "type": "string",
                  "description": "Art advisor or reference gallery.",
                },
            },
          "description": "Create a collector reference.",
        },
      "postApiV1MeCreditCards":
        {
          "type": "object",
          "properties":
            {
              "token":
                {
                  "type": "string",
                  "description": "Tokenized card value (from 3rd party payment provider).",
                },
              "provider":
                {
                  "type": "string",
                  "description": "Payment provider that tokenized card.",
                  "enum": ["stripe"],
                  "default": "stripe",
                },
              "session_id":
                {
                  "type": "string",
                  "description": "External session id to track logged out actions.",
                },
              "created_by_trusted_client":
                {
                  "type": "boolean",
                  "description": "True if swiped via kiosk, must be sent with a matching application.",
                },
              "one_time_use":
                {
                  "type": "boolean",
                  "description": "Flag showing if this card was created for one time use",
                },
            },
          "required": ["token", "provider"],
          "description": "Add a credit card.",
        },
      "putApiV1MeFollowArtist":
        {
          "type": "object",
          "properties":
            { "notes": { "type": "string", "description": "User notes." } },
          "description": "Update a followed artist reference.",
        },
      "postApiV1MeFollowArtist":
        {
          "type": "object",
          "properties":
            {
              "artist_id": { "type": "string", "description": "Artist id." },
              "notes": { "type": "string", "description": "User notes." },
            },
          "required": ["artist_id"],
          "description": "Follow an artist.",
        },
      "putApiV1MeFollowGene":
        {
          "type": "object",
          "properties":
            { "notes": { "type": "string", "description": "User notes." } },
          "description": "Update a followed gene reference.",
        },
      "postApiV1MeFollowGene":
        {
          "type": "object",
          "properties":
            {
              "gene_id": { "type": "string", "description": "Gene id." },
              "notes": { "type": "string", "description": "User notes." },
            },
          "required": ["gene_id"],
          "description": "Follow a gene.",
        },
      "postApiV1MeFollowProfiles":
        {
          "type": "object",
          "properties":
            {
              "profile_id":
                {
                  "type": "array",
                  "description": "Profile ids.",
                  "items": { "type": "string" },
                },
              "auto":
                {
                  "type": "string",
                  "description": "Whether these follows were machine-assisted.",
                },
            },
          "required": ["profile_id"],
          "description": "Follow 1 or more profiles.",
        },
      "postApiV1MeFollowProfile":
        {
          "type": "object",
          "properties":
            {
              "profile_id": { "type": "string", "description": "Profile id." },
              "auto":
                {
                  "type": "boolean",
                  "description": "Whether this follow was machine-assisted.",
                },
            },
          "required": ["profile_id"],
          "description": "Follow a profile.",
        },
      "postApiV1MeInquiryIntroduction":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Optional name." },
              "profession":
                { "type": "string", "description": "Optional profession." },
              "location":
                {
                  "type": "object",
                  "description": "Optional location object.",
                },
              "collector_level":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional collector level.",
                },
              "collection":
                {
                  "type": "array",
                  "description": "Optional set of artist names.",
                  "items": { "type": "string" },
                },
              "attending":
                { "type": "string", "description": "Optional name of fair." },
            },
          "description": "Generate gallery introduction based on params.",
        },
      "putApiV1MeInquiryRequestIdSend":
        {
          "type": "object",
          "properties":
            {
              "session_id":
                {
                  "type": "string",
                  "description": "External session id to track logged out actions.",
                },
            },
          "description": "Send a delayed inquiry request.",
        },
      "putApiV1MeInquiryRequest":
        {
          "type": "object",
          "properties":
            {
              "message":
                { "type": "string", "description": "Optional message." },
              "contact_gallery":
                {
                  "type": "string",
                  "description": "Whether to contact the gallery on create.",
                },
              "session_id":
                {
                  "type": "string",
                  "description": "External session id to track logged out actions.",
                },
            },
          "description": "Update an existing inquiry request.",
        },
      "postApiV1MeInquiryRequest":
        {
          "type": "object",
          "properties":
            {
              "anonymous_session_id":
                { "type": "string", "description": "Anonymous session id." },
              "name":
                {
                  "type": "string",
                  "description": "User name for inquiries without an associated user.",
                },
              "email":
                {
                  "type": "string",
                  "description": "User email for inquiries without an associated user.",
                },
              "inquireable_id":
                { "type": "string", "description": "Inquireable id." },
              "inquireable_type":
                { "type": "string", "description": "Inquireable type." },
              "message":
                { "type": "string", "description": "Optional message." },
              "contact_gallery":
                {
                  "type": "boolean",
                  "description": "Whether to contact the gallery on create.",
                },
              "referring_url":
                {
                  "type": "string",
                  "description": "Last place user was before landing in Artsy.",
                },
              "landing_url":
                {
                  "type": "string",
                  "description": "First place user landed in Artsy.",
                },
              "inquiry_url":
                {
                  "type": "string",
                  "description": "URL used to generate the inquiry (sometimes we encode things in the query params).",
                },
              "session_id":
                {
                  "type": "string",
                  "description": "External session id to track logged out actions.",
                },
              "notification_delay":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of seconds to delay the sending of the inquiry. Default is no delay.",
                },
            },
          "required": ["inquireable_id", "inquireable_type"],
          "description": "Create an inquiry request.",
        },
      "putApiV1MeNotificationsMarkAsSeen":
        {
          "type": "object",
          "properties":
            {
              "seen_at":
                {
                  "type": "string",
                  "format": "date-time",
                  "description": "Mark notifications as seen until this moment",
                },
            },
          "required": ["seen_at"],
          "description": "Mark notifications feed as seen",
        },
      "putApiV1MeNotifications":
        {
          "type": "object",
          "properties":
            {
              "ids":
                {
                  "type": "array",
                  "description": "Notification IDs. If nothing is passed - all user's notifications will be updated",
                  "items": { "type": "string" },
                },
              "status":
                {
                  "type": "string",
                  "description": "e.g. read status",
                  "enum": ["read", "viewed", "unread"],
                },
            },
          "description": "Mark a user's notifications read",
        },
      "postApiV1MeRequestPriceEstimate":
        {
          "type": "object",
          "properties":
            {
              "artwork_id": { "type": "string", "description": "Artwork Id." },
              "requester_name":
                { "type": "string", "description": "Requester's name." },
              "requester_email":
                { "type": "string", "description": "Requester's email." },
              "requester_phone_number":
                {
                  "type": "string",
                  "description": "Requester's Phone Number.",
                },
            },
          "required": ["artwork_id"],
          "description": "Request Price Estimate from the Artsy Specialist (does not fail if request has already been made)",
        },
      "putApiV1MeSecondFactorsIdEnable":
        {
          "type": "object",
          "properties":
            {
              "password": { "type": "string" },
              "code": { "type": "string", "description": "OTP code." },
            },
          "required": ["password", "code"],
          "description": "Enable a disabled second factor",
        },
      "putApiV1MeSecondFactors":
        {
          "type": "object",
          "properties":
            {
              "kind":
                {
                  "type": "string",
                  "description": "Second factor kind.",
                  "enum": ["app", "sms"],
                },
              "attributes":
                {
                  "type": "object",
                  "properties":
                    {
                      "phone_number":
                        {
                          "type": "string",
                          "description": "Only for SMS second factors.",
                        },
                      "country_code":
                        {
                          "type": "string",
                          "description": "Only for SMS second factors.",
                        },
                      "name":
                        {
                          "type": "string",
                          "description": "Only for app second factors",
                        },
                    },
                },
            },
          "required": ["kind"],
          "description": "Update a disabled app or SMS second factor",
        },
      "postApiV1MeSecondFactors":
        {
          "type": "object",
          "properties":
            {
              "kind":
                {
                  "type": "string",
                  "description": "Second factor kind.",
                  "enum": ["app", "backup", "sms"],
                },
              "attributes":
                {
                  "type": "object",
                  "properties":
                    {
                      "phone_number":
                        {
                          "type": "string",
                          "description": "Only for SMS second factors.",
                        },
                      "country_code":
                        {
                          "type": "string",
                          "description": "Only for SMS second factors.",
                        },
                      "name":
                        {
                          "type": "string",
                          "description": "Only for app second factors",
                        },
                    },
                },
              "password": { "type": "string" },
            },
          "required": ["kind", "password"],
          "description": "Create a new app/sms second factor, or re-generate backups.",
        },
      "postApiV1MeUserFairAction":
        {
          "type": "object",
          "properties":
            {
              "fair_id": { "type": "string", "description": "Fair id" },
              "action":
                {
                  "type": "string",
                  "description": 'Action (one of ["Fair Partner Marketing", "Invitee", "Attendee", "General Admission", "Limited Access VIP", "All Access VIP"])',
                },
              "anonymous_session_id":
                { "type": "string", "description": "Anonymous session id" },
              "session_id":
                {
                  "type": "string",
                  "description": "Session id associated with the anonymous session.",
                },
            },
          "required": ["fair_id", "action"],
          "description": "Create a user fair action for the current user or an anonymous session.",
        },
      "putApiV1MeUserInterest":
        {
          "type": "object",
          "properties":
            {
              "body": { "type": "string" },
              "category":
                { "type": "string", "description": "UserInterest category" },
              "private":
                {
                  "type": "boolean",
                  "description": "Privacy setting to hide from partners.",
                },
              "anonymous_session_id":
                { "type": "string", "description": "Anonymous session id" },
              "session_id":
                {
                  "type": "string",
                  "description": "Session id associated with the anonymous session.",
                },
            },
          "description": "Update a bookmarked interest reference.",
        },
      "postApiV1MeUserInterest":
        {
          "type": "object",
          "properties":
            {
              "interest_id":
                { "type": "string", "description": "interest id." },
              "interest_type": { "type": "string", "enum": ["Artist", "Gene"] },
              "category":
                { "type": "string", "description": "UserInterest category" },
              "body":
                { "type": "string", "description": "Optional body for note" },
              "private":
                {
                  "type": "boolean",
                  "description": "Privacy setting to hide from partners.",
                },
              "anonymous_session_id":
                { "type": "string", "description": "Anonymous session id" },
              "session_id":
                {
                  "type": "string",
                  "description": "Session id associated with the anonymous session.",
                },
            },
          "required": ["interest_id", "interest_type", "category"],
          "description": "Bookmark an interest.",
        },
      "postApiV1MerchantAccount":
        {
          "type": "object",
          "properties":
            {
              "partner_id": { "type": "string", "description": "Partner Id." },
              "external_id":
                {
                  "type": "string",
                  "description": "External id of the merchant account.",
                },
              "properties":
                {
                  "type": "json",
                  "description": "Properties of the merchant account.",
                },
            },
          "required": ["partner_id", "external_id"],
          "description": "Create or reactivate a merchant account for a partner.",
        },
      "postApiV1NotificationPreferences":
        {
          "type": "object",
          "properties":
            {
              "authentication_token":
                { "type": "string", "description": "Auth token." },
              "subscription_groups":
                {
                  "type": "json",
                  "description": "An object with group keys and statuses.",
                },
            },
          "required": ["subscription_groups"],
          "description": "Update notification preferences.",
        },
      "putApiV1Page":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Page name." },
              "content": { "type": "string", "description": "Page content." },
              "published":
                { "type": "boolean", "description": "Page published." },
              "description":
                { "type": "string", "description": "Page description." },
              "href": { "type": "string", "description": "Page href." },
              "visible_to_public":
                { "type": "boolean", "description": "Page visible to public." },
              "featured_names":
                {
                  "type": "array",
                  "description": "Page featured names.",
                  "items": { "type": "string" },
                },
            },
          "description": "Update an existing page.",
        },
      "postApiV1Page":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Page name." },
              "content": { "type": "string", "description": "Page content." },
              "published":
                { "type": "boolean", "description": "Page published." },
              "description":
                { "type": "string", "description": "Page description." },
              "href": { "type": "string", "description": "Page href." },
              "visible_to_public":
                { "type": "boolean", "description": "Page visible to public." },
              "featured_names":
                {
                  "type": "array",
                  "description": "Page featured names.",
                  "items": { "type": "string" },
                },
            },
          "description": "Create a page.",
        },
      "postApiV1PartnerIdShow":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "press_release": { "type": "string" },
              "press_release_url":
                {
                  "type": "string",
                  "description": "Link to the press release for this show",
                },
              "partner_location": { "type": "string" },
              "fair": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "all_day": { "type": "string" },
              "fair_location": { "type": "string" },
              "featured": { "type": "string" },
              "batch_publish": { "type": "string" },
              "display_on_partner_profile": { "type": "string" },
              "artist_ids":
                {
                  "type": "array",
                  "description": "List of artist ID's without associated artworks.",
                  "items": { "type": "string" },
                },
              "eligible_artwork_artist_ids":
                {
                  "type": "array",
                  "description": "List of artist ID's with associated eligible (published) artworks (may not be not 100% accurate).",
                  "items": { "type": "string" },
                },
              "galaxy_partner_id":
                {
                  "type": "string",
                  "description": "Galaxy Id (if this show belongs to a galaxy partner).",
                },
              "partner_city":
                {
                  "type": "string",
                  "description": "City the show is in, can be used as a fallback if no location (or for ref. shows).",
                },
              "group":
                {
                  "type": "string",
                  "description": "Whether the show is a group show or not, can be explicitly set.",
                },
              "sortable_name":
                {
                  "type": "string",
                  "description": "Downcased version of the show name to allow for correct alphabetical sort",
                },
              "discovery_blocked_reason":
                {
                  "type": "string",
                  "description": "The reason this show was blocked from discovery.",
                },
              "duplicate_of_id": { "type": "string" },
              "viewing_room_ids":
                {
                  "type": "array",
                  "description": "If set, the ids of linked `ViewingRoom`s.",
                  "items": { "type": "string" },
                },
            },
          "description": "Create a new partner show.",
        },
      "putApiV1PartnerPartnerIdShow":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "press_release": { "type": "string" },
              "press_release_url":
                {
                  "type": "string",
                  "description": "Link to the press release for this show",
                },
              "partner_location": { "type": "string" },
              "fair": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "all_day": { "type": "string" },
              "fair_location": { "type": "string" },
              "featured": { "type": "string" },
              "batch_publish": { "type": "string" },
              "display_on_partner_profile": { "type": "string" },
              "artist_ids":
                {
                  "type": "array",
                  "description": "List of artist ID's without associated artworks.",
                  "items": { "type": "string" },
                },
              "eligible_artwork_artist_ids":
                {
                  "type": "array",
                  "description": "List of artist ID's with associated eligible (published) artworks (may not be not 100% accurate).",
                  "items": { "type": "string" },
                },
              "galaxy_partner_id":
                {
                  "type": "string",
                  "description": "Galaxy Id (if this show belongs to a galaxy partner).",
                },
              "partner_city":
                {
                  "type": "string",
                  "description": "City the show is in, can be used as a fallback if no location (or for ref. shows).",
                },
              "group":
                {
                  "type": "string",
                  "description": "Whether the show is a group show or not, can be explicitly set.",
                },
              "sortable_name":
                {
                  "type": "string",
                  "description": "Downcased version of the show name to allow for correct alphabetical sort",
                },
              "discovery_blocked_reason":
                {
                  "type": "string",
                  "description": "Reason for blocking this show from local discovery. Passing nil will enable it for discovery again.",
                },
              "duplicate_of_id":
                {
                  "type": "string",
                  "description": 'When discovery_blocked_reason is "duplicate" we require the ID of the show it duplicates.',
                },
              "viewing_room_ids":
                {
                  "type": "array",
                  "description": "If set, the ids of linked `ViewingRoom`s.",
                  "items": { "type": "string" },
                },
            },
          "required": ["duplicate_of_id"],
          "description": "Update an existing partner show.",
        },
      "putApiV1PartnerPartnerIdShowShowIdDocument":
        {
          "type": "object",
          "properties":
            {
              "remote_document_url":
                {
                  "type": "string",
                  "description": "Publicly-accessible URL of document.",
                },
              "title":
                {
                  "type": "string",
                  "description": "Partner updatable label for the document.",
                },
              "partner_show": { "type": "string" },
            },
          "description": "Update a partner show document.",
        },
      "postApiV1PartnerPartnerIdShowShowIdDocument":
        {
          "type": "object",
          "properties":
            {
              "title":
                {
                  "type": "string",
                  "description": "Partner updatable label for the document.",
                },
              "partner_show": { "type": "string" },
              "remote_document_url":
                { "type": "string", "description": "Remote document url." },
            },
          "required": ["remote_document_url"],
          "description": "Create a partner show document.",
        },
      "putApiV1PartnerPartnerIdShowPartnerShowIdArtwork":
        {
          "type": "object",
          "properties":
            {
              "position":
                { "type": "string", "description": "Artwork position." },
            },
          "description": "Update an artwork within a partner show.",
        },
      "postApiV1PartnerPartnerIdShowPartnerShowIdArtwork":
        {
          "type": "object",
          "properties":
            {
              "position":
                { "type": "string", "description": "Artwork position." },
            },
          "description": "Add an artwork to a partner show.",
        },
      "postApiV1PartnerIdLocation":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "address": { "type": "string" },
              "address_2": { "type": "string" },
              "city": { "type": "string" },
              "state": { "type": "string" },
              "postal_code": { "type": "string" },
              "country": { "type": "string" },
              "coordinates":
                {
                  "type": "string",
                  "description": "Geo-location, in [lng, lat] order",
                },
              "day_schedule_text":
                {
                  "type": "string",
                  "description": "Markdown text specifying operating hours",
                },
              "phone": { "type": "string" },
              "position": { "type": "string" },
              "email": { "type": "string" },
              "fax": { "type": "string" },
              "publicly_viewable": { "type": "string" },
              "address_type": { "type": "string" },
              "partner_id": { "type": "string" },
            },
          "description": "Create a new partner location.",
        },
      "putApiV1PartnerPartnerIdLocation":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "address": { "type": "string" },
              "address_2": { "type": "string" },
              "city": { "type": "string" },
              "state": { "type": "string" },
              "postal_code": { "type": "string" },
              "country": { "type": "string" },
              "coordinates":
                {
                  "type": "string",
                  "description": "Geo-location, in [lng, lat] order",
                },
              "day_schedule_text":
                {
                  "type": "string",
                  "description": "Markdown text specifying operating hours",
                },
              "phone": { "type": "string" },
              "position": { "type": "string" },
              "email": { "type": "string" },
              "fax": { "type": "string" },
              "publicly_viewable": { "type": "string" },
              "address_type": { "type": "string" },
              "skip_geocoding":
                {
                  "type": "boolean",
                  "description": "Set true for frozen coordinates.",
                },
            },
          "description": "Update an existing partner location.",
        },
      "postApiV1Partner":
        {
          "type": "object",
          "properties":
            {
              "given_name": { "type": "string" },
              "display_name": { "type": "string" },
              "short_name": { "type": "string" },
              "website": { "type": "string" },
              "email": { "type": "string" },
              "artsy_collects_sales_tax":
                {
                  "type": "string",
                  "description": "Whether to charge sales tax on ecommerce orders.",
                },
              "region": { "type": "string" },
              "sortable_name": { "type": "string" },
              "directly_contactable": { "type": "string" },
              "alternate_names":
                {
                  "type": "array",
                  "description": "Alternate names or synonyms for this partner.",
                  "items": { "type": "string" },
                },
              "pre_qualify": { "type": "string" },
              "display_works_section": { "type": "string" },
              "distinguish_represented_artists":
                {
                  "type": "string",
                  "description": "Distinguish artists the partner represents on their profile page",
                },
              "profile_banner_display":
                {
                  "type": "string",
                  "description": "Banner display on the profile overview page.",
                },
              "profile_artists_layout":
                {
                  "type": "string",
                  "description": "Artists layout on the profile overview page.",
                },
              "display_artists_section":
                {
                  "type": "string",
                  "description": "Controls artists tab presence on gpp. Artists tab is hidden for Institutional partners and present for the rest of partners.",
                },
              "contract_type":
                {
                  "type": "string",
                  "description": "Type of contract relationship with Artsy.",
                },
              "type": { "type": "string" },
              "has_full_profile": { "type": "string" },
              "commission_rate":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Commission rate paid by partners above and beyond transaction fees. Default is 0.1 if empty.",
                },
              "admin_id": { "type": "string" },
              "outreach_admin_id": { "type": "string" },
              "referral_contact_id": { "type": "string" },
              "relative_size": { "type": "integer", "format": "int32" },
              "partner_categories": { "type": "string" },
              "criteo_eligible":
                {
                  "type": "string",
                  "description": "Include in Criteo artwork report.",
                },
              "commerce_enabled":
                {
                  "type": "string",
                  "description": "Partner could opt their works to buy now / make offer and accept payments using their merchant account.",
                },
              "wire_transfer_enabled":
                {
                  "type": "string",
                  "description": "Indicates the partner is eligible for manual wire transfers",
                },
              "implicit_offer_enabled":
                {
                  "type": "string",
                  "description": "Partner can have artworks implictly enrolled as 'Make Offer' on the artwork page",
                },
              "inquiry_order_enabled":
                {
                  "type": "string",
                  "description": "Partner could list artworks for purchasing from inquiry conversations.",
                },
              "has_limited_folio_access":
                {
                  "type": "string",
                  "description": "Gives admins the ability to toggle whether a partner has Folio access.",
                },
              "vat_number":
                {
                  "type": "string",
                  "description": "The VAT identification number belonging to this partner.",
                },
              "vat_status":
                {
                  "type": "string",
                  "description": "Whether the partner is registered, registered_and_exempt, exempt, or ineligible for a VAT identification number.",
                },
              "vat_exempt_approved":
                {
                  "type": "string",
                  "description": "Whether the partner's VAT exempt status is approved by Artsy.",
                },
              "verified_seller":
                {
                  "type": "string",
                  "description": "Indicates the partner is a trusted seller on Artsy.",
                },
              "managed_by_erp":
                {
                  "type": "string",
                  "description": "Whether the partner is managed by ERP for subscriptions.",
                },
              "requires_merchant_account":
                {
                  "type": "string",
                  "description": "Partner is required to configure a merchant account",
                },
              "enforce_on_platform_transactions":
                {
                  "type": "string",
                  "description": "Triggers partner on platform transaction notifications",
                },
              "enable_ach_payment_method":
                {
                  "type": "string",
                  "description": "Whether the partner should have access to ACH payment method on subscriptions.",
                },
              "featured_keywords":
                {
                  "type": "array",
                  "description": "Suggested filters for associated artworks.",
                  "items": { "type": "string" },
                },
            },
          "description": "Create a new partner.",
        },
      "postApiV1PartnerPartnerIdContact":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "first": { "type": "string" },
              "last": { "type": "string" },
              "email": { "type": "string" },
              "phone": { "type": "string" },
              "position": { "type": "string" },
              "can_contact": { "type": "string" },
              "partner_location_id": { "type": "string" },
            },
          "description": "Create a new partner contact.",
        },
      "putApiV1PartnerPartnerIdContactIdContactType":
        {
          "type": "object",
          "properties":
            {
              "contact_type":
                { "type": "string", "description": "Contact type." },
            },
          "required": ["contact_type"],
          "description": "Update the contact type for a partner contact.",
        },
      "putApiV1PartnerPartnerIdContact":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "first": { "type": "string" },
              "last": { "type": "string" },
              "email": { "type": "string" },
              "phone": { "type": "string" },
              "position": { "type": "string" },
              "can_contact": { "type": "string" },
              "partner_location_id": { "type": "string" },
              "contact_type":
                { "type": "string", "description": "Contact type." },
            },
          "description": "Update an existing partner contact.",
        },
      "postApiV1PartnerPartnerIdCommissionExemptionsCredit":
        {
          "type": "object",
          "properties":
            {
              "amount_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Amount to credit in USD cents.",
                },
              "notes":
                {
                  "type": "string",
                  "description": "Notes to associate with created commission exemption.",
                },
              "subscription_id":
                {
                  "type": "string",
                  "description": "The subscription id associated with this credit.",
                },
              "commission_exemption_start_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "Partner commission_exemption_start_at date for all exemptions.",
                },
              "commission_exemption_end_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "Partner commission_exemption_end_at date for all exemptions.",
                },
            },
          "required": ["amount_cents"],
          "description": "Add a commission exemption credit in USD.",
        },
      "putApiV1PartnerIdArtworkArtworkIdGenome":
        {
          "type": "object",
          "properties":
            {
              "genes":
                { "type": "object", "description": "Gene name/value pairs." },
            },
          "description": "Update an artwork's genome.",
        },
      "putApiV1PartnerIdArtworks":
        {
          "type": "object",
          "properties":
            {
              "artsy_shipping_domestic":
                {
                  "type": "boolean",
                  "description": "Opt in or out of Artsy domestic shipping",
                },
              "artsy_shipping_international":
                {
                  "type": "boolean",
                  "description": "Opt in or out of Artsy International shipping",
                },
              "location":
                {
                  "type": "string",
                  "description": "Set location of artwork to partner location",
                },
            },
          "description": "Bulk edit all partner artworks.",
        },
      "postApiV1PartnerIdArtworksDuplicate":
        {
          "type": "object",
          "properties":
            {
              "original_id":
                {
                  "type": "string",
                  "description": "Artwork id that should be used as original.",
                },
              "title":
                { "type": "string", "description": "Title of the new artwork" },
            },
          "required": ["original_id"],
          "description": "Create an artwork by duplicating attributes from original artwork.",
        },
      "putApiV1PartnerIdArtist":
        {
          "type": "object",
          "properties":
            {
              "featured": { "type": "boolean" },
              "remote_image_url":
                {
                  "type": "string",
                  "description": "Location of image for the PartnerArtist.",
                },
            },
          "description": "Update an existing partner artist.",
        },
      "putApiV1PartnerPartnerIdArtistArtistIdDocument":
        {
          "type": "object",
          "properties":
            {
              "remote_document_url":
                {
                  "type": "string",
                  "description": "Publicly-accessible URL of document.",
                },
              "title":
                {
                  "type": "string",
                  "description": "Partner updatable label for the document.",
                },
            },
          "description": "Update a partner artist document.",
        },
      "postApiV1PartnerPartnerIdArtistArtistIdDocument":
        {
          "type": "object",
          "properties":
            {
              "remote_document_url":
                {
                  "type": "string",
                  "description": "Publicly-accessible URL of document.",
                },
              "title":
                {
                  "type": "string",
                  "description": "Partner updatable label for the document.",
                },
            },
          "description": "Create a partner artist document.",
        },
      "postApiV1PartnerIdAlbum":
        {
          "type": "object",
          "properties":
            { "name": { "type": "string" }, "partner": { "type": "string" } },
          "description": "Create a new partner album.",
        },
      "putApiV1PartnerPartnerIdAlbum":
        {
          "type": "object",
          "properties": { "name": { "type": "string" } },
          "description": "Update an existing partner album.",
        },
      "putApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtwork":
        {
          "type": "object",
          "properties":
            {
              "position":
                { "type": "string", "description": "Artwork position." },
            },
          "description": "Update an artwork within a partner album.",
        },
      "postApiV1PartnerPartnerIdAlbumPartnerAlbumIdArtwork":
        {
          "type": "object",
          "properties":
            {
              "position":
                { "type": "string", "description": "Artwork position." },
            },
          "description": "Add an artwork to a partner album.",
        },
      "postApiV1PartnerPartnerIdCreditCard":
        {
          "type": "object",
          "properties":
            {
              "credit_card_token":
                { "type": "string", "description": "Card tokenization." },
              "provider":
                {
                  "type": "string",
                  "description": "Third party payment provider that tokenized card.",
                  "enum": ["stripe"],
                  "default": "stripe",
                },
            },
          "required": ["credit_card_token"],
          "description": "Creates a new partner credit card with a given token attached to the partner's customer account.",
        },
      "putApiV1PartnerPartnerIdOptInArtworksIntoCommerce":
        {
          "type": "object",
          "properties":
            {
              "pickup_available":
                {
                  "type": "boolean",
                  "description": "Update pickup_available for artworks",
                },
              "exact_price":
                {
                  "type": "boolean",
                  "description": "Turn artworks price visibility into Exact Price",
                  "enum": [true],
                },
              "framed":
                {
                  "type": "boolean",
                  "description": "Update framed value for artworks",
                  "enum": [false],
                },
              "certificate_of_authenticity":
                {
                  "type": "boolean",
                  "description": "Update certificate of authenticity for artworks",
                },
              "coa_by_gallery":
                {
                  "type": "boolean",
                  "description": "Update coa_by_gallery for artworks",
                },
              "coa_by_authenticating_body":
                {
                  "type": "boolean",
                  "description": "Update coa_by_authenticating_body for artworks",
                },
              "artsy_shipping_domestic":
                {
                  "type": "boolean",
                  "description": "Opt artwork into Artsy Shipping Domestic",
                  "enum": [true],
                },
              "location_id":
                {
                  "type": "string",
                  "description": "Update artworks to partner business location",
                },
              "signed_by_artist":
                {
                  "type": "boolean",
                  "description": "Update signed_by_artist for artworks",
                },
              "stamped_by_artist_estate":
                {
                  "type": "boolean",
                  "description": "Update stamped_by_artist_estate for artworks",
                },
              "sticker_label":
                {
                  "type": "boolean",
                  "description": "Update sticker_label for artworks",
                },
              "signed_in_plate":
                {
                  "type": "boolean",
                  "description": "Update signed_in_platefor artworks",
                },
              "signed_other":
                {
                  "type": "boolean",
                  "description": "Update signed_other for artworks",
                },
              "not_signed":
                {
                  "type": "boolean",
                  "description": "Update not_signed for artworks",
                },
            },
          "description": "Opt artworks into Commerce and Make Offer listing options",
        },
      "postApiV1PartnerPartnerIdCommerceOptInEligibleArtworksReport":
        {
          "type": "object",
          "properties":
            {
              "pickup_available":
                {
                  "type": "boolean",
                  "description": "Update pickup_available for artworks",
                },
              "exact_price":
                {
                  "type": "boolean",
                  "description": "Turn artworks price visibility into Exact Price",
                  "enum": [true],
                },
              "framed":
                {
                  "type": "boolean",
                  "description": "Update framed value for artworks",
                  "enum": [false],
                },
              "certificate_of_authenticity":
                {
                  "type": "boolean",
                  "description": "Update certificate of authenticity for artworks",
                },
              "coa_by_gallery":
                {
                  "type": "boolean",
                  "description": "Update coa_by_gallery for artworks",
                },
              "coa_by_authenticating_body":
                {
                  "type": "boolean",
                  "description": "Update coa_by_authenticating_body for artworks",
                },
              "eligible":
                {
                  "type": "boolean",
                  "description": "Determine whether the report must be generated for eligible or non-eligible artworks",
                  "default": true,
                },
              "artsy_shipping_domestic":
                {
                  "type": "boolean",
                  "description": "Opt artwork into Artsy Shipping Domestic",
                  "enum": [true],
                },
              "location_id":
                {
                  "type": "string",
                  "description": "Update artworks to partner business location",
                },
              "signed_by_artist":
                {
                  "type": "boolean",
                  "description": "Update signed_by_artist for artworks",
                },
              "stamped_by_artist_estate":
                {
                  "type": "boolean",
                  "description": "Update stamped_by_artist_estate for artworks",
                },
              "sticker_label":
                {
                  "type": "boolean",
                  "description": "Update sticker_label for artworks",
                },
              "signed_in_plate":
                {
                  "type": "boolean",
                  "description": "Update signed_in_platefor artworks",
                },
              "signed_other":
                {
                  "type": "boolean",
                  "description": "Update signed_other for artworks",
                },
              "not_signed":
                {
                  "type": "boolean",
                  "description": "Update not_signed for artworks",
                },
            },
          "description": "Send an email to the current user containing artwork data",
        },
      "postApiV1PartnerPartnerIdBankAccount":
        {
          "type": "object",
          "properties":
            {
              "external_id":
                {
                  "type": "string",
                  "description": "Payment method ID in Stripe.",
                },
              "last4": { "type": "string", "description": "Last 4." },
              "fingerprint":
                { "type": "string", "description": "Fingerprint." },
              "bank_account_type":
                {
                  "type": "string",
                  "description": "Bank account type.",
                  "enum": ["us_bank_account", "sepa_debit"],
                },
              "account_holder_type":
                { "type": "string", "description": "Account holder type." },
              "account_type":
                { "type": "string", "description": "Account type." },
              "bank_name": { "type": "string", "description": "Bank name." },
              "routing_number":
                { "type": "string", "description": "Routing number." },
              "account_holder_name":
                { "type": "string", "description": "Account holder name." },
              "account_holder_email":
                { "type": "string", "description": "Account holder email." },
              "country": { "type": "string", "description": "Country." },
              "currency": { "type": "string", "description": "Currency." },
              "one_time_use":
                {
                  "type": "boolean",
                  "description": "Flag showing if this bank account was created for one time use",
                },
              "status": { "type": "string", "description": "Status." },
              "bank_code":
                { "type": "string", "description": "[SEPA only] Bank code." },
              "branch_code":
                { "type": "string", "description": "[SEPA only] Branch code." },
            },
          "required":
            ["external_id", "last4", "fingerprint", "bank_account_type"],
          "description": "Add a bank account to a partner.",
        },
      "putApiV1PartnerIdPartnerFlags":
        {
          "type": "object",
          "properties":
            {
              "key":
                {
                  "type": "string",
                  "description": "Label of partner flag to set/unset.",
                },
              "value":
                {
                  "type": "string",
                  "description": "New partner flag value. If empty, unsets flag.",
                },
            },
          "required": ["key"],
          "description": "Sets (or unsets) a partner flag.",
        },
      "putApiV1Partner":
        {
          "type": "object",
          "properties":
            {
              "given_name": { "type": "string" },
              "display_name": { "type": "string" },
              "short_name": { "type": "string" },
              "website": { "type": "string" },
              "email": { "type": "string" },
              "artsy_collects_sales_tax":
                {
                  "type": "string",
                  "description": "Whether to charge sales tax on ecommerce orders.",
                },
              "region": { "type": "string" },
              "sortable_name": { "type": "string" },
              "directly_contactable": { "type": "string" },
              "alternate_names":
                {
                  "type": "array",
                  "description": "Alternate names or synonyms for this partner.",
                  "items": { "type": "string" },
                },
              "pre_qualify": { "type": "string" },
              "display_works_section": { "type": "string" },
              "distinguish_represented_artists":
                {
                  "type": "string",
                  "description": "Distinguish artists the partner represents on their profile page",
                },
              "profile_banner_display":
                {
                  "type": "string",
                  "description": "Banner display on the profile overview page.",
                },
              "profile_artists_layout":
                {
                  "type": "string",
                  "description": "Artists layout on the profile overview page.",
                },
              "display_artists_section":
                {
                  "type": "string",
                  "description": "Controls artists tab presence on gpp. Artists tab is hidden for Institutional partners and present for the rest of partners.",
                },
              "contract_type":
                { "type": "string", "description": "Contract type." },
              "type": { "type": "string", "description": "Type." },
              "has_full_profile":
                { "type": "boolean", "description": "Profile completeness." },
              "commission_rate":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Commission paid by non-subscriber/fair partner",
                },
              "admin_id":
                {
                  "type": "string",
                  "description": "Admin assigned for this partner.",
                },
              "outreach_admin_id":
                {
                  "type": "string",
                  "description": "Admin that signed up this partner.",
                },
              "referral_contact_id":
                {
                  "type": "string",
                  "description": "Admin that reffered this partner and gets the comission.",
                },
              "relative_size":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Size of the partner",
                  "enum": [1, 2, 3, 4, 5],
                },
              "partner_categories":
                {
                  "type": "array",
                  "description": "Array of partner slugs to assign to this partner",
                  "items": { "type": "string" },
                },
              "criteo_eligible":
                {
                  "type": "string",
                  "description": "Include in Criteo artwork report.",
                },
              "commerce_enabled":
                {
                  "type": "string",
                  "description": "Partner could opt their works to buy now / make offer and accept payments using their merchant account.",
                },
              "wire_transfer_enabled":
                {
                  "type": "string",
                  "description": "Indicates the partner is eligible for manual wire transfers",
                },
              "implicit_offer_enabled":
                {
                  "type": "string",
                  "description": "Partner can have artworks implictly enrolled as 'Make Offer' on the artwork page",
                },
              "inquiry_order_enabled":
                {
                  "type": "string",
                  "description": "Partner could list artworks for purchasing from inquiry conversations.",
                },
              "has_limited_folio_access":
                {
                  "type": "boolean",
                  "description": "Whether this partner has limited Folio access.",
                },
              "vat_number":
                {
                  "type": "string",
                  "description": "The VAT identification number belonging to this partner.",
                },
              "vat_status":
                {
                  "type": "string",
                  "description": "Whether the partner is registered, registered_and_exempt, exempt, or ineligible for a VAT identification number.",
                },
              "vat_exempt_approved":
                {
                  "type": "string",
                  "description": "Whether the partner's VAT exempt status is approved by Artsy.",
                },
              "verified_seller":
                {
                  "type": "string",
                  "description": "Indicates the partner is a trusted seller on Artsy.",
                },
              "managed_by_erp":
                {
                  "type": "string",
                  "description": "Whether the partner is managed by ERP for subscriptions.",
                },
              "requires_merchant_account":
                {
                  "type": "string",
                  "description": "Partner is required to configure a merchant account",
                },
              "enforce_on_platform_transactions":
                {
                  "type": "string",
                  "description": "Triggers partner on platform transaction notifications",
                },
              "enable_ach_payment_method":
                {
                  "type": "string",
                  "description": "Whether the partner should have access to ACH payment method on subscriptions.",
                },
              "featured_keywords":
                {
                  "type": "array",
                  "description": "Suggested filters for associated artworks.",
                  "items": { "type": "string" },
                },
            },
          "description": "Update an existing partner.",
        },
      "postApiV1PartnerPartnerIdShowShowIdEvent":
        {
          "type": "object",
          "properties":
            {
              "title": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "time_zone": { "type": "string" },
              "description": { "type": "string" },
              "partner_show": { "type": "string" },
              "event_type": { "type": "string" },
            },
          "description": "Create a partner show event.",
        },
      "putApiV1PartnerCategory":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "category_type": { "type": "string" },
              "internal":
                {
                  "type": "string",
                  "description": "Whether or not the partner category is only for internal purposes.",
                },
            },
          "description": "Update an existing partner category.",
        },
      "postApiV1PartnerCategory":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "category_type": { "type": "string" },
              "internal":
                {
                  "type": "string",
                  "description": "Whether or not the partner category is only for internal purposes.",
                },
            },
          "description": "Create a new partner category.",
        },
      "postApiV1PartnerCommunicationIdPartnerContact":
        {
          "type": "object",
          "properties": { "name": { "type": "string" } },
          "description": "Add a partner contact to a partner communication.",
        },
      "putApiV1PartnerCommunication":
        {
          "type": "object",
          "properties": { "name": { "type": "string" } },
          "description": "Update an existing partner communication.",
        },
      "postApiV1PartnerCommunication":
        {
          "type": "object",
          "properties": { "name": { "type": "string" } },
          "description": "Create a partner communication.",
        },
      "postApiV1PartnerOffer":
        {
          "type": "object",
          "properties":
            {
              "artwork_id": { "type": "string", "description": "Artwork ID." },
              "discount_percentage":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Discount percentage.",
                },
              "note": { "type": "string", "description": "Note." },
            },
          "required": ["artwork_id", "discount_percentage"],
          "description": "Create a partner offer.",
        },
      "postApiV1PartnerSubscriptionCharge":
        {
          "type": "object",
          "properties":
            {
              "partner_id": { "type": "string", "description": "Partner id." },
              "bill_date":
                { "type": "string", "description": "once per month" },
              "payment_method": { "type": "string" },
              "state": { "type": "string" },
            },
          "description": "Create a partner subscription charge.",
        },
      "postApiV1PartnerSubscriptionChargeIdLineItem":
        {
          "type": "object",
          "properties":
            {
              "category":
                {
                  "type": "string",
                  "description": "Category that this line item belongs to.",
                },
              "notes":
                {
                  "type": "string",
                  "description": "Notes explaining the line item.",
                },
              "price_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Amount to add.",
                },
            },
          "required": ["category"],
          "description": "Add a line item to a charge.",
        },
      "putApiV1PartnerSubscriptionChargeIdReceivePayment":
        {
          "type": "object",
          "properties":
            {
              "payment_method":
                {
                  "type": "string",
                  "description": "Method used to pay for the charge.",
                },
              "approved_at":
                {
                  "type": "string",
                  "description": "Date the charge was approved.",
                },
            },
          "required": ["payment_method", "approved_at"],
          "description": "Mark an existing charge as completed.",
        },
      "putApiV1PartnerSubscriptionCharge":
        {
          "type": "object",
          "properties":
            {
              "bill_date":
                { "type": "string", "description": "once per month" },
              "payment_method": { "type": "string" },
              "state": { "type": "string" },
            },
          "description": "Update an existing partner subscription charge.",
        },
      "putApiV1PartnerSubscriptionPlan":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "display_name": { "type": "string" },
              "price_in_cents": { "type": "integer", "format": "int32" },
              "default_trial_days": { "type": "integer", "format": "int32" },
            },
          "description": "Update an existing partner subscription plan.",
        },
      "postApiV1PartnerSubscriptionPlan":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "display_name": { "type": "string" },
              "price_in_cents": { "type": "integer", "format": "int32" },
              "default_trial_days": { "type": "integer", "format": "int32" },
            },
          "description": "Create a partner subscription plan.",
        },
      "postApiV1PartnerSubscriptions":
        {
          "type": "object",
          "properties":
            {
              "partner_id": { "type": "string", "description": "Partner id." },
              "partner_subscription_plan_id":
                {
                  "type": "string",
                  "description": "Partner Subscription Plan id.",
                },
              "duration":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Duration of subscription in months for regular and in days for trial subscriptions.",
                },
              "price_in_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Overwrite to Price per month, inherited from plan",
                },
              "payment_frequency":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Frequency of payments during this subscription (example: Frequency 12 for 12 month duration means monthly).",
                },
              "discount_in_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Discount in cents applied to each each payment.",
                },
              "trial":
                {
                  "type": "boolean",
                  "description": "Boolean flag defining if this subscription is trial or not",
                },
              "trial_duration_days":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of days we want to offer trial for, only used when type is Trial and to override default trial days",
                },
            },
          "required":
            ["partner_id", "partner_subscription_plan_id", "duration"],
          "description": "Add a partner to a partner subscription plan.",
        },
      "putApiV1PartnerSubscriptionIdTerminate":
        {
          "type": "object",
          "properties":
            {
              "explanation":
                {
                  "type": "string",
                  "description": "Explanation for why the subscription is ending.",
                },
              "termination_date":
                {
                  "type": "string",
                  "description": "Date to terminate the subscription.",
                },
              "churned":
                {
                  "type": "boolean",
                  "description": "Optionally mark already terminated subscription as churned.",
                },
            },
          "description": "Terminates a partner subscription.",
        },
      "putApiV1PartnerSubscriptionIdActivate":
        {
          "type": "object",
          "properties":
            {
              "payment_method":
                {
                  "type": "string",
                  "description": "Payment method for generated charges.",
                },
              "start_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "The subscription contract start date.",
                },
              "grace_days":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of days of grace period offered to this subscription which overrides plan.default_grace_days.",
                },
              "has_credit_card_fee":
                {
                  "type": "boolean",
                  "description": "Decide if the charges should include a credit card fee",
                },
            },
          "required": ["payment_method"],
          "description": "Activates a partner subscription.",
        },
      "putApiV1PartnerSubscription":
        {
          "type": "object",
          "properties":
            {
              "start_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "The subscription contract start date.",
                },
              "end_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "The subscription contract end date.",
                },
              "payment_method":
                {
                  "type": "string",
                  "description": "Payment method for generated charges.",
                },
              "payment_frequency":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Frequency of payments during this subscription (example: Frequency 12 for 12 month duration means monthly).",
                },
              "discount_in_cents":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Discount in cents applied to each each payment.",
                },
              "duration":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Duration of this subsription",
                },
              "grace_end_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "The subscription contract grace period end date, can only be set when subscription is in grace period.",
                },
              "generate_charges":
                {
                  "type": "boolean",
                  "description": "Whether or not charges should be generated after updating the subscription.",
                },
            },
          "description": "Updates a partner subscription.",
        },
      "putApiV1PartnerArtist":
        {
          "type": "object",
          "properties":
            {
              "biography": { "type": "string" },
              "display_on_partner_profile": { "type": "boolean" },
              "featured": { "type": "boolean" },
              "gemini_token": { "type": "string" },
              "hide_in_presentation_mode": { "type": "boolean" },
              "remote_image_url":
                {
                  "type": "string",
                  "description": "Location of image for the PartnerArtist.",
                },
              "represented_by": { "type": "boolean" },
              "use_default_biography": { "type": "boolean" },
            },
          "description": "Update a partner artist.",
        },
      "putApiV1PartnerShowPartnerShowIdImage":
        {
          "type": "object",
          "properties":
            {
              "image": { "type": "string" },
              "position": { "type": "integer", "format": "int32" },
              "default": { "type": "string" },
            },
          "description": "Update a partner show's image.",
        },
      "postApiV1PartnerShowPartnerShowIdImage":
        {
          "type": "object",
          "properties":
            {
              "remote_image_url":
                {
                  "type": "string",
                  "description": "Remote URL for the image to upload.",
                },
              "artwork_id":
                { "type": "string", "description": "Associated artwork ID." },
              "artist_id":
                { "type": "string", "description": "Associated artist ID." },
              "default":
                { "type": "boolean", "description": "Make image default." },
            },
          "description": "Add an image to a partner show.",
        },
      "postApiV1Period":
        {
          "type": "object",
          "properties":
            {
              "name":
                {
                  "type": "string",
                  "description": "Name for this periodized subdivision of a Culture",
                },
              "description":
                {
                  "type": "string",
                  "description": "Description of the period",
                },
              "start_date":
                {
                  "type": "string",
                  "description": "An optional start date for this period",
                },
              "end_date":
                {
                  "type": "string",
                  "description": "An optional end date for this period",
                },
            },
          "description": "Create a new period",
        },
      "putApiV1Period":
        {
          "type": "object",
          "properties":
            {
              "name":
                {
                  "type": "string",
                  "description": "Name for this periodized subdivision of a Culture",
                },
              "description":
                {
                  "type": "string",
                  "description": "Description of the period",
                },
              "start_date":
                {
                  "type": "string",
                  "description": "An optional start date for this period",
                },
              "end_date":
                {
                  "type": "string",
                  "description": "An optional end date for this period",
                },
            },
          "description": "Update an existing period",
        },
      "putApiV1Profile":
        {
          "type": "object",
          "properties":
            {
              "handle": { "type": "string", "description": "Unique handle." },
              "bio":
                {
                  "type": "string",
                  "description": "Short bio (275 character max).",
                },
              "full_bio":
                {
                  "type": "string",
                  "description": "Full bio (800 character max).",
                },
              "website": { "type": "string", "description": "Website." },
              "location": { "type": "string", "description": "Location." },
              "private":
                {
                  "type": "string",
                  "description": "Private profiles hide certain features for non admins.",
                },
              "menu_color_class": { "type": "string" },
            },
          "description": "Update a profile.",
        },
      "postApiV1Profile":
        {
          "type": "object",
          "properties":
            {
              "handle": { "type": "string", "description": "Unique handle." },
              "bio":
                {
                  "type": "string",
                  "description": "Short bio (275 character max).",
                },
              "full_bio":
                {
                  "type": "string",
                  "description": "Full bio (800 character max).",
                },
              "website": { "type": "string", "description": "Website." },
              "location": { "type": "string", "description": "Location." },
              "private":
                {
                  "type": "string",
                  "description": "Private profiles hide certain features for non admins.",
                },
              "menu_color_class": { "type": "string" },
            },
          "description": "Create a profile.",
        },
      "putApiV1ProfileIdCoverImage":
        {
          "type": "object",
          "properties":
            {
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
              "remote_image_url":
                { "type": "string", "description": "Profile cover image." },
            },
          "description": "Update profile cover.",
        },
      "postApiV1ProfileIdCoverImage":
        {
          "type": "object",
          "properties":
            {
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
              "remote_image_url":
                { "type": "string", "description": "Profile cover image." },
            },
          "description": "Change profile cover.",
        },
      "putApiV1ProfileIdIcon":
        {
          "type": "object",
          "properties":
            {
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
              "remote_image_url":
                { "type": "string", "description": "Profile icon image." },
            },
          "description": "Update profile icon.",
        },
      "postApiV1ProfileIdIcon":
        {
          "type": "object",
          "properties":
            {
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
              "remote_image_url":
                { "type": "string", "description": "Profile icon image." },
            },
          "description": "Change profile icon.",
        },
      "putApiV1Purchase":
        {
          "type": "object",
          "properties":
            {
              "artist_id": { "type": "string", "description": "Partner id." },
              "artsy_commission":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Artsy commission.",
                },
              "artwork_id": { "type": "string", "description": "Artwork id." },
              "discover_admin_id":
                { "type": "string", "description": "Discover admin id." },
              "email":
                { "type": "string", "description": "Email for purchase." },
              "fair_id": { "type": "string", "description": "Fair id." },
              "note": { "type": "string", "description": "Note for purchase." },
              "owner_id": { "type": "string", "description": "Owner id." },
              "owner_type": { "type": "string", "description": "Owner type." },
              "partner_id": { "type": "string", "description": "Partner id." },
              "sale_date":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Sale date.",
                },
              "sale_admin_id":
                { "type": "string", "description": "Sale admin id." },
              "sale_id": { "type": "string", "description": "Sale id." },
              "sale_price":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Sale price in USD.",
                },
              "source":
                { "type": "string", "description": "Source of purchase." },
              "user_id": { "type": "string", "description": "User id." },
            },
          "description": "Update a purchase.",
        },
      "postApiV1Purchase":
        {
          "type": "object",
          "properties":
            {
              "artist_id": { "type": "string", "description": "Partner id." },
              "artsy_commission":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Artsy commission.",
                },
              "artwork_id": { "type": "string", "description": "Artwork id." },
              "discover_admin_id":
                { "type": "string", "description": "Discover admin id." },
              "email":
                { "type": "string", "description": "Email for purchase." },
              "fair_id": { "type": "string", "description": "Fair id." },
              "note": { "type": "string", "description": "Note for purchase." },
              "owner_id": { "type": "string", "description": "Owner id." },
              "owner_type": { "type": "string", "description": "Owner type." },
              "partner_id": { "type": "string", "description": "Partner id." },
              "sale_date":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Sale date.",
                },
              "sale_admin_id":
                { "type": "string", "description": "Sale admin id." },
              "sale_id": { "type": "string", "description": "Sale id." },
              "sale_price":
                {
                  "type": "number",
                  "format": "float",
                  "description": "Sale price in USD.",
                },
              "source":
                { "type": "string", "description": "Source of purchase." },
              "user_id": { "type": "string", "description": "User id." },
            },
          "description": "Create a purchase object for artwork sale.",
        },
      "putApiV1SaleAgreements":
        {
          "type": "object",
          "properties":
            {
              "content":
                {
                  "type": "string",
                  "description": "The content of the sale agreement.",
                },
              "display_start_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "The start date of the sale to be displayed with the sale agreement.",
                },
              "display_end_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "The end date of the sale to be displayed with the sale agreement.",
                },
              "status":
                {
                  "type": "string",
                  "description": "The status of the sale agreement.",
                },
              "published":
                {
                  "type": "boolean",
                  "description": "If the sale agreement should be publicly viewable.",
                },
            },
          "description": "Update a sale agreement.",
        },
      "postApiV1SaleAgreements":
        {
          "type": "object",
          "properties":
            {
              "content":
                {
                  "type": "string",
                  "description": "The content of the sale agreement.",
                },
              "display_start_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "The start date of the sale to be displayed with the sale agreement.",
                },
              "display_end_at":
                {
                  "type": "string",
                  "format": "date",
                  "description": "The end date of the sale to be displayed with the sale agreement.",
                },
              "sale_id":
                {
                  "type": "string",
                  "description": "The id of the sale for which this sale agreement is associated.",
                },
              "status":
                {
                  "type": "string",
                  "description": "The status of the sale agreement.",
                },
            },
          "required": ["content", "sale_id", "status"],
          "description": "Create a new sale agreement.",
        },
      "putApiV1Sale":
        {
          "type": "object",
          "properties":
            {
              "associated_sale_id": { "type": "string" },
              "auto_approval_ends_at": { "type": "string" },
              "bid_increment_strategy_name": { "type": "string" },
              "bidding_engine_enabled": { "type": "boolean" },
              "buyers_premium_id": { "type": "string" },
              "cascading_end_time_interval_minutes":
                { "type": "integer", "format": "int32" },
              "collect_payments": { "type": "boolean" },
              "currency": { "type": "string" },
              "delegate_bidding": { "type": "boolean" },
              "description": { "type": "string" },
              "end_at": { "type": "string" },
              "event_end_at": { "type": "string" },
              "event_location": { "type": "string" },
              "event_start_at": { "type": "string" },
              "extended_bidding_interval_minutes":
                { "type": "integer", "format": "int32" },
              "extended_bidding_period_minutes":
                { "type": "integer", "format": "int32" },
              "gemini_token": { "type": "string" },
              "hide_total": { "type": "boolean" },
              "is_artsy_licensed": { "type": "boolean" },
              "is_auction": { "type": "boolean" },
              "is_benefit": { "type": "boolean" },
              "is_gallery_auction": { "type": "boolean" },
              "is_preliminary": { "type": "boolean" },
              "live_start_at": { "type": "string" },
              "lot_conditions_report_enabled": { "type": "boolean" },
              "name": { "type": "string" },
              "partner_id": { "type": "string" },
              "profile_id": { "type": "string" },
              "promoted_sale_id": { "type": "string" },
              "published": { "type": "boolean" },
              "registration_ends_at": { "type": "string" },
              "require_bidder_approval": { "type": "boolean" },
              "require_identity_verification": { "type": "boolean" },
              "sale_code": { "type": "string" },
              "start_at": { "type": "string" },
              "time_zone": { "type": "string" },
              "trusted_client_bypasses_card_requirement": { "type": "boolean" },
              "virtual_live": { "type": "boolean" },
            },
          "description": "Update an existing sale.",
        },
      "postApiV1Sale":
        {
          "type": "object",
          "properties":
            {
              "associated_sale_id": { "type": "string" },
              "auto_approval_ends_at": { "type": "string" },
              "bid_increment_strategy_name": { "type": "string" },
              "bidding_engine_enabled": { "type": "boolean" },
              "buyers_premium_id": { "type": "string" },
              "cascading_end_time_interval_minutes":
                { "type": "integer", "format": "int32" },
              "collect_payments": { "type": "boolean" },
              "currency": { "type": "string" },
              "delegate_bidding": { "type": "boolean" },
              "description": { "type": "string" },
              "end_at": { "type": "string" },
              "event_end_at": { "type": "string" },
              "event_location": { "type": "string" },
              "event_start_at": { "type": "string" },
              "extended_bidding_interval_minutes":
                { "type": "integer", "format": "int32" },
              "extended_bidding_period_minutes":
                { "type": "integer", "format": "int32" },
              "gemini_token": { "type": "string" },
              "hide_total": { "type": "boolean" },
              "is_artsy_licensed": { "type": "boolean" },
              "is_auction": { "type": "boolean" },
              "is_benefit": { "type": "boolean" },
              "is_gallery_auction": { "type": "boolean" },
              "is_preliminary": { "type": "boolean" },
              "live_start_at": { "type": "string" },
              "lot_conditions_report_enabled": { "type": "boolean" },
              "name": { "type": "string" },
              "partner_id": { "type": "string" },
              "profile_id": { "type": "string" },
              "promoted_sale_id": { "type": "string" },
              "published": { "type": "boolean" },
              "registration_ends_at": { "type": "string" },
              "require_bidder_approval": { "type": "boolean" },
              "require_identity_verification": { "type": "boolean" },
              "sale_code": { "type": "string" },
              "start_at": { "type": "string" },
              "time_zone": { "type": "string" },
              "trusted_client_bypasses_card_requirement": { "type": "boolean" },
              "virtual_live": { "type": "boolean" },
            },
          "description": "Create a sale.",
        },
      "putApiV1SaleSaleIdSaleArtwork":
        {
          "type": "object",
          "properties":
            {
              "currency": { "type": "string" },
              "end_at": { "type": "string", "format": "date-time" },
              "estimate_cents": { "type": "integer", "format": "int32" },
              "exclude_from_marketing": { "type": "boolean" },
              "high_estimate_cents": { "type": "integer", "format": "int32" },
              "lot_label": { "type": "string" },
              "low_estimate_cents": { "type": "integer", "format": "int32" },
              "opening_bid_cents": { "type": "integer", "format": "int32" },
              "position": { "type": "number", "format": "float" },
              "reserve_cents": { "type": "integer", "format": "int32" },
              "reserve_unknown": { "type": "boolean" },
              "user_notes": { "type": "string" },
              "withdrawn_at": { "type": "string", "format": "date-time" },
            },
          "description": "Update a sale artwork.",
        },
      "postApiV1SaleSaleIdSaleArtwork":
        {
          "type": "object",
          "properties":
            {
              "currency": { "type": "string" },
              "end_at": { "type": "string", "format": "date-time" },
              "estimate_cents": { "type": "integer", "format": "int32" },
              "exclude_from_marketing": { "type": "boolean" },
              "high_estimate_cents": { "type": "integer", "format": "int32" },
              "lot_label": { "type": "string" },
              "low_estimate_cents": { "type": "integer", "format": "int32" },
              "opening_bid_cents": { "type": "integer", "format": "int32" },
              "position": { "type": "number", "format": "float" },
              "reserve_cents": { "type": "integer", "format": "int32" },
              "reserve_unknown": { "type": "boolean" },
              "user_notes": { "type": "string" },
              "withdrawn_at": { "type": "string", "format": "date-time" },
              "artwork_id": { "type": "string", "description": "Artwork id." },
            },
          "required": ["artwork_id"],
          "description": "Add an artwork to a sale.",
        },
      "putApiV1SetIdItem":
        {
          "type": "object",
          "properties":
            {
              "position":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "New item position.",
                },
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
            },
          "description": "Update an item in an existing set.",
        },
      "postApiV1SetIdItem":
        {
          "type": "object",
          "properties":
            {
              "item_id": { "type": "string", "description": "Item id." },
              "position":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Item position.",
                },
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
            },
          "required": ["item_id"],
          "description": "Add an item to an existing set.",
        },
      "putApiV1Set":
        {
          "type": "object",
          "properties":
            {
              "key": { "type": "string" },
              "name": { "type": "string" },
              "internal_name": { "type": "string" },
              "description": { "type": "string" },
              "published": { "type": "string" },
              "display_on_mobile":
                { "type": "string", "description": "Display on mobile." },
              "display_on_desktop":
                { "type": "string", "description": "Display on desktop." },
              "display_on_martsy":
                { "type": "string", "description": "Display on martsy." },
              "layout": { "type": "string" },
              "item_ids":
                {
                  "type": "array",
                  "description": "Items will be added and/or removed if the parameter is provided. Otherwise, items will not be modified",
                  "items": { "type": "string" },
                },
              "owner_id": { "type": "string", "description": "Owner type." },
              "owner_type": { "type": "string", "description": "Owner id." },
              "unset_owner":
                {
                  "type": "boolean",
                  "description": "When true, will unset `owner` relation.",
                },
            },
          "description": "Update an existing set.",
        },
      "postApiV1Set":
        {
          "type": "object",
          "properties":
            {
              "key": { "type": "string" },
              "name": { "type": "string" },
              "internal_name": { "type": "string" },
              "description": { "type": "string" },
              "published": { "type": "string" },
              "display_on_mobile":
                { "type": "string", "description": "Display on mobile." },
              "display_on_desktop":
                { "type": "string", "description": "Display on desktop." },
              "display_on_martsy":
                { "type": "string", "description": "Display on martsy." },
              "layout": { "type": "string" },
              "item_type": { "type": "string", "description": "Item type." },
              "owner_type": { "type": "string", "description": "Owner type." },
              "owner_id": { "type": "string", "description": "Owner id." },
              "item_ids":
                {
                  "type": "array",
                  "description": "Item ids.",
                  "items": { "type": "string" },
                },
            },
          "required": ["item_type"],
          "description": "Create a new set.",
        },
      "postApiV1Shortcut":
        {
          "type": "object",
          "properties":
            {
              "long":
                {
                  "type": "string",
                  "description": "URI (full URL or path) to shorten",
                },
              "short":
                {
                  "type": "string",
                  "description": "Desired path to function as the shortcut",
                },
            },
          "required": ["long"],
          "description": "Create a new shortcut for a given long URL (and optional short URL).",
        },
      "putApiV1Shortcut":
        {
          "type": "object",
          "properties":
            { "long": { "type": "string", "description": "Shortcut long." } },
          "description": "Update an existing shortcut.",
        },
      "postApiV1Show":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "press_release": { "type": "string" },
              "press_release_url":
                {
                  "type": "string",
                  "description": "Link to the press release for this show",
                },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "all_day": { "type": "string" },
              "fair_location": { "type": "string" },
              "featured": { "type": "string" },
              "batch_publish": { "type": "string" },
              "display_on_partner_profile": { "type": "string" },
              "artist_ids":
                {
                  "type": "array",
                  "description": "List of artist ID's without associated artworks.",
                  "items": { "type": "string" },
                },
              "eligible_artwork_artist_ids":
                {
                  "type": "array",
                  "description": "List of artist ID's with associated eligible (published) artworks (may not be not 100% accurate).",
                  "items": { "type": "string" },
                },
              "galaxy_partner_id":
                {
                  "type": "string",
                  "description": "Galaxy Id (if this show belongs to a galaxy partner).",
                },
              "partner_city":
                {
                  "type": "string",
                  "description": "City the show is in, can be used as a fallback if no location (or for ref. shows).",
                },
              "group":
                {
                  "type": "string",
                  "description": "Whether the show is a group show or not, can be explicitly set.",
                },
              "sortable_name":
                {
                  "type": "string",
                  "description": "Downcased version of the show name to allow for correct alphabetical sort",
                },
              "discovery_blocked_reason":
                {
                  "type": "string",
                  "description": "The reason this show was blocked from discovery.",
                },
              "duplicate_of_id": { "type": "string" },
              "viewing_room_ids":
                {
                  "type": "array",
                  "description": "If set, the ids of linked `ViewingRoom`s.",
                  "items": { "type": "string" },
                },
              "partner_id": { "type": "string" },
              "fair_id": { "type": "string" },
              "partner_location_id": { "type": "string" },
            },
          "required": ["partner_id"],
          "description": "Create a new partner show.",
        },
      "putApiV1Show":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "press_release": { "type": "string" },
              "press_release_url":
                {
                  "type": "string",
                  "description": "Link to the press release for this show",
                },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "all_day": { "type": "string" },
              "fair_location": { "type": "string" },
              "featured": { "type": "string" },
              "batch_publish": { "type": "string" },
              "display_on_partner_profile": { "type": "string" },
              "artist_ids":
                {
                  "type": "array",
                  "description": "List of artist ID's without associated artworks.",
                  "items": { "type": "string" },
                },
              "eligible_artwork_artist_ids":
                {
                  "type": "array",
                  "description": "List of artist ID's with associated eligible (published) artworks (may not be not 100% accurate).",
                  "items": { "type": "string" },
                },
              "galaxy_partner_id":
                {
                  "type": "string",
                  "description": "Galaxy Id (if this show belongs to a galaxy partner).",
                },
              "partner_city":
                {
                  "type": "string",
                  "description": "City the show is in, can be used as a fallback if no location (or for ref. shows).",
                },
              "group":
                {
                  "type": "string",
                  "description": "Whether the show is a group show or not, can be explicitly set.",
                },
              "sortable_name":
                {
                  "type": "string",
                  "description": "Downcased version of the show name to allow for correct alphabetical sort",
                },
              "discovery_blocked_reason":
                {
                  "type": "string",
                  "description": "The reason this show was blocked from discovery.",
                },
              "duplicate_of_id": { "type": "string" },
              "viewing_room_ids":
                {
                  "type": "array",
                  "description": "If set, the ids of linked `ViewingRoom`s.",
                  "items": { "type": "string" },
                },
              "partner_id": { "type": "string" },
              "fair_id": { "type": "string" },
              "partner_location_id": { "type": "string" },
            },
          "required": ["partner_id"],
          "description": "Update an existing partner show.",
        },
      "postApiV1SiteHeroUnitSiteHeroUnitIdImage":
        {
          "type": "object",
          "properties":
            {
              "type": { "type": "string", "description": "Image Type." },
              "remote_image_url":
                {
                  "type": "string",
                  "description": "Remote URL for the image to upload.",
                },
              "gemini_token":
                { "type": "string", "description": "Gemini token." },
            },
          "required": ["type"],
          "description": "Add an image to a hero unit.",
        },
      "putApiV1SiteHeroUnit":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "enabled": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "link": { "type": "string" },
              "link_text": { "type": "string" },
              "position": { "type": "integer", "format": "int32" },
              "menu_color_class": { "type": "string" },
              "type": { "type": "string" },
              "heading": { "type": "string" },
              "credit_line": { "type": "string" },
              "link_color_hover_hex": { "type": "string" },
              "link_color_off_hex": { "type": "string" },
              "mobile_title": { "type": "string" },
              "mobile_description": { "type": "string" },
              "mobile_menu_color_class": { "type": "string" },
              "display_on_mobile":
                { "type": "string", "description": "Display on mobile." },
              "display_on_desktop":
                { "type": "string", "description": "Display on desktop." },
              "display_on_martsy":
                { "type": "string", "description": "Display on martsy." },
              "app_title": { "type": "string" },
              "app_description": { "type": "string" },
            },
          "description": "Update a site hero unit.",
        },
      "postApiV1SiteHeroUnit":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "enabled": { "type": "string" },
              "start_at": { "type": "string" },
              "end_at": { "type": "string" },
              "link": { "type": "string" },
              "link_text": { "type": "string" },
              "position": { "type": "integer", "format": "int32" },
              "menu_color_class": { "type": "string" },
              "type": { "type": "string" },
              "heading": { "type": "string" },
              "credit_line": { "type": "string" },
              "link_color_hover_hex": { "type": "string" },
              "link_color_off_hex": { "type": "string" },
              "mobile_title": { "type": "string" },
              "mobile_description": { "type": "string" },
              "mobile_menu_color_class": { "type": "string" },
              "display_on_mobile":
                { "type": "string", "description": "Display on mobile." },
              "display_on_desktop":
                { "type": "string", "description": "Display on desktop." },
              "display_on_martsy":
                { "type": "string", "description": "Display on martsy." },
              "app_title": { "type": "string" },
              "app_description": { "type": "string" },
            },
          "description": "Create a site hero unit.",
        },
      "postApiV1StripeCustomer":
        {
          "type": "object",
          "properties":
            { "user_id": { "type": "string", "description": "User Id." } },
          "required": ["user_id"],
          "description": "Create or return an existing customer account and Stripe customer for a user.",
        },
      "putApiV1Tag":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string" },
              "description": { "type": "string" },
            },
          "description": "Update an existing tag.",
        },
      "postApiV1TokenExchange":
        {
          "type": "object",
          "properties":
            {
              "client_application_id":
                {
                  "type": "string",
                  "description": "ID of client application to get a JWT for.",
                },
            },
          "required": ["client_application_id"],
          "description": "Get a token for a client app.",
        },
      "putApiV1UserArtQuiz":
        {
          "type": "object",
          "properties":
            {
              "artwork_id":
                {
                  "type": "string",
                  "description": "The id of the artwork to update.",
                },
              "clear_interaction":
                {
                  "type": "boolean",
                  "description": "When true clear the interaction.",
                },
            },
          "required": ["artwork_id"],
          "description": "Update a user's art quiz.",
        },
      "postApiV1UserFairAction":
        {
          "type": "object",
          "properties":
            {
              "fair_id": { "type": "string", "description": "Fair id." },
              "action":
                {
                  "type": "string",
                  "enum":
                    [
                      "Fair Partner Marketing",
                      "Invitee",
                      "Attendee",
                      "General Admission",
                      "Limited Access VIP",
                      "All Access VIP",
                    ],
                },
              "owner_type":
                {
                  "type": "string",
                  "enum": ["UserSaleProfile", "CollectorProfile"],
                },
              "owner_id": { "type": "string", "description": "ID of owner." },
              "anonymous_session_id":
                {
                  "type": "string",
                  "description": "Session ID of the inquirer if anonymous.",
                },
              "user_id": { "type": "string", "description": "User id." },
              "session_id":
                {
                  "type": "string",
                  "description": "Client's key for anonymous session.",
                },
            },
          "required": ["fair_id", "action"],
          "description": "Creates a new user fair action for a given collector or sale profile.",
        },
      "postApiV1UserInterest":
        {
          "type": "object",
          "properties":
            {
              "owner_type":
                {
                  "type": "string",
                  "enum": ["UserSaleProfile", "CollectorProfile"],
                },
              "interest_id":
                { "type": "string", "description": "Interest id." },
              "interest_type": { "type": "string", "enum": ["Artist", "Gene"] },
              "category":
                {
                  "type": "string",
                  "enum": ["collected_before", "interested_in_collecting"],
                },
              "owner_id":
                {
                  "type": "string",
                  "description": "Collector/sale profile id.",
                },
              "anonymous_session_id":
                { "type": "string", "description": "Anonymous session id." },
              "user_id": { "type": "string", "description": "User id." },
              "body": { "type": "string", "description": "Note" },
              "session_id":
                {
                  "type": "string",
                  "description": "Client's key for anonymous session.",
                },
            },
          "required":
            ["owner_type", "interest_id", "interest_type", "category"],
          "description": "Add an interest.",
        },
      "putApiV1UserSaleProfile":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Name." },
              "email": { "type": "string", "description": "Email." },
              "profession": { "type": "string", "description": "Profession." },
              "employer": { "type": "string", "description": "Employer." },
              "job_title": { "type": "string", "description": "Job Title." },
              "first_name": { "type": "string", "description": "First Name." },
              "last_name": { "type": "string", "description": "Last Name." },
              "address_1": { "type": "string", "description": "Address 1" },
              "address_2": { "type": "string", "description": "Address 2" },
              "city": { "type": "string", "description": "City Name" },
              "state": { "type": "string", "description": "State Name" },
              "zip": { "type": "string", "description": "Zip Code" },
              "country": { "type": "string", "description": "Country" },
              "work_phone": { "type": "string", "description": "Work Phone" },
              "mobile_phone":
                { "type": "string", "description": "Mobile Phone" },
              "fax": { "type": "string", "description": "Fax" },
              "alternative_email":
                { "type": "string", "description": "Alternative Email" },
              "salary_usd":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Approximate salary in USD",
                },
              "birth_year":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Approximate birth year",
                },
              "spouse":
                { "type": "string", "description": "Spouse/Partner Name" },
              "require_bidder_approval": { "type": "string" },
            },
          "description": "Update a profile.",
        },
      "postApiV1UserSaleProfile":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Name." },
              "email": { "type": "string", "description": "Email." },
              "profession": { "type": "string", "description": "Profession." },
              "employer": { "type": "string", "description": "Employer." },
              "job_title": { "type": "string", "description": "Job Title." },
              "first_name": { "type": "string", "description": "First Name." },
              "last_name": { "type": "string", "description": "Last Name." },
              "address_1": { "type": "string", "description": "Address 1" },
              "address_2": { "type": "string", "description": "Address 2" },
              "city": { "type": "string", "description": "City Name" },
              "state": { "type": "string", "description": "State Name" },
              "zip": { "type": "string", "description": "Zip Code" },
              "country": { "type": "string", "description": "Country" },
              "work_phone": { "type": "string", "description": "Work Phone" },
              "mobile_phone":
                { "type": "string", "description": "Mobile Phone" },
              "fax": { "type": "string", "description": "Fax" },
              "alternative_email":
                { "type": "string", "description": "Alternative Email" },
              "salary_usd":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Approximate salary in USD",
                },
              "birth_year":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "Approximate birth year",
                },
              "spouse":
                { "type": "string", "description": "Spouse/Partner Name" },
              "require_bidder_approval": { "type": "string" },
            },
          "description": "Create a sale profile.",
        },
      "postApiV1UserIdLabFeature":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Name." },
              "display_follow_tooltip": { "type": "string" },
              "display_filter_tooltip": { "type": "string" },
              "display_inquiry_tooltip": { "type": "string" },
              "display_favorites_dialog": { "type": "string" },
              "phone": { "type": "string", "description": "Phone number." },
              "phone_number":
                { "type": "string", "description": "Normalized phone number." },
              "phone_country_code":
                {
                  "type": "string",
                  "description": "ISO 3166 country code for phone number.",
                },
              "gender": { "type": "string", "description": "Gender." },
              "price_range_min": { "type": "integer", "format": "int32" },
              "price_range_max": { "type": "integer", "format": "int32" },
              "artworks_per_year":
                {
                  "type": "string",
                  "description": "Number of artworks purchased per year.",
                },
              "is_collector":
                { "type": "string", "description": "Is a collector?" },
              "industry":
                {
                  "type": "string",
                  "description": "Works in the art industry?",
                },
              "profession": { "type": "string", "description": "Profession." },
              "notes":
                {
                  "type": "string",
                  "description": "Additional personal notes.",
                },
              "share_follows":
                {
                  "type": "string",
                  "description": "Shares FollowArtists, FollowGenes, and FollowProfiles with partners.",
                },
              "receive_purchase_notification":
                {
                  "type": "string",
                  "description": "Receive purchase notifications.",
                },
              "receive_outbid_notification":
                {
                  "type": "string",
                  "description": "Receive outbid auctions notifications.",
                },
              "receive_lot_opening_soon_notification":
                {
                  "type": "string",
                  "description": "Receive lot opening auctions notifications.",
                },
              "receive_sale_opening_closing_notification":
                {
                  "type": "string",
                  "description": "Receive auction starting/ending notifications.",
                },
              "receive_new_works_notification":
                {
                  "type": "string",
                  "description": "Receive new works notifications.",
                },
              "receive_new_sales_notification":
                {
                  "type": "string",
                  "description": "Receive new sales notifications.",
                },
              "receive_promotion_notification":
                {
                  "type": "string",
                  "description": "Receive promotional notifications.",
                },
              "receive_order_notification":
                {
                  "type": "string",
                  "description": "Receive order notifications.",
                },
              "receive_viewing_room_notification":
                {
                  "type": "string",
                  "description": "Receive viewing room notifications.",
                },
              "receive_partner_show_notification":
                {
                  "type": "string",
                  "description": "Receive partner show notifications.",
                },
              "receive_partner_offer_notification":
                {
                  "type": "string",
                  "description": "Receive partner offer notifications.",
                },
              "email": { "type": "string", "description": "Email." },
              "email_frequency":
                {
                  "type": "string",
                  "description": "Frequency of marketing emails.",
                },
              "location": { "type": "string" },
              "collector_since": { "type": "string" },
              "publish_to_facebook":
                {
                  "type": "string",
                  "description": "Automatically publish saved artworks and followed artists to Facebook.",
                },
              "is_representative": { "type": "string" },
              "is_available_representative":
                {
                  "type": "string",
                  "description": "Is the admin available to be contacted about inquiries.",
                },
              "data_transfer_opt_out": { "type": "string" },
              "currency_preference":
                { "type": "string", "description": "Preferred currency." },
              "length_unit_preference":
                { "type": "string", "description": "Prefered unit of length." },
            },
          "description": "Enable a lab feature for a user.",
        },
      "postApiV1User":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "User name." },
              "display_follow_tooltip": { "type": "string" },
              "display_filter_tooltip": { "type": "string" },
              "display_inquiry_tooltip": { "type": "string" },
              "display_favorites_dialog": { "type": "string" },
              "phone": { "type": "string", "description": "Phone number." },
              "phone_number":
                { "type": "string", "description": "Normalized phone number." },
              "phone_country_code":
                {
                  "type": "string",
                  "description": "ISO 3166 country code for phone number.",
                },
              "gender": { "type": "string", "description": "Gender." },
              "price_range_min": { "type": "integer", "format": "int32" },
              "price_range_max": { "type": "integer", "format": "int32" },
              "artworks_per_year":
                {
                  "type": "string",
                  "description": "Number of artworks purchased per year.",
                },
              "is_collector":
                { "type": "string", "description": "Is a collector?" },
              "industry":
                {
                  "type": "string",
                  "description": "Works in the art industry?",
                },
              "profession": { "type": "string", "description": "Profession." },
              "notes":
                {
                  "type": "string",
                  "description": "Additional personal notes.",
                },
              "share_follows":
                {
                  "type": "string",
                  "description": "Shares FollowArtists, FollowGenes, and FollowProfiles with partners.",
                },
              "receive_purchase_notification":
                {
                  "type": "string",
                  "description": "Receive purchase notifications.",
                },
              "receive_outbid_notification":
                {
                  "type": "string",
                  "description": "Receive outbid auctions notifications.",
                },
              "receive_lot_opening_soon_notification":
                {
                  "type": "string",
                  "description": "Receive lot opening auctions notifications.",
                },
              "receive_sale_opening_closing_notification":
                {
                  "type": "string",
                  "description": "Receive auction starting/ending notifications.",
                },
              "receive_new_works_notification":
                {
                  "type": "string",
                  "description": "Receive new works notifications.",
                },
              "receive_new_sales_notification":
                {
                  "type": "string",
                  "description": "Receive new sales notifications.",
                },
              "receive_promotion_notification":
                {
                  "type": "string",
                  "description": "Receive promotional notifications.",
                },
              "receive_order_notification":
                {
                  "type": "string",
                  "description": "Receive order notifications.",
                },
              "receive_viewing_room_notification":
                {
                  "type": "string",
                  "description": "Receive viewing room notifications.",
                },
              "receive_partner_show_notification":
                {
                  "type": "string",
                  "description": "Receive partner show notifications.",
                },
              "receive_partner_offer_notification":
                {
                  "type": "string",
                  "description": "Receive partner offer notifications.",
                },
              "email": { "type": "string", "description": "User email." },
              "email_frequency":
                {
                  "type": "string",
                  "description": "Frequency of marketing emails.",
                },
              "location": { "type": "string" },
              "collector_since": { "type": "string" },
              "publish_to_facebook":
                {
                  "type": "string",
                  "description": "Automatically publish saved artworks and followed artists to Facebook.",
                },
              "is_representative": { "type": "string" },
              "is_available_representative":
                {
                  "type": "string",
                  "description": "Is the admin available to be contacted about inquiries.",
                },
              "data_transfer_opt_out": { "type": "string" },
              "currency_preference":
                { "type": "string", "description": "Preferred currency." },
              "length_unit_preference":
                { "type": "string", "description": "Prefered unit of length." },
              "password": { "type": "string", "description": "User password." },
              "paddle_number":
                { "type": "string", "description": "User paddle number." },
              "likely_to_purchase":
                {
                  "type": "string",
                  "description": "How likely a user is to purchase anything.",
                },
              "provider":
                { "type": "string", "description": "Authentication provider." },
              "oauth_token":
                { "type": "string", "description": "OAuth token." },
              "jwt":
                {
                  "type": "string",
                  "description": "JWT token used by oauth provider.",
                },
              "apple_uid":
                {
                  "type": "string",
                  "description": "User id provided by apple sign in.",
                },
              "id_token":
                {
                  "type": "string",
                  "description": "JWT used for apple sign in.",
                },
              "collector_level":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "User collector level.",
                },
              "sign_up_intent":
                {
                  "type": "string",
                  "description": "User action that led to signup",
                },
              "sign_up_referer":
                {
                  "type": "string",
                  "description": "Referer url that led to signup",
                },
              "accepted_terms_of_service":
                {
                  "type": "boolean",
                  "description": "If true, user has accepted terms of use and privacy policy",
                },
              "agreed_to_receive_emails":
                {
                  "type": "boolean",
                  "description": "If true, user has agreed to receive emails from Artsy",
                },
              "recaptcha_token":
                {
                  "type": "string",
                  "description": "Attempts to verify the source is a human (required for all but certain clients/providers)",
                },
            },
          "description": "Create a new user.",
        },
      "postApiV1UserIdentify":
        {
          "type": "object",
          "properties":
            {
              "email": { "type": "string", "description": "User email." },
              "recaptcha_token":
                { "type": "string", "description": "Recaptcha token." },
            },
          "required": ["email"],
          "description": "Check whether a user exists by email address (used by Artsy clients for authentication flows).",
        },
      "postApiV1UserUserIdAccessControl":
        {
          "type": "object",
          "properties":
            {
              "model": { "type": "string", "description": "Model." },
              "id":
                {
                  "type": "string",
                  "description": "Instance id of the model.",
                },
            },
          "required": ["model", "id"],
          "description": "Grants user access to a model.",
        },
      "putApiV1UserIdPassword":
        {
          "type": "object",
          "properties":
            {
              "new_password":
                { "type": "string", "description": "New password." },
              "password_confirmation":
                {
                  "type": "string",
                  "description": "New password confirmation.",
                },
            },
          "required": ["new_password", "password_confirmation"],
          "description": "Change a users password.",
        },
      "putApiV1User":
        {
          "type": "object",
          "properties":
            {
              "name": { "type": "string", "description": "Name." },
              "display_follow_tooltip": { "type": "string" },
              "display_filter_tooltip": { "type": "string" },
              "display_inquiry_tooltip": { "type": "string" },
              "display_favorites_dialog": { "type": "string" },
              "phone": { "type": "string", "description": "Phone number." },
              "phone_number":
                { "type": "string", "description": "Normalized phone number." },
              "phone_country_code":
                {
                  "type": "string",
                  "description": "ISO 3166 country code for phone number.",
                },
              "gender": { "type": "string", "description": "Gender." },
              "price_range_min": { "type": "integer", "format": "int32" },
              "price_range_max": { "type": "integer", "format": "int32" },
              "artworks_per_year":
                {
                  "type": "string",
                  "description": "Number of artworks purchased per year.",
                },
              "is_collector":
                { "type": "string", "description": "Is a collector?" },
              "industry":
                {
                  "type": "string",
                  "description": "Works in the art industry?",
                },
              "profession": { "type": "string", "description": "Profession." },
              "notes":
                {
                  "type": "string",
                  "description": "Additional personal notes.",
                },
              "share_follows":
                {
                  "type": "string",
                  "description": "Shares FollowArtists, FollowGenes, and FollowProfiles with partners.",
                },
              "receive_purchase_notification":
                {
                  "type": "string",
                  "description": "Receive purchase notifications.",
                },
              "receive_outbid_notification":
                {
                  "type": "string",
                  "description": "Receive outbid auctions notifications.",
                },
              "receive_lot_opening_soon_notification":
                {
                  "type": "string",
                  "description": "Receive lot opening auctions notifications.",
                },
              "receive_sale_opening_closing_notification":
                {
                  "type": "string",
                  "description": "Receive auction starting/ending notifications.",
                },
              "receive_new_works_notification":
                {
                  "type": "string",
                  "description": "Receive new works notifications.",
                },
              "receive_new_sales_notification":
                {
                  "type": "string",
                  "description": "Receive new sales notifications.",
                },
              "receive_promotion_notification":
                {
                  "type": "string",
                  "description": "Receive promotional notifications.",
                },
              "receive_order_notification":
                {
                  "type": "string",
                  "description": "Receive order notifications.",
                },
              "receive_viewing_room_notification":
                {
                  "type": "string",
                  "description": "Receive viewing room notifications.",
                },
              "receive_partner_show_notification":
                {
                  "type": "string",
                  "description": "Receive partner show notifications.",
                },
              "receive_partner_offer_notification":
                {
                  "type": "string",
                  "description": "Receive partner offer notifications.",
                },
              "email": { "type": "string", "description": "Email." },
              "email_frequency":
                {
                  "type": "string",
                  "description": "Frequency of marketing emails.",
                },
              "location": { "type": "string" },
              "collector_since": { "type": "string" },
              "publish_to_facebook":
                {
                  "type": "string",
                  "description": "Automatically publish saved artworks and followed artists to Facebook.",
                },
              "is_representative": { "type": "string" },
              "is_available_representative":
                {
                  "type": "string",
                  "description": "Is the admin available to be contacted about inquiries.",
                },
              "data_transfer_opt_out":
                {
                  "type": "boolean",
                  "description": "If true, user requests that personal data not be shared with or transferred to external parties",
                },
              "currency_preference":
                { "type": "string", "description": "Preferred currency." },
              "length_unit_preference":
                { "type": "string", "description": "Prefered unit of length." },
              "likely_to_purchase":
                {
                  "type": "string",
                  "description": "How likely a user is to purchase anything.",
                },
              "paddle_number":
                { "type": "string", "description": "User paddle number." },
              "collector_level":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "User collector level.",
                },
              "accepted_terms_of_service":
                {
                  "type": "boolean",
                  "description": "If true, user has accepted terms of use and privacy policy",
                },
              "agreed_to_receive_emails":
                {
                  "type": "boolean",
                  "description": "If true, user has agreed to receive emails from Artsy",
                },
            },
          "description": "Update an existing user.",
        },
      "putApiV1UsersResetPassword":
        {
          "type": "object",
          "properties":
            {
              "reset_password_token":
                {
                  "type": "string",
                  "description": "Reset password token sent in an email.",
                },
              "password": { "type": "string", "description": "New password." },
              "password_confirmation":
                {
                  "type": "string",
                  "description": "New password confirmation.",
                },
            },
          "required":
            ["reset_password_token", "password", "password_confirmation"],
          "description": "Reset a password given a password token.",
        },
      "postApiV1UsersSendResetPasswordInstructions":
        {
          "type": "object",
          "properties":
            { "email": { "type": "string", "description": "User email." } },
          "required": ["email"],
          "description": "Send reset password instructions.",
        },
      "postApiV1VerifiedRepresentatives":
        {
          "type": "object",
          "properties":
            {
              "artist_id": { "type": "string" },
              "partner_id": { "type": "string" },
            },
          "required": ["artist_id", "partner_id"],
          "description": "Create a verified representative.",
        },
      "postApiV1Video":
        {
          "type": "object",
          "properties":
            {
              "json_response":
                {
                  "type": "object",
                  "description": "JSON response from Vimeo.",
                },
            },
          "required": ["json_response"],
          "description": "Create a video.",
        },
      "putApiV1ViewingRoomIdSubsections":
        {
          "type": "object",
          "properties":
            {
              "subsections":
                {
                  "type": "array",
                  "items":
                    {
                      "type": "object",
                      "properties":
                        {
                          "attributes":
                            {
                              "type": "object",
                              "properties":
                                {
                                  "body": { "type": "string" },
                                  "caption": { "type": "string" },
                                  "title": { "type": "string" },
                                },
                            },
                          "ar_image_id": { "type": "string" },
                          "delete":
                            {
                              "type": "boolean",
                              "description": "If true, delete this subsection from the database",
                            },
                          "id": { "type": "string" },
                        },
                    },
                },
            },
          "required": ["subsections"],
          "description": "Update a viewing room's subsections.",
        },
      "putApiV1ViewingRoomIdViewingRoomArtworks":
        {
          "type": "object",
          "properties":
            {
              "artworks":
                {
                  "type": "array",
                  "items":
                    {
                      "type": "object",
                      "properties":
                        {
                          "artwork_id": { "type": "string" },
                          "delete": { "type": "boolean" },
                        },
                      "required": ["artwork_id"],
                    },
                },
            },
          "required": ["artworks"],
          "description": "Update a viewing room's artworks.",
        },
      "putApiV1ViewingRoom":
        {
          "type": "object",
          "properties":
            {
              "ar_image_id": { "type": "string", "description": "AR Image ID" },
              "body": { "type": "string", "description": "Main text" },
              "end_at": { "type": "string", "description": "End datetime" },
              "intro_statement":
                { "type": "string", "description": "Introduction" },
              "published": { "type": "boolean" },
              "pull_quote": { "type": "string", "description": "Pullquote" },
              "start_at": { "type": "string", "description": "Start datetime" },
              "time_zone": { "type": "string", "description": "Timezone" },
              "title": { "type": "string", "description": "Title" },
            },
          "description": "Update a viewing room.",
        },
      "postApiV1ViewingRoom":
        {
          "type": "object",
          "properties":
            {
              "partner_id": { "type": "string", "description": "Partner ID" },
              "ar_image_id": { "type": "string", "description": "AR Image ID" },
              "body": { "type": "string", "description": "Main text" },
              "end_at": { "type": "string", "description": "End datetime" },
              "intro_statement":
                { "type": "string", "description": "Introduction" },
              "pull_quote": { "type": "string", "description": "Pullquote" },
              "start_at": { "type": "string", "description": "Start datetime" },
              "time_zone": { "type": "string", "description": "Timezone" },
              "title": { "type": "string", "description": "Title" },
            },
          "required": ["partner_id"],
          "description": "Create a viewing room.",
        },
      "postApiV1AddressVerification":
        {
          "type": "object",
          "properties":
            {
              "address_line_1":
                { "type": "string", "description": "Address line 1" },
              "address_line_2":
                { "type": "string", "description": "Address line 2" },
              "city": { "type": "string", "description": "City" },
              "postal_code": { "type": "string", "description": "Postal code" },
              "region": { "type": "string", "description": "Region" },
              "country":
                {
                  "type": "string",
                  "description": "Country (ISO 2-letter code)",
                },
            },
          "required": ["address_line_1", "postal_code", "country"],
          "description": "Verify an address",
        },
      "postApiV1ClientApplicationIdClientApplicationPartner":
        {
          "type": "object",
          "properties":
            {
              "partner_id": { "type": "string", "description": "Partner id." },
            },
          "required": ["partner_id"],
        },
      "postApiV1FairBoothImport":
        {
          "type": "object",
          "properties":
            {
              "data":
                {
                  "type": "array",
                  "description": "Fair exhibitor data in json format, typically coming from Waves (see fair_booth_data.json for example)",
                  "items": { "type": "string" },
                },
              "fair_id": { "type": "string", "description": "Fair id." },
            },
          "required": ["data", "fair_id"],
          "description": "Executes fair booth creation process.",
        },
    },
}
